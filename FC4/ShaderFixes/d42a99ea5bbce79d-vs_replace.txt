// Purple in water in Shangria-La (MSAA2)

cbuffer CViewportShaderParameterProvider : register(b0)
{
  float4 _AmbientColorMultiplier : packoffset(c0);
  float4 _AmbientOcclusionRanges_SunOcclusionFactor : packoffset(c1);
  float4 _BloomAdaptationFactor : packoffset(c2);
  float4 _CameraDirection_FOVDeg : packoffset(c3);
  float4 _CameraDistances : packoffset(c4);
  float4 _CameraNearPlaneSize : packoffset(c5);
  float4 _CameraPositionFractions_ZOffsetWS : packoffset(c6);
  float4 _CameraPositionFractions_ZOffsetWS_Previous : packoffset(c7);
  float4 _CameraPosition_DistanceScale : packoffset(c8);
  float4 _CameraPosition_DistanceScale_Previous : packoffset(c9);
  float4x4 _CullingViewProjectionMatrix : packoffset(c10);
  float4 _DepthScale : packoffset(c14);
  float4 _DepthTextureRcpSize : packoffset(c15);
  float4 _DepthTextureScaleOffset : packoffset(c16);
  float4 _FogParams : packoffset(c17);
  float4 _FogSHB : packoffset(c18);
  float4 _FogSHG : packoffset(c19);
  float4 _FogSHR : packoffset(c20);
  float4 _HeightFogParams : packoffset(c21);
  float4x4 _InvProjectionMatrix : packoffset(c22);
  float4x4 _InvViewMatrix : packoffset(c26);
  float4x4 _ProjectionMatrix : packoffset(c30);
  float4 _TempSunDirection : packoffset(c34);
  float4x4 _ViewMatrix : packoffset(c35);
  float4 _ViewPoint_ShadowProjDepthMin : packoffset(c39);
  float4x4 _ViewProjectionMatrix : packoffset(c40);
  float4x4 _ViewRotProjectionMatrix : packoffset(c44);
  float4x4 _ViewRotProjectionMatrix_Previous : packoffset(c48);
  float4 _ViewportSize : packoffset(c52);
  float2 _MotionVectorOffsets : packoffset(c53);
  float3 _CameraRight : packoffset(c54);
  float3 _CameraUp : packoffset(c55);
  float3 _EnvironmentMapColorOffset : packoffset(c56);
  float3 _EnvironmentMapColorScale : packoffset(c57);
}

cbuffer CGlobalShaderParameterProvider : register(b1)
{
  float4 _BurnColor : packoffset(c0);
  float4 _BurnParams : packoffset(c1);
  float4 _BurnParams2 : packoffset(c2);
  float4 _BurnParams3 : packoffset(c3);
  float4 _CascadedShadowScaleOffsetTile0 : packoffset(c4);
  float4 _CascadedShadowScaleOffsetTile1 : packoffset(c5);
  float4 _GlobalScalars : packoffset(c6);
  float4 _SSS_MiscParams : packoffset(c7);
  float4 _WindSimParamsX : packoffset(c8);
  float4 _WindSimParamsY : packoffset(c9);
  float2 _RangeDepthCompression : packoffset(c10);
  float3 _SSS_Color : packoffset(c11);
  int _BRDFHighQuality : packoffset(c11.w);
}

cbuffer ShangrilaOcean : register(b2)
{
  float3 _NormalIncidenceReflectance : packoffset(c0);
  float3 _ConstantReflectanceFactor : packoffset(c1);
  float _TexGeoWavesBlendCff : packoffset(c1.w);
  float4 _NormalMapParams1 : packoffset(c2);
  float4 _NormalMapParams2 : packoffset(c3);
  float4 _NormalMapParams3 : packoffset(c4);
  float4 _NormalMapParams4 : packoffset(c5);
  float _NormalsScale : packoffset(c6);
  float _HighNormalsScale : packoffset(c6.y);
  float2 _WavesFade : packoffset(c6.z);
  float2 _WavesHiResFade : packoffset(c7);
  float4 _Octave1Params : packoffset(c8);
  float2 _Octave1Dir : packoffset(c9);
  float4 _Octave2Params : packoffset(c10);
  float2 _Octave2Dir : packoffset(c11);
  float4 _Octave3Params : packoffset(c12);
  float2 _Octave3Dir : packoffset(c13);
  float4 _Octave4Params : packoffset(c14);
  float2 _Octave4Dir : packoffset(c15);
  float4 _Octave5Params : packoffset(c16);
  float2 _Octave5Dir : packoffset(c17);
  float4 _Octave6Params : packoffset(c18);
  float2 _Octave6Dir : packoffset(c19);
  float4 _Octave7Params : packoffset(c20);
  float2 _Octave7Dir : packoffset(c21);
  float4 _Octave8Params : packoffset(c22);
  float2 _Octave8Dir : packoffset(c23);
  float _DepthDistanceCff : packoffset(c23.z);
  float2 _Smoothness : packoffset(c24);
  float2 _CausticsParams : packoffset(c24.z);
  float2 _CausticsDepthFade : packoffset(c25);
  float2 _CausticsRcpDepthFade : packoffset(c25.z);
  float4 _FoamLayer1Params : packoffset(c26);
  float4 _FoamLayer2Params : packoffset(c27);
  float4 _FoamSettings : packoffset(c28);
  float4 _FoamParams : packoffset(c29);
  float4 _NormalsMaskParams : packoffset(c30);
  float3 _OceanColorShallow : packoffset(c31);
  float3 _OceanColorDeep : packoffset(c32);
  float _DampingFadeOut : packoffset(c32.w);
  float _ShallowWaterDepth : packoffset(c33);
  float4 _WavesCrestWeights : packoffset(c34);
  float _RimLightWidth : packoffset(c35);
  float _RimLightIntensity : packoffset(c35.y);
  float3 _DisplacementParams : packoffset(c36);
  float4 _MaterialPickingID : packoffset(c37);
}

cbuffer COceanDampingProvider : register(b3)
{
  float4 _HideOceanDampingTexelOffset : packoffset(c0);
  float4 _WorldScaleAndOffset : packoffset(c1);
}

cbuffer COceanParameterProvider : register(b4)
{
  float4 _CornerPointsWS[4] : packoffset(c0);
  float4 _OceanParameters : packoffset(c4);
  float4 _SkyParameters : packoffset(c5);
  float4 _VertexAdjustments : packoffset(c6);
  float4 _WavesAmpHDir_ampVDirOverWL[8] : packoffset(c7);
  float4 _WavesDir_oneOverWL_ampHWL[8] : packoffset(c15);
  float4 _WavesParameters[8] : packoffset(c23);
  float2 _GridSize : packoffset(c31);
  float _OneOverWavesFade : packoffset(c31.z);
  float _OneOverWavesHiResFade : packoffset(c31.w);
  float _WaterLevel : packoffset(c32);
  float _WavesCrestWeightsNorm[4] : packoffset(c33);
}
SamplerState DampingTexture__SampObj___s : register(s0);
Texture2D<float4> DampingTexture__TexObj__ : register(t0);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  float4 v0 : position0,
  out float4 o0 : SV_Position0,
  out float3 o1 : TEXCOORD0,
  out float3 o2 : TEXCOORD1,
  out float3 o3 : TEXCOORD2,
  out float2 o4 : TEXCOORD3)
{
  float4 r0,r1,r2,r3,r4,r5;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = log2(abs(v0.y));
  r0.x = _OceanParameters.x * r0.x;
  r0.x = exp2(r0.x);
  r0.y = 1.000000000e+000 + -r0.x;
  r0.z = 1.000000000e+000 + -v0.x;
  r1.xyz = _CornerPointsWS[0].xyw * r0.zzz;
  r1.xyz = v0.xxx * _CornerPointsWS[1].xyw + r1.xyz;
  r2.xyz = _CornerPointsWS[2].xyw * r0.zzz;
  r2.xyz = v0.xxx * _CornerPointsWS[3].xyw + r2.xyz;
  r0.xzw = r2.xyz * r0.xxx;
  r0.xyz = r0.yyy * r1.xyz + r0.xzw;
  r0.xy = r0.xy / r0.zz;
  r1.xy = _WorldScaleAndOffset.zw + r0.xy;
  r1.xy = _WorldScaleAndOffset.xy * r1.xy;
  r0.w = DampingTexture__TexObj__.SampleLevel(DampingTexture__SampObj___s, r1.xy, 0.000000000e+000).y;
  r0.z = _WaterLevel;
  r1.xyz = -_CameraPosition_DistanceScale.xyz + r0.xyz;
  r1.x = dot(r1.xyz, r1.xyz);
  r1.x = sqrt(r1.x);
  r1.x = _OneOverWavesFade * r1.x;
  r1.x = max(r1.x, 2.000000030e-001);
  r1.x = min(r1.x, 1.000000000e+000);
  r1.x = -r1.x * 1.250000000e+000 + 1.250000000e+000;
  r1.x = log2(r1.x);
  r1.x = _WavesFade.y * r1.x;
  r1.x = exp2(r1.x);
  r1.yz = float2(-5.000000e-001,-2.000000e+000) + _GlobalScalars.yy;
  r2.xyz = float3(0.000000e+000,0.000000e+000,0.000000e+000);
  r1.w = 0.000000000e+000;
  while (true) {
    r2.w = (int)r1.w >= (int)4;
    if (r2.w != 0) break;
    r2.w = dot(_WavesDir_oneOverWL_ampHWL[r1.w].xy, r0.xy);
    r3.xy = -_WavesParameters[r1.w].xx * r1.yz + r2.ww;
    sincos(r3.x, r3.x, r4.x);
    r3.xz = _WavesAmpHDir_ampVDirOverWL[r1.w].xy * r3.xx;
    r2.w = _WavesParameters[r1.w].z * r4.x;
    r2.w = 1.500000000e+000 * r2.w;
    sincos(r3.y, r4.x, r5.x);
    r3.yw = _WavesAmpHDir_ampVDirOverWL[r1.w].xy * r4.xx;
    r3.xy = min(r3.yw, r3.xz);
    r3.z = _WavesParameters[r1.w].z * r5.x;
    r2.w = max(r2.w, r3.z);
    r2.xy = -r3.xy + r2.xy;
    r2.z = r2.z + r2.w;
    r1.w = (int)r1.w + 1;
  }
  r1.xyz = r2.xyz * r1.xxx;
  r1.xyz = r1.xyz * r0.www + r0.xyz;
  r1.w = 1.000000000e+000;
  r2.x = dot(r1.xyzw, _ViewProjectionMatrix._m00_m10_m20_m30);
  r2.y = dot(r1.xyzw, _ViewProjectionMatrix._m01_m11_m21_m31);
  o0.z = dot(r1.xyzw, _ViewProjectionMatrix._m02_m12_m22_m32);
  r2.w = dot(r1.xyzw, _ViewProjectionMatrix._m03_m13_m23_m33);
  o0.xyw = r2.xyw; // moved up

float4 stereo = StereoParams.Load(0);
r2.x += stereo.x * (r2.w - stereo.y);

  r3.xyzw = _DepthTextureScaleOffset.xyzw * r2.xyww;
  o2.xy = r3.xy + r3.zw;
  r1.xyz = _CameraPosition_DistanceScale.xyz + -r1.xyz;
  r1.w = dot(r1.xyz, r1.xyz);
  r1.w = rsqrt(r1.w);
  o1.xyz = r1.xyz * r1.www;
  o2.z = r2.w;
  o3.xyz = r0.xyz;
  o4.x = r0.w;
  o4.y = 1.000000000e+000;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4 _AmbientColorMultiplier;    // Offset:    0 Size:    16 [unused]
//   float4 _AmbientOcclusionRanges_SunOcclusionFactor;// Offset:   16 Size:    16 [unused]
//   float4 _BloomAdaptationFactor;     // Offset:   32 Size:    16 [unused]
//   float4 _CameraDirection_FOVDeg;    // Offset:   48 Size:    16 [unused]
//   float4 _CameraDistances;           // Offset:   64 Size:    16 [unused]
//   float4 _CameraNearPlaneSize;       // Offset:   80 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS;// Offset:   96 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS_Previous;// Offset:  112 Size:    16 [unused]
//   float4 _CameraPosition_DistanceScale;// Offset:  128 Size:    16
//   float4 _CameraPosition_DistanceScale_Previous;// Offset:  144 Size:    16 [unused]
//   float4x4 _CullingViewProjectionMatrix;// Offset:  160 Size:    64 [unused]
//   float4 _DepthScale;                // Offset:  224 Size:    16 [unused]
//   float4 _DepthTextureRcpSize;       // Offset:  240 Size:    16 [unused]
//   float4 _DepthTextureScaleOffset;   // Offset:  256 Size:    16
//   float4 _FogParams;                 // Offset:  272 Size:    16 [unused]
//   float4 _FogSHB;                    // Offset:  288 Size:    16 [unused]
//   float4 _FogSHG;                    // Offset:  304 Size:    16 [unused]
//   float4 _FogSHR;                    // Offset:  320 Size:    16 [unused]
//   float4 _HeightFogParams;           // Offset:  336 Size:    16 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  352 Size:    64 [unused]
//   float4x4 _InvViewMatrix;           // Offset:  416 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  480 Size:    64 [unused]
//   float4 _TempSunDirection;          // Offset:  544 Size:    16 [unused]
//   float4x4 _ViewMatrix;              // Offset:  560 Size:    64 [unused]
//   float4 _ViewPoint_ShadowProjDepthMin;// Offset:  624 Size:    16 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:  640 Size:    64
//   float4x4 _ViewRotProjectionMatrix; // Offset:  704 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix_Previous;// Offset:  768 Size:    64 [unused]
//   float4 _ViewportSize;              // Offset:  832 Size:    16 [unused]
//   float2 _MotionVectorOffsets;       // Offset:  848 Size:     8 [unused]
//   float3 _CameraRight;               // Offset:  864 Size:    12 [unused]
//   float3 _CameraUp;                  // Offset:  880 Size:    12 [unused]
//   float3 _EnvironmentMapColorOffset; // Offset:  896 Size:    12 [unused]
//   float3 _EnvironmentMapColorScale;  // Offset:  912 Size:    12 [unused]
//
// }
//
// cbuffer CGlobalShaderParameterProvider
// {
//
//   float4 _BurnColor;                 // Offset:    0 Size:    16 [unused]
//   float4 _BurnParams;                // Offset:   16 Size:    16 [unused]
//   float4 _BurnParams2;               // Offset:   32 Size:    16 [unused]
//   float4 _BurnParams3;               // Offset:   48 Size:    16 [unused]
//   float4 _CascadedShadowScaleOffsetTile0;// Offset:   64 Size:    16 [unused]
//   float4 _CascadedShadowScaleOffsetTile1;// Offset:   80 Size:    16 [unused]
//   float4 _GlobalScalars;             // Offset:   96 Size:    16
//   float4 _SSS_MiscParams;            // Offset:  112 Size:    16 [unused]
//   float4 _WindSimParamsX;            // Offset:  128 Size:    16 [unused]
//   float4 _WindSimParamsY;            // Offset:  144 Size:    16 [unused]
//   float2 _RangeDepthCompression;     // Offset:  160 Size:     8 [unused]
//   float3 _SSS_Color;                 // Offset:  176 Size:    12 [unused]
//   int _BRDFHighQuality;              // Offset:  188 Size:     4 [unused]
//
// }
//
// cbuffer ShangrilaOcean
// {
//
//   float3 _NormalIncidenceReflectance;// Offset:    0 Size:    12 [unused]
//   float3 _ConstantReflectanceFactor; // Offset:   16 Size:    12 [unused]
//   float _TexGeoWavesBlendCff;        // Offset:   28 Size:     4 [unused]
//   float4 _NormalMapParams1;          // Offset:   32 Size:    16 [unused]
//   float4 _NormalMapParams2;          // Offset:   48 Size:    16 [unused]
//   float4 _NormalMapParams3;          // Offset:   64 Size:    16 [unused]
//   float4 _NormalMapParams4;          // Offset:   80 Size:    16 [unused]
//   float _NormalsScale;               // Offset:   96 Size:     4 [unused]
//   float _HighNormalsScale;           // Offset:  100 Size:     4 [unused]
//   float2 _WavesFade;                 // Offset:  104 Size:     8
//   float2 _WavesHiResFade;            // Offset:  112 Size:     8 [unused]
//   float4 _Octave1Params;             // Offset:  128 Size:    16 [unused]
//   float2 _Octave1Dir;                // Offset:  144 Size:     8 [unused]
//   float4 _Octave2Params;             // Offset:  160 Size:    16 [unused]
//   float2 _Octave2Dir;                // Offset:  176 Size:     8 [unused]
//   float4 _Octave3Params;             // Offset:  192 Size:    16 [unused]
//   float2 _Octave3Dir;                // Offset:  208 Size:     8 [unused]
//   float4 _Octave4Params;             // Offset:  224 Size:    16 [unused]
//   float2 _Octave4Dir;                // Offset:  240 Size:     8 [unused]
//   float4 _Octave5Params;             // Offset:  256 Size:    16 [unused]
//   float2 _Octave5Dir;                // Offset:  272 Size:     8 [unused]
//   float4 _Octave6Params;             // Offset:  288 Size:    16 [unused]
//   float2 _Octave6Dir;                // Offset:  304 Size:     8 [unused]
//   float4 _Octave7Params;             // Offset:  320 Size:    16 [unused]
//   float2 _Octave7Dir;                // Offset:  336 Size:     8 [unused]
//   float4 _Octave8Params;             // Offset:  352 Size:    16 [unused]
//   float2 _Octave8Dir;                // Offset:  368 Size:     8 [unused]
//   float _DepthDistanceCff;           // Offset:  376 Size:     4 [unused]
//   float2 _Smoothness;                // Offset:  384 Size:     8 [unused]
//   float2 _CausticsParams;            // Offset:  392 Size:     8 [unused]
//   float2 _CausticsDepthFade;         // Offset:  400 Size:     8 [unused]
//   float2 _CausticsRcpDepthFade;      // Offset:  408 Size:     8 [unused]
//   float4 _FoamLayer1Params;          // Offset:  416 Size:    16 [unused]
//   float4 _FoamLayer2Params;          // Offset:  432 Size:    16 [unused]
//   float4 _FoamSettings;              // Offset:  448 Size:    16 [unused]
//   float4 _FoamParams;                // Offset:  464 Size:    16 [unused]
//   float4 _NormalsMaskParams;         // Offset:  480 Size:    16 [unused]
//   float3 _OceanColorShallow;         // Offset:  496 Size:    12 [unused]
//   float3 _OceanColorDeep;            // Offset:  512 Size:    12 [unused]
//   float _DampingFadeOut;             // Offset:  524 Size:     4 [unused]
//   float _ShallowWaterDepth;          // Offset:  528 Size:     4 [unused]
//   float4 _WavesCrestWeights;         // Offset:  544 Size:    16 [unused]
//   float _RimLightWidth;              // Offset:  560 Size:     4 [unused]
//   float _RimLightIntensity;          // Offset:  564 Size:     4 [unused]
//   float3 _DisplacementParams;        // Offset:  576 Size:    12 [unused]
//   float4 _MaterialPickingID;         // Offset:  592 Size:    16 [unused]
//
// }
//
// cbuffer COceanDampingProvider
// {
//
//   float4 _HideOceanDampingTexelOffset;// Offset:    0 Size:    16 [unused]
//   float4 _WorldScaleAndOffset;       // Offset:   16 Size:    16
//
// }
//
// cbuffer COceanParameterProvider
// {
//
//   float4 _CornerPointsWS[4];         // Offset:    0 Size:    64
//   float4 _OceanParameters;           // Offset:   64 Size:    16
//   float4 _SkyParameters;             // Offset:   80 Size:    16 [unused]
//   float4 _VertexAdjustments;         // Offset:   96 Size:    16 [unused]
//   float4 _WavesAmpHDir_ampVDirOverWL[8];// Offset:  112 Size:   128
//   float4 _WavesDir_oneOverWL_ampHWL[8];// Offset:  240 Size:   128
//   float4 _WavesParameters[8];        // Offset:  368 Size:   128
//   float2 _GridSize;                  // Offset:  496 Size:     8 [unused]
//   float _OneOverWavesFade;           // Offset:  504 Size:     4
//   float _OneOverWavesHiResFade;      // Offset:  508 Size:     4 [unused]
//   float _WaterLevel;                 // Offset:  512 Size:     4
//   float _WavesCrestWeightsNorm[4];   // Offset:  528 Size:    52 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// DampingTexture__SampObj__         sampler      NA          NA    0        1
// DampingTexture__TexObj__          texture  float4          2d    0        1
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// CGlobalShaderParameterProvider    cbuffer      NA          NA    1        1
// ShangrilaOcean                    cbuffer      NA          NA    2        1
// COceanDampingProvider             cbuffer      NA          NA    3        1
// COceanParameterProvider           cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xy          4     NONE   float   xy  
//
vs_4_1
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[44], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_constantbuffer cb2[7], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[33], dynamicIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input v0.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xy
dcl_temps 6
log r0.x, |v0.y|
mul r0.x, r0.x, cb4[4].x
exp r0.x, r0.x
add r0.y, -r0.x, l(1.000000)
add r0.z, -v0.x, l(1.000000)
mul r1.xyz, r0.zzzz, cb4[0].xywx
mad r1.xyz, v0.xxxx, cb4[1].xywx, r1.xyzx
mul r2.xyz, r0.zzzz, cb4[2].xywx
mad r2.xyz, v0.xxxx, cb4[3].xywx, r2.xyzx
mul r0.xzw, r0.xxxx, r2.xxyz
mad r0.xyz, r0.yyyy, r1.xyzx, r0.xzwx
div r0.xy, r0.xyxx, r0.zzzz
add r1.xy, r0.xyxx, cb3[1].zwzz
mul r1.xy, r1.xyxx, cb3[1].xyxx
sample_l r0.w, r1.xyxx, t0.xzwy, s0, l(0.000000)
mov r0.z, cb4[32].x
add r1.xyz, r0.xyzx, -cb0[8].xyzx
dp3 r1.x, r1.xyzx, r1.xyzx
sqrt r1.x, r1.x
mul r1.x, r1.x, cb4[31].z
max r1.x, r1.x, l(0.200000)
min r1.x, r1.x, l(1.000000)
mad r1.x, -r1.x, l(1.250000), l(1.250000)
log r1.x, r1.x
mul r1.x, r1.x, cb2[6].w
exp r1.x, r1.x
add r1.yz, cb1[6].yyyy, l(0.000000, -0.500000, -2.000000, 0.000000)
mov r2.xyz, l(0,0,0,0)
mov r1.w, l(0)
loop 
  ige r2.w, r1.w, l(4)
  breakc_nz r2.w
  dp2 r2.w, cb4[r1.w + 15].xyxx, r0.xyxx
  mad r3.xy, -cb4[r1.w + 23].xxxx, r1.yzyy, r2.wwww
  sincos r3.x, r4.x, r3.x
  mul r3.xz, r3.xxxx, cb4[r1.w + 7].xxyx
  mul r2.w, r4.x, cb4[r1.w + 23].z
  mul r2.w, r2.w, l(1.500000)
  sincos r4.x, r5.x, r3.y
  mul r3.yw, r4.xxxx, cb4[r1.w + 7].xxxy
  min r3.xy, r3.ywyy, r3.xzxx
  mul r3.z, r5.x, cb4[r1.w + 23].z
  max r2.w, r2.w, r3.z
  add r2.xy, r2.xyxx, -r3.xyxx
  add r2.z, r2.w, r2.z
  iadd r1.w, r1.w, l(1)
endloop 
mul r1.xyz, r1.xxxx, r2.xyzx
mad r1.xyz, r1.xyzx, r0.wwww, r0.xyzx
mov r1.w, l(1.000000)
dp4 r2.x, r1.xyzw, cb0[40].xyzw
dp4 r2.y, r1.xyzw, cb0[41].xyzw
dp4 o0.z, r1.xyzw, cb0[42].xyzw
dp4 r2.w, r1.xyzw, cb0[43].xyzw
mul r3.xyzw, r2.xyww, cb0[16].xyzw
add o2.xy, r3.zwzz, r3.xyxx
add r1.xyz, -r1.xyzx, cb0[8].xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul o1.xyz, r1.wwww, r1.xyzx
mov o0.xyw, r2.xyxw
mov o2.z, r2.w
mov o3.xyz, r0.xyzx
mov o4.x, r0.w
mov o4.y, l(1.000000)
ret 
// Approximately 66 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
