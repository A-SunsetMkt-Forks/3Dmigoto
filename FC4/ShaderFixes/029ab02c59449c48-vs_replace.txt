
cbuffer CViewportShaderParameterProvider : register(b0)
{
  float4 _AmbientColorMultiplier : packoffset(c0);
  float4 _AmbientOcclusionRanges_SunOcclusionFactor : packoffset(c1);
  float4 _BloomAdaptationFactor : packoffset(c2);
  float4 _CameraDirection_FOVDeg : packoffset(c3);
  float4 _CameraDistances : packoffset(c4);
  float4 _CameraNearPlaneSize : packoffset(c5);
  float4 _CameraPositionFractions_ZOffsetWS : packoffset(c6);
  float4 _CameraPositionFractions_ZOffsetWS_Previous : packoffset(c7);
  float4 _CameraPosition_DistanceScale : packoffset(c8);
  float4 _CameraPosition_DistanceScale_Previous : packoffset(c9);
  float4x4 _CullingViewProjectionMatrix : packoffset(c10);
  float4 _DepthScale : packoffset(c14);
  float4 _DepthTextureRcpSize : packoffset(c15);
  float4 _DepthTextureScaleOffset : packoffset(c16);
  float4 _FogParams : packoffset(c17);
  float4 _FogSHB : packoffset(c18);
  float4 _FogSHG : packoffset(c19);
  float4 _FogSHR : packoffset(c20);
  float4 _HeightFogParams : packoffset(c21);
  float4x4 _InvProjectionMatrix : packoffset(c22);
  float4x4 _InvViewMatrix : packoffset(c26);
  float4x4 _ProjectionMatrix : packoffset(c30);
  float4 _TempSunDirection : packoffset(c34);
  float4x4 _ViewMatrix : packoffset(c35);
  float4 _ViewPoint_ShadowProjDepthMin : packoffset(c39);
  float4x4 _ViewProjectionMatrix : packoffset(c40);
  float4x4 _ViewRotProjectionMatrix : packoffset(c44);
  float4x4 _ViewRotProjectionMatrix_Previous : packoffset(c48);
  float4 _ViewportSize : packoffset(c52);
  float2 _MotionVectorOffsets : packoffset(c53);
  float3 _CameraRight : packoffset(c54);
  float3 _CameraUp : packoffset(c55);
  float3 _EnvironmentMapColorOffset : packoffset(c56);
  float3 _EnvironmentMapColorScale : packoffset(c57);
}

cbuffer CGlobalShaderParameterProvider : register(b1)
{
  float4 _BurnColor : packoffset(c0);
  float4 _BurnParams : packoffset(c1);
  float4 _BurnParams2 : packoffset(c2);
  float4 _BurnParams3 : packoffset(c3);
  float4 _CascadedShadowScaleOffsetTile0 : packoffset(c4);
  float4 _CascadedShadowScaleOffsetTile1 : packoffset(c5);
  float4 _GlobalScalars : packoffset(c6);
  float4 _SSS_MiscParams : packoffset(c7);
  float4 _WindSimParamsX : packoffset(c8);
  float4 _WindSimParamsY : packoffset(c9);
  float2 _RangeDepthCompression : packoffset(c10);
  float3 _SSS_Color : packoffset(c11);
  int _BRDFHighQuality : packoffset(c11.w);
}

cbuffer ShangrilaOcean : register(b2)
{
  float3 _NormalIncidenceReflectance : packoffset(c0);
  float3 _ConstantReflectanceFactor : packoffset(c1);
  float _TexGeoWavesBlendCff : packoffset(c1.w);
  float4 _NormalMapParams1 : packoffset(c2);
  float4 _NormalMapParams2 : packoffset(c3);
  float4 _NormalMapParams3 : packoffset(c4);
  float4 _NormalMapParams4 : packoffset(c5);
  float _NormalsScale : packoffset(c6);
  float _HighNormalsScale : packoffset(c6.y);
  float2 _WavesFade : packoffset(c6.z);
  float2 _WavesHiResFade : packoffset(c7);
  float4 _Octave1Params : packoffset(c8);
  float2 _Octave1Dir : packoffset(c9);
  float4 _Octave2Params : packoffset(c10);
  float2 _Octave2Dir : packoffset(c11);
  float4 _Octave3Params : packoffset(c12);
  float2 _Octave3Dir : packoffset(c13);
  float4 _Octave4Params : packoffset(c14);
  float2 _Octave4Dir : packoffset(c15);
  float4 _Octave5Params : packoffset(c16);
  float2 _Octave5Dir : packoffset(c17);
  float4 _Octave6Params : packoffset(c18);
  float2 _Octave6Dir : packoffset(c19);
  float4 _Octave7Params : packoffset(c20);
  float2 _Octave7Dir : packoffset(c21);
  float4 _Octave8Params : packoffset(c22);
  float2 _Octave8Dir : packoffset(c23);
  float _DepthDistanceCff : packoffset(c23.z);
  float2 _Smoothness : packoffset(c24);
  float2 _CausticsParams : packoffset(c24.z);
  float2 _CausticsDepthFade : packoffset(c25);
  float2 _CausticsRcpDepthFade : packoffset(c25.z);
  float4 _FoamLayer1Params : packoffset(c26);
  float4 _FoamLayer2Params : packoffset(c27);
  float4 _FoamSettings : packoffset(c28);
  float4 _FoamParams : packoffset(c29);
  float4 _NormalsMaskParams : packoffset(c30);
  float3 _OceanColorShallow : packoffset(c31);
  float3 _OceanColorDeep : packoffset(c32);
  float _DampingFadeOut : packoffset(c32.w);
  float _ShallowWaterDepth : packoffset(c33);
  float4 _WavesCrestWeights : packoffset(c34);
  float _RimLightWidth : packoffset(c35);
  float _RimLightIntensity : packoffset(c35.y);
  float3 _DisplacementParams : packoffset(c36);
  float4 _MaterialPickingID : packoffset(c37);
}

cbuffer COceanDampingProvider : register(b3)
{
  float4 _HideOceanDampingTexelOffset : packoffset(c0);
  float4 _WorldScaleAndOffset : packoffset(c1);
}

cbuffer COceanParameterProvider : register(b4)
{
  float4 _CornerPointsWS[4] : packoffset(c0);
  float4 _OceanParameters : packoffset(c4);
  float4 _SkyParameters : packoffset(c5);
  float4 _VertexAdjustments : packoffset(c6);
  float4 _WavesAmpHDir_ampVDirOverWL[8] : packoffset(c7);
  float4 _WavesDir_oneOverWL_ampHWL[8] : packoffset(c15);
  float4 _WavesParameters[8] : packoffset(c23);
  float2 _GridSize : packoffset(c31);
  float _OneOverWavesFade : packoffset(c31.z);
  float _OneOverWavesHiResFade : packoffset(c31.w);
  float _WaterLevel : packoffset(c32);
  float _WavesCrestWeightsNorm[4] : packoffset(c33);
}
SamplerState DampingTexture__SampObj___s : register(s0);
Texture2D<float4> DampingTexture__TexObj__ : register(t0);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  float4 v0 : position0,
  out float4 o0 : SV_Position0,
  out float3 o1 : TEXCOORD0,
  out float3 o2 : TEXCOORD1,
  out float3 o3 : TEXCOORD2,
  out float3 o4 : TEXCOORD3,
  out float3 o5 : TEXCOORD4,
  out float3 o6 : TEXCOORD5,
  out float3 o7 : TEXCOORD6,
  out float4 o8 : TEXCOORD7,
  out float4 o9 : TEXCOORD8,
  out float4 o10 : TEXCOORD9,
  out float2 o11 : TEXCOORD10)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask;
  r0.x = log2(abs(v0.y));
  r0.x = _OceanParameters.x * r0.x;
  r0.x = exp2(r0.x);
  r0.y = 1.000000000e+000 + -v0.x;
  r1.xyz = _CornerPointsWS[2].xyw * r0.yyy;
  r0.yzw = _CornerPointsWS[0].xyw * r0.yyy;
  r0.yzw = v0.xxx * _CornerPointsWS[1].xyw + r0.yzw;
  r1.xyz = v0.xxx * _CornerPointsWS[3].xyw + r1.xyz;
  r1.xyz = r1.xyz * r0.xxx;
  r0.x = 1.000000000e+000 + -r0.x;
  r0.xyz = r0.xxx * r0.yzw + r1.xyz;
  r0.xy = r0.xy / r0.zz;
  r0.w = 1.000000000e+000;
  r0.z = _WaterLevel;
  r1.y = dot(r0.xyzw, _ViewProjectionMatrix._m01_m11_m21_m31);
  r1.x = dot(r0.xyzw, _ViewProjectionMatrix._m00_m10_m20_m30);
  r1.w = dot(r0.xyzw, _ViewProjectionMatrix._m03_m13_m23_m33);
  o0.z = dot(r0.xyzw, _ViewProjectionMatrix._m02_m12_m22_m32);


//Mike_ar69 - Stereo Shift
float4 r21;
float4 stereo = StereoParams.Load(0);
r21.xyw = r1.xyw;
r1.x += stereo.x * (r1.w - stereo.y);
o0.xyw = r21.xyw;


  r2.xyz = -_CameraPosition_DistanceScale.yzx + r0.yzx;
  r0.w = dot(r2.xyz, r2.xyz);
  r0.w = rsqrt(r0.w);
  r2.yzw = r2.xyz * r0.www;
  r2.x = 1.000000000e+000;
  r3.x = dot(_FogSHR.xyzw, r2.xyzw);
  r3.y = dot(_FogSHG.xyzw, r2.xyzw);
  r3.z = dot(_FogSHB.xyzw, r2.xyzw);
  o1.xyz = max(r3.xyz, float3(0.000000e+000,0.000000e+000,0.000000e+000));
  o2.z = 1.000000e+000 / _TexGeoWavesBlendCff;
  o2.xy = float2(0.000000e+000,0.000000e+000);
  o3.xyz = _CameraPosition_DistanceScale.xyz + -r0.xyz;
  o7.xyz = r0.xyz;
  r2.xyzw = _DepthTextureScaleOffset.xyzw * r1.xyww;
  r0.zw = r1.ww + -r1.xy;
  r3.x = r1.w + r1.x;
  r1.x = 5.000000000e-001 * r3.x;
  r1.yz = float2(5.000000e-001,5.000000e-001) * r0.zw;
  o4.xy = r2.xy + r2.zw;
  o4.z = r1.w;
  o5.xyz = r1.yzw;
  o6.xyz = r1.xzw;
  r0.z = _NormalMapParams1.y * _GlobalScalars.y;
  r0.zw = _NormalMapParams1.zw * r0.zz;
  o8.xy = r0.xy * _NormalMapParams1.xx + r0.zw;
  r0.z = _NormalMapParams2.y * _GlobalScalars.y;
  r0.zw = _NormalMapParams2.zw * r0.zz;
  o8.zw = r0.xy * _NormalMapParams2.xx + r0.zw;
  r0.z = _NormalMapParams3.y * _GlobalScalars.y;
  r0.zw = _NormalMapParams3.zw * r0.zz;
  o9.xy = r0.xy * _NormalMapParams3.xx + r0.zw;
  r0.z = _NormalMapParams4.y * _GlobalScalars.y;
  r0.zw = _NormalMapParams4.zw * r0.zz;
  o9.zw = r0.xy * _NormalMapParams4.xx + r0.zw;
  r0.z = _NormalsMaskParams.y * _GlobalScalars.y;
  r0.zw = _NormalsMaskParams.zw * r0.zz;
  o10.xy = r0.xy * _NormalsMaskParams.xx + r0.zw;
  r0.xy = _WorldScaleAndOffset.zw + r0.xy;
  r0.xy = _WorldScaleAndOffset.xy * r0.xy;
  r0.xyzw = DampingTexture__TexObj__.SampleLevel(DampingTexture__SampObj___s, r0.xy, 0.000000000e+000).xyzw;
  o11.x = r0.y;
  o10.zw = float2(0.000000e+000,0.000000e+000);
  o11.y = 1.000000000e+000;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4 _AmbientColorMultiplier;    // Offset:    0 Size:    16 [unused]
//   float4 _AmbientOcclusionRanges_SunOcclusionFactor;// Offset:   16 Size:    16 [unused]
//   float4 _BloomAdaptationFactor;     // Offset:   32 Size:    16 [unused]
//   float4 _CameraDirection_FOVDeg;    // Offset:   48 Size:    16 [unused]
//   float4 _CameraDistances;           // Offset:   64 Size:    16 [unused]
//   float4 _CameraNearPlaneSize;       // Offset:   80 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS;// Offset:   96 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS_Previous;// Offset:  112 Size:    16 [unused]
//   float4 _CameraPosition_DistanceScale;// Offset:  128 Size:    16
//   float4 _CameraPosition_DistanceScale_Previous;// Offset:  144 Size:    16 [unused]
//   float4x4 _CullingViewProjectionMatrix;// Offset:  160 Size:    64 [unused]
//   float4 _DepthScale;                // Offset:  224 Size:    16 [unused]
//   float4 _DepthTextureRcpSize;       // Offset:  240 Size:    16 [unused]
//   float4 _DepthTextureScaleOffset;   // Offset:  256 Size:    16
//   float4 _FogParams;                 // Offset:  272 Size:    16 [unused]
//   float4 _FogSHB;                    // Offset:  288 Size:    16
//   float4 _FogSHG;                    // Offset:  304 Size:    16
//   float4 _FogSHR;                    // Offset:  320 Size:    16
//   float4 _HeightFogParams;           // Offset:  336 Size:    16 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  352 Size:    64 [unused]
//   float4x4 _InvViewMatrix;           // Offset:  416 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  480 Size:    64 [unused]
//   float4 _TempSunDirection;          // Offset:  544 Size:    16 [unused]
//   float4x4 _ViewMatrix;              // Offset:  560 Size:    64 [unused]
//   float4 _ViewPoint_ShadowProjDepthMin;// Offset:  624 Size:    16 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:  640 Size:    64
//   float4x4 _ViewRotProjectionMatrix; // Offset:  704 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix_Previous;// Offset:  768 Size:    64 [unused]
//   float4 _ViewportSize;              // Offset:  832 Size:    16 [unused]
//   float2 _MotionVectorOffsets;       // Offset:  848 Size:     8 [unused]
//   float3 _CameraRight;               // Offset:  864 Size:    12 [unused]
//   float3 _CameraUp;                  // Offset:  880 Size:    12 [unused]
//   float3 _EnvironmentMapColorOffset; // Offset:  896 Size:    12 [unused]
//   float3 _EnvironmentMapColorScale;  // Offset:  912 Size:    12 [unused]
//
// }
//
// cbuffer CGlobalShaderParameterProvider
// {
//
//   float4 _BurnColor;                 // Offset:    0 Size:    16 [unused]
//   float4 _BurnParams;                // Offset:   16 Size:    16 [unused]
//   float4 _BurnParams2;               // Offset:   32 Size:    16 [unused]
//   float4 _BurnParams3;               // Offset:   48 Size:    16 [unused]
//   float4 _CascadedShadowScaleOffsetTile0;// Offset:   64 Size:    16 [unused]
//   float4 _CascadedShadowScaleOffsetTile1;// Offset:   80 Size:    16 [unused]
//   float4 _GlobalScalars;             // Offset:   96 Size:    16
//   float4 _SSS_MiscParams;            // Offset:  112 Size:    16 [unused]
//   float4 _WindSimParamsX;            // Offset:  128 Size:    16 [unused]
//   float4 _WindSimParamsY;            // Offset:  144 Size:    16 [unused]
//   float2 _RangeDepthCompression;     // Offset:  160 Size:     8 [unused]
//   float3 _SSS_Color;                 // Offset:  176 Size:    12 [unused]
//   int _BRDFHighQuality;              // Offset:  188 Size:     4 [unused]
//
// }
//
// cbuffer ShangrilaOcean
// {
//
//   float3 _NormalIncidenceReflectance;// Offset:    0 Size:    12 [unused]
//   float3 _ConstantReflectanceFactor; // Offset:   16 Size:    12 [unused]
//   float _TexGeoWavesBlendCff;        // Offset:   28 Size:     4
//   float4 _NormalMapParams1;          // Offset:   32 Size:    16
//   float4 _NormalMapParams2;          // Offset:   48 Size:    16
//   float4 _NormalMapParams3;          // Offset:   64 Size:    16
//   float4 _NormalMapParams4;          // Offset:   80 Size:    16
//   float _NormalsScale;               // Offset:   96 Size:     4 [unused]
//   float _HighNormalsScale;           // Offset:  100 Size:     4 [unused]
//   float2 _WavesFade;                 // Offset:  104 Size:     8 [unused]
//   float2 _WavesHiResFade;            // Offset:  112 Size:     8 [unused]
//   float4 _Octave1Params;             // Offset:  128 Size:    16 [unused]
//   float2 _Octave1Dir;                // Offset:  144 Size:     8 [unused]
//   float4 _Octave2Params;             // Offset:  160 Size:    16 [unused]
//   float2 _Octave2Dir;                // Offset:  176 Size:     8 [unused]
//   float4 _Octave3Params;             // Offset:  192 Size:    16 [unused]
//   float2 _Octave3Dir;                // Offset:  208 Size:     8 [unused]
//   float4 _Octave4Params;             // Offset:  224 Size:    16 [unused]
//   float2 _Octave4Dir;                // Offset:  240 Size:     8 [unused]
//   float4 _Octave5Params;             // Offset:  256 Size:    16 [unused]
//   float2 _Octave5Dir;                // Offset:  272 Size:     8 [unused]
//   float4 _Octave6Params;             // Offset:  288 Size:    16 [unused]
//   float2 _Octave6Dir;                // Offset:  304 Size:     8 [unused]
//   float4 _Octave7Params;             // Offset:  320 Size:    16 [unused]
//   float2 _Octave7Dir;                // Offset:  336 Size:     8 [unused]
//   float4 _Octave8Params;             // Offset:  352 Size:    16 [unused]
//   float2 _Octave8Dir;                // Offset:  368 Size:     8 [unused]
//   float _DepthDistanceCff;           // Offset:  376 Size:     4 [unused]
//   float2 _Smoothness;                // Offset:  384 Size:     8 [unused]
//   float2 _CausticsParams;            // Offset:  392 Size:     8 [unused]
//   float2 _CausticsDepthFade;         // Offset:  400 Size:     8 [unused]
//   float2 _CausticsRcpDepthFade;      // Offset:  408 Size:     8 [unused]
//   float4 _FoamLayer1Params;          // Offset:  416 Size:    16 [unused]
//   float4 _FoamLayer2Params;          // Offset:  432 Size:    16 [unused]
//   float4 _FoamSettings;              // Offset:  448 Size:    16 [unused]
//   float4 _FoamParams;                // Offset:  464 Size:    16 [unused]
//   float4 _NormalsMaskParams;         // Offset:  480 Size:    16
//   float3 _OceanColorShallow;         // Offset:  496 Size:    12 [unused]
//   float3 _OceanColorDeep;            // Offset:  512 Size:    12 [unused]
//   float _DampingFadeOut;             // Offset:  524 Size:     4 [unused]
//   float _ShallowWaterDepth;          // Offset:  528 Size:     4 [unused]
//   float4 _WavesCrestWeights;         // Offset:  544 Size:    16 [unused]
//   float _RimLightWidth;              // Offset:  560 Size:     4 [unused]
//   float _RimLightIntensity;          // Offset:  564 Size:     4 [unused]
//   float3 _DisplacementParams;        // Offset:  576 Size:    12 [unused]
//   float4 _MaterialPickingID;         // Offset:  592 Size:    16 [unused]
//
// }
//
// cbuffer COceanDampingProvider
// {
//
//   float4 _HideOceanDampingTexelOffset;// Offset:    0 Size:    16 [unused]
//   float4 _WorldScaleAndOffset;       // Offset:   16 Size:    16
//
// }
//
// cbuffer COceanParameterProvider
// {
//
//   float4 _CornerPointsWS[4];         // Offset:    0 Size:    64
//   float4 _OceanParameters;           // Offset:   64 Size:    16
//   float4 _SkyParameters;             // Offset:   80 Size:    16 [unused]
//   float4 _VertexAdjustments;         // Offset:   96 Size:    16 [unused]
//   float4 _WavesAmpHDir_ampVDirOverWL[8];// Offset:  112 Size:   128 [unused]
//   float4 _WavesDir_oneOverWL_ampHWL[8];// Offset:  240 Size:   128 [unused]
//   float4 _WavesParameters[8];        // Offset:  368 Size:   128 [unused]
//   float2 _GridSize;                  // Offset:  496 Size:     8 [unused]
//   float _OneOverWavesFade;           // Offset:  504 Size:     4 [unused]
//   float _OneOverWavesHiResFade;      // Offset:  508 Size:     4 [unused]
//   float _WaterLevel;                 // Offset:  512 Size:     4
//   float _WavesCrestWeightsNorm[4];   // Offset:  528 Size:    52 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// DampingTexture__SampObj__         sampler      NA          NA    0        1
// DampingTexture__TexObj__          texture  float4          2d    0        1
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// CGlobalShaderParameterProvider    cbuffer      NA          NA    1        1
// ShangrilaOcean                    cbuffer      NA          NA    2        1
// COceanDampingProvider             cbuffer      NA          NA    3        1
// COceanParameterProvider           cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
// TEXCOORD                 9   xyzw       10     NONE   float   xyzw
// TEXCOORD                10   xy         11     NONE   float   xy  
//
vs_4_0
dcl_constantbuffer cb0[44], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_constantbuffer cb2[31], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[33], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input v0.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyz
dcl_output o7.xyz
dcl_output o8.xyzw
dcl_output o9.xyzw
dcl_output o10.xyzw
dcl_output o11.xy
dcl_temps 4
log r0.x, |v0.y|
mul r0.x, r0.x, cb4[4].x
exp r0.x, r0.x
add r0.y, -v0.x, l(1.000000)
mul r1.xyz, r0.yyyy, cb4[2].xywx
mul r0.yzw, r0.yyyy, cb4[0].xxyw
mad r0.yzw, v0.xxxx, cb4[1].xxyw, r0.yyzw
mad r1.xyz, v0.xxxx, cb4[3].xywx, r1.xyzx
mul r1.xyz, r0.xxxx, r1.xyzx
add r0.x, -r0.x, l(1.000000)
mad r0.xyz, r0.xxxx, r0.yzwy, r1.xyzx
div r0.xy, r0.xyxx, r0.zzzz
mov r0.w, l(1.000000)
mov r0.z, cb4[32].x
dp4 r1.y, r0.xyzw, cb0[41].xyzw
dp4 r1.x, r0.xyzw, cb0[40].xyzw
dp4 r1.w, r0.xyzw, cb0[43].xyzw
dp4 o0.z, r0.xyzw, cb0[42].xyzw
mov o0.xyw, r1.xyxw
add r2.xyz, r0.yzxy, -cb0[8].yzxy
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.yzw, r0.wwww, r2.xxyz
mov r2.x, l(1.000000)
dp4 r3.x, cb0[20].xyzw, r2.xyzw
dp4 r3.y, cb0[19].xyzw, r2.xyzw
dp4 r3.z, cb0[18].xyzw, r2.xyzw
max o1.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
div o2.z, l(1.000000, 1.000000, 1.000000, 1.000000), cb2[1].w
mov o2.xy, l(0,0,0,0)
add o3.xyz, -r0.xyzx, cb0[8].xyzx
mov o7.xyz, r0.xyzx
mul r2.xyzw, r1.xyww, cb0[16].xyzw
add r0.zw, -r1.xxxy, r1.wwww
add r3.x, r1.x, r1.w
mul r1.x, r3.x, l(0.500000)
mul r1.yz, r0.zzwz, l(0.000000, 0.500000, 0.500000, 0.000000)
add o4.xy, r2.zwzz, r2.xyxx
mov o4.z, r1.w
mov o5.xyz, r1.yzwy
mov o6.xyz, r1.xzwx
mul r0.z, cb1[6].y, cb2[2].y
mul r0.zw, r0.zzzz, cb2[2].zzzw
mad o8.xy, r0.xyxx, cb2[2].xxxx, r0.zwzz
mul r0.z, cb1[6].y, cb2[3].y
mul r0.zw, r0.zzzz, cb2[3].zzzw
mad o8.zw, r0.xxxy, cb2[3].xxxx, r0.zzzw
mul r0.z, cb1[6].y, cb2[4].y
mul r0.zw, r0.zzzz, cb2[4].zzzw
mad o9.xy, r0.xyxx, cb2[4].xxxx, r0.zwzz
mul r0.z, cb1[6].y, cb2[5].y
mul r0.zw, r0.zzzz, cb2[5].zzzw
mad o9.zw, r0.xxxy, cb2[5].xxxx, r0.zzzw
mul r0.z, cb1[6].y, cb2[30].y
mul r0.zw, r0.zzzz, cb2[30].zzzw
mad o10.xy, r0.xyxx, cb2[30].xxxx, r0.zwzz
add r0.xy, r0.xyxx, cb3[1].zwzz
mul r0.xy, r0.xyxx, cb3[1].xyxx
sample_l r0.xyzw, r0.xyxx, t0.xyzw, s0, l(0.000000)
mov o11.x, r0.y
mov o10.zw, l(0,0,0,0)
mov o11.y, l(1.000000)
ret 
// Approximately 63 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4 _AmbientColorMultiplier;    // Offset:    0 Size:    16 [unused]
//   float4 _AmbientOcclusionRanges_SunOcclusionFactor;// Offset:   16 Size:    16 [unused]
//   float4 _BloomAdaptationFactor;     // Offset:   32 Size:    16 [unused]
//   float4 _CameraDirection_FOVDeg;    // Offset:   48 Size:    16 [unused]
//   float4 _CameraDistances;           // Offset:   64 Size:    16 [unused]
//   float4 _CameraNearPlaneSize;       // Offset:   80 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS;// Offset:   96 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS_Previous;// Offset:  112 Size:    16 [unused]
//   float4 _CameraPosition_DistanceScale;// Offset:  128 Size:    16
//   float4 _CameraPosition_DistanceScale_Previous;// Offset:  144 Size:    16 [unused]
//   float4x4 _CullingViewProjectionMatrix;// Offset:  160 Size:    64 [unused]
//   float4 _DepthScale;                // Offset:  224 Size:    16 [unused]
//   float4 _DepthTextureRcpSize;       // Offset:  240 Size:    16 [unused]
//   float4 _DepthTextureScaleOffset;   // Offset:  256 Size:    16
//   float4 _FogParams;                 // Offset:  272 Size:    16 [unused]
//   float4 _FogSHB;                    // Offset:  288 Size:    16
//   float4 _FogSHG;                    // Offset:  304 Size:    16
//   float4 _FogSHR;                    // Offset:  320 Size:    16
//   float4 _HeightFogParams;           // Offset:  336 Size:    16 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  352 Size:    64 [unused]
//   float4x4 _InvViewMatrix;           // Offset:  416 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  480 Size:    64 [unused]
//   float4 _TempSunDirection;          // Offset:  544 Size:    16 [unused]
//   float4x4 _ViewMatrix;              // Offset:  560 Size:    64 [unused]
//   float4 _ViewPoint_ShadowProjDepthMin;// Offset:  624 Size:    16 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:  640 Size:    64
//   float4x4 _ViewRotProjectionMatrix; // Offset:  704 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix_Previous;// Offset:  768 Size:    64 [unused]
//   float4 _ViewportSize;              // Offset:  832 Size:    16 [unused]
//   float2 _MotionVectorOffsets;       // Offset:  848 Size:     8 [unused]
//   float3 _CameraRight;               // Offset:  864 Size:    12 [unused]
//   float3 _CameraUp;                  // Offset:  880 Size:    12 [unused]
//   float3 _EnvironmentMapColorOffset; // Offset:  896 Size:    12 [unused]
//   float3 _EnvironmentMapColorScale;  // Offset:  912 Size:    12 [unused]
//
// }
//
// cbuffer CGlobalShaderParameterProvider
// {
//
//   float4 _BurnColor;                 // Offset:    0 Size:    16 [unused]
//   float4 _BurnParams;                // Offset:   16 Size:    16 [unused]
//   float4 _BurnParams2;               // Offset:   32 Size:    16 [unused]
//   float4 _BurnParams3;               // Offset:   48 Size:    16 [unused]
//   float4 _CascadedShadowScaleOffsetTile0;// Offset:   64 Size:    16 [unused]
//   float4 _CascadedShadowScaleOffsetTile1;// Offset:   80 Size:    16 [unused]
//   float4 _GlobalScalars;             // Offset:   96 Size:    16
//   float4 _SSS_MiscParams;            // Offset:  112 Size:    16 [unused]
//   float4 _WindSimParamsX;            // Offset:  128 Size:    16 [unused]
//   float4 _WindSimParamsY;            // Offset:  144 Size:    16 [unused]
//   float2 _RangeDepthCompression;     // Offset:  160 Size:     8 [unused]
//   float3 _SSS_Color;                 // Offset:  176 Size:    12 [unused]
//   int _BRDFHighQuality;              // Offset:  188 Size:     4 [unused]
//
// }
//
// cbuffer ShangrilaOcean
// {
//
//   float3 _NormalIncidenceReflectance;// Offset:    0 Size:    12 [unused]
//   float3 _ConstantReflectanceFactor; // Offset:   16 Size:    12 [unused]
//   float _TexGeoWavesBlendCff;        // Offset:   28 Size:     4
//   float4 _NormalMapParams1;          // Offset:   32 Size:    16
//   float4 _NormalMapParams2;          // Offset:   48 Size:    16
//   float4 _NormalMapParams3;          // Offset:   64 Size:    16
//   float4 _NormalMapParams4;          // Offset:   80 Size:    16
//   float _NormalsScale;               // Offset:   96 Size:     4 [unused]
//   float _HighNormalsScale;           // Offset:  100 Size:     4 [unused]
//   float2 _WavesFade;                 // Offset:  104 Size:     8 [unused]
//   float2 _WavesHiResFade;            // Offset:  112 Size:     8 [unused]
//   float4 _Octave1Params;             // Offset:  128 Size:    16 [unused]
//   float2 _Octave1Dir;                // Offset:  144 Size:     8 [unused]
//   float4 _Octave2Params;             // Offset:  160 Size:    16 [unused]
//   float2 _Octave2Dir;                // Offset:  176 Size:     8 [unused]
//   float4 _Octave3Params;             // Offset:  192 Size:    16 [unused]
//   float2 _Octave3Dir;                // Offset:  208 Size:     8 [unused]
//   float4 _Octave4Params;             // Offset:  224 Size:    16 [unused]
//   float2 _Octave4Dir;                // Offset:  240 Size:     8 [unused]
//   float4 _Octave5Params;             // Offset:  256 Size:    16 [unused]
//   float2 _Octave5Dir;                // Offset:  272 Size:     8 [unused]
//   float4 _Octave6Params;             // Offset:  288 Size:    16 [unused]
//   float2 _Octave6Dir;                // Offset:  304 Size:     8 [unused]
//   float4 _Octave7Params;             // Offset:  320 Size:    16 [unused]
//   float2 _Octave7Dir;                // Offset:  336 Size:     8 [unused]
//   float4 _Octave8Params;             // Offset:  352 Size:    16 [unused]
//   float2 _Octave8Dir;                // Offset:  368 Size:     8 [unused]
//   float _DepthDistanceCff;           // Offset:  376 Size:     4 [unused]
//   float2 _Smoothness;                // Offset:  384 Size:     8 [unused]
//   float2 _CausticsParams;            // Offset:  392 Size:     8 [unused]
//   float2 _CausticsDepthFade;         // Offset:  400 Size:     8 [unused]
//   float2 _CausticsRcpDepthFade;      // Offset:  408 Size:     8 [unused]
//   float4 _FoamLayer1Params;          // Offset:  416 Size:    16 [unused]
//   float4 _FoamLayer2Params;          // Offset:  432 Size:    16 [unused]
//   float4 _FoamSettings;              // Offset:  448 Size:    16 [unused]
//   float4 _FoamParams;                // Offset:  464 Size:    16 [unused]
//   float4 _NormalsMaskParams;         // Offset:  480 Size:    16
//   float3 _OceanColorShallow;         // Offset:  496 Size:    12 [unused]
//   float3 _OceanColorDeep;            // Offset:  512 Size:    12 [unused]
//   float _DampingFadeOut;             // Offset:  524 Size:     4 [unused]
//   float _ShallowWaterDepth;          // Offset:  528 Size:     4 [unused]
//   float4 _WavesCrestWeights;         // Offset:  544 Size:    16 [unused]
//   float _RimLightWidth;              // Offset:  560 Size:     4 [unused]
//   float _RimLightIntensity;          // Offset:  564 Size:     4 [unused]
//   float3 _DisplacementParams;        // Offset:  576 Size:    12 [unused]
//   float4 _MaterialPickingID;         // Offset:  592 Size:    16 [unused]
//
// }
//
// cbuffer COceanDampingProvider
// {
//
//   float4 _HideOceanDampingTexelOffset;// Offset:    0 Size:    16 [unused]
//   float4 _WorldScaleAndOffset;       // Offset:   16 Size:    16
//
// }
//
// cbuffer COceanParameterProvider
// {
//
//   float4 _CornerPointsWS[4];         // Offset:    0 Size:    64
//   float4 _OceanParameters;           // Offset:   64 Size:    16
//   float4 _SkyParameters;             // Offset:   80 Size:    16 [unused]
//   float4 _VertexAdjustments;         // Offset:   96 Size:    16 [unused]
//   float4 _WavesAmpHDir_ampVDirOverWL[8];// Offset:  112 Size:   128 [unused]
//   float4 _WavesDir_oneOverWL_ampHWL[8];// Offset:  240 Size:   128 [unused]
//   float4 _WavesParameters[8];        // Offset:  368 Size:   128 [unused]
//   float2 _GridSize;                  // Offset:  496 Size:     8 [unused]
//   float _OneOverWavesFade;           // Offset:  504 Size:     4 [unused]
//   float _OneOverWavesHiResFade;      // Offset:  508 Size:     4 [unused]
//   float _WaterLevel;                 // Offset:  512 Size:     4
//   float _WavesCrestWeightsNorm[4];   // Offset:  528 Size:    52 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// DampingTexture__SampObj___s       sampler      NA          NA    0        1
// DampingTexture__TexObj__          texture  float4          2d    0        1
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// CGlobalShaderParameterProvider    cbuffer      NA          NA    1        1
// ShangrilaOcean                    cbuffer      NA          NA    2        1
// COceanDampingProvider             cbuffer      NA          NA    3        1
// COceanParameterProvider           cbuffer      NA          NA    4        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyz         1     NONE   float   xyz 
// TEXCOORD                 1   xyz         2     NONE   float   xyz 
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyzw        8     NONE   float   xyzw
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
// TEXCOORD                 9   xyzw       10     NONE   float   xyzw
// TEXCOORD                10   xy         11     NONE   float   xy  
//
vs_4_0
dcl_constantbuffer cb0[44], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_constantbuffer cb2[31], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[33], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input v0.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o2.xyz
dcl_output o3.xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_output o6.xyz
dcl_output o7.xyz
dcl_output o8.xyzw
dcl_output o9.xyzw
dcl_output o10.xyzw
dcl_output o11.xy
dcl_temps 4
log r0.x, |v0.y|
mul r0.x, r0.x, cb4[4].x
exp r0.x, r0.x
add r0.y, -v0.x, l(1.000000)
mul r1.xyz, r0.yyyy, cb4[2].xywx
mul r0.yzw, r0.yyyy, cb4[0].xxyw
mad r0.yzw, v0.xxxx, cb4[1].xxyw, r0.yyzw
mad r1.xyz, v0.xxxx, cb4[3].xywx, r1.xyzx
mul r1.xyz, r0.xxxx, r1.xyzx
add r0.x, -r0.x, l(1.000000)
mad r0.xyz, r0.xxxx, r0.yzwy, r1.xyzx
div r0.xy, r0.xyxx, r0.zzzz
mov r0.w, l(1.000000)
mov r0.z, cb4[32].x
dp4 r1.y, r0.xyzw, cb0[41].xyzw
dp4 r1.x, r0.xyzw, cb0[40].xyzw
dp4 r1.w, r0.xyzw, cb0[43].xyzw
dp4 o0.z, r0.xyzw, cb0[42].xyzw
mov o0.xyw, r1.xyxw
add r2.xyz, r0.yzxy, -cb0[8].yzxy
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.yzw, r0.wwww, r2.xxyz
mov r2.x, l(1.000000)
dp4 r3.x, cb0[20].xyzw, r2.xyzw
dp4 r3.y, cb0[19].xyzw, r2.xyzw
dp4 r3.z, cb0[18].xyzw, r2.xyzw
max o1.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
div o2.z, l(1.000000, 1.000000, 1.000000, 1.000000), cb2[1].w
mov o2.xy, l(0,0,0,0)
add o3.xyz, -r0.xyzx, cb0[8].xyzx
mov o7.xyz, r0.xyzx
mul r2.xyzw, r1.xyww, cb0[16].xyzw
add r0.zw, -r1.xxxy, r1.wwww
add r3.x, r1.x, r1.w
mul r1.x, r3.x, l(0.500000)
mul r1.yz, r0.zzwz, l(0.000000, 0.500000, 0.500000, 0.000000)
add o4.xy, r2.zwzz, r2.xyxx
mov o4.z, r1.w
mov o5.xyz, r1.yzwy
mov o6.xyz, r1.xzwx
mul r0.z, cb1[6].y, cb2[2].y
mul r0.zw, r0.zzzz, cb2[2].zzzw
mad o8.xy, r0.xyxx, cb2[2].xxxx, r0.zwzz
mul r0.z, cb1[6].y, cb2[3].y
mul r0.zw, r0.zzzz, cb2[3].zzzw
mad o8.zw, r0.xxxy, cb2[3].xxxx, r0.zzzw
mul r0.z, cb1[6].y, cb2[4].y
mul r0.zw, r0.zzzz, cb2[4].zzzw
mad o9.xy, r0.xyxx, cb2[4].xxxx, r0.zwzz
mul r0.z, cb1[6].y, cb2[5].y
mul r0.zw, r0.zzzz, cb2[5].zzzw
mad o9.zw, r0.xxxy, cb2[5].xxxx, r0.zzzw
mul r0.z, cb1[6].y, cb2[30].y
mul r0.zw, r0.zzzz, cb2[30].zzzw
mad o10.xy, r0.xyxx, cb2[30].xxxx, r0.zwzz
add r0.xy, r0.xyxx, cb3[1].zwzz
mul r0.xy, r0.xyxx, cb3[1].xyxx
sample_l r0.xyzw, r0.xyxx, t0.xyzw, s0, l(0.000000)
mov o11.x, r0.y
mov o10.zw, l(0,0,0,0)
mov o11.y, l(1.000000)
ret 
// Approximately 63 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
