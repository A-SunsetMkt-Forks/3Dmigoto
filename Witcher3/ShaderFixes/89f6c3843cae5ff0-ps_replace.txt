Texture2D<float4> t7 : register(t7);

SamplerState s7_s : register(s7);

cbuffer cb12 : register(b12)
{
  float4 cb12[214];
}

cbuffer cb3 : register(b3)
{
  float4 cb3[8];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[2];
}


Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  float4 v0 : SV_Position0,
  out float4 o0 : SV_Target0,
  out float4 o1 : SV_Target1,
  out float4 o2 : SV_Target2,
  out float4 o3 : SV_Target3)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xy = cb0[1].zw * v0.xy;
  r0.x = t7.Sample(s7_s, r0.xy).x;
  r1.xyzw = cb12[211].xyzw * v0.yyyy;
  r1.xyzw = cb12[210].xyzw * v0.xxxx + r1.xyzw;
  r0.xyzw = cb12[212].xyzw * r0.xxxx + r1.xyzw;
  r0.xyzw = cb12[213].xyzw + r0.xyzw;
  r0.xyz = r0.xyz / r0.www;
  r0.xyz = -cb3[7].xyz + r0.xyz;
  r0.x = dot(r0.xyz, r0.xyz);
  r0.x = sqrt(r0.x);
  r0.y = 1.199999973e-001 * r0.x;
  r1.x = log2(abs(cb3[6].y));
  r1.xy = float2(2.800000e+000,8.000000e-001) * r1.xx;
  r1.xy = exp2(r1.xy);
  r0.zw = r1.xy * float2(1.200000e+002,1.200000e+002) + float2(1.000000e+000,1.000000e+000);
  r1.x = 2.999999933e-002 < cb3[6].y;
  r0.xy = r1.xx ? r0.yz : r0.xw;
  r0.x = r0.x / r0.y;
  r0.x = log2(r0.x);
  r0.x = 1.600000024e+000 * r0.x;
  r0.x = exp2(r0.x);
  r0.x = 1.000000000e+000 + -r0.x;
  r0.x = max(0.000000000e+000, r0.x);
  o0.xyz = cb3[0].xyz * r0.xxx;
  o0.w = cb3[0].w;
  o1.xyzw = cb3[1].xyzw;
  o2.xyzw = cb3[2].xyzw;
  o3.xyzw = cb3[3].xyzw;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[2], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_constantbuffer cb12[214], immediateIndexed
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t7
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 2
mul r0.xy, v0.xyxx, cb0[1].zwzz
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t7.xyzw, s7
mul r1.xyzw, v0.yyyy, cb12[211].xyzw
mad r1.xyzw, cb12[210].xyzw, v0.xxxx, r1.xyzw
mad r0.xyzw, cb12[212].xyzw, r0.xxxx, r1.xyzw
add r0.xyzw, r0.xyzw, cb12[213].xyzw
div r0.xyz, r0.xyzx, r0.wwww
add r0.xyz, r0.xyzx, -cb3[7].xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
mul r0.y, r0.x, l(0.120000)
log r1.x, |cb3[6].y|
mul r1.xy, r1.xxxx, l(2.800000, 0.800000, 0.000000, 0.000000)
exp r1.xy, r1.xyxx
mad r0.zw, r1.xxxy, l(0.000000, 0.000000, 120.000000, 120.000000), l(0.000000, 0.000000, 1.000000, 1.000000)
lt r1.x, l(0.030000), cb3[6].y
movc r0.xy, r1.xxxx, r0.yzyy, r0.xwxx
div r0.x, r0.x, r0.y
log r0.x, r0.x
mul r0.x, r0.x, l(1.600000)
exp r0.x, r0.x
add r0.x, -r0.x, l(1.000000)
max r0.x, r0.x, l(0.000000)
mul o0.xyz, r0.xxxx, cb3[0].xyzx
mov o0.w, cb3[0].w
mov o1.xyzw, cb3[1].xyzw
mov o2.xyzw, cb3[2].xyzw
mov o3.xyzw, cb3[3].xyzw
ret 
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//
// Buffer Definitions: 
//
// cbuffer cb12
// {
//
//   float4 cb12[214];                  // Offset:    0 Size:  3424
//
// }
//
// cbuffer cb3
// {
//
//   float4 cb3[8];                     // Offset:    0 Size:   128
//
// }
//
// cbuffer cb0
// {
//
//   float4 cb0[2];                     // Offset:    0 Size:    32
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// s7_s                              sampler      NA          NA    7        1
// t7                                texture  float4          2d    7        1
// cb0                               cbuffer      NA          NA    0        1
// cb3                               cbuffer      NA          NA    3        1
// cb12                              cbuffer      NA          NA   12        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
// SV_Target                1   xyzw        1   TARGET   float   xyzw
// SV_Target                2   xyzw        2   TARGET   float   xyzw
// SV_Target                3   xyzw        3   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb12[214], immediateIndexed
dcl_constantbuffer cb3[8], immediateIndexed
dcl_constantbuffer cb0[2], immediateIndexed
dcl_sampler s7, mode_default
dcl_resource_texture2d (float,float,float,float) t7
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 2
mul r0.xy, v0.xyxx, cb0[1].zwzz
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t7.xyzw, s7
mul r1.xyzw, v0.yyyy, cb12[211].xyzw
mad r1.xyzw, cb12[210].xyzw, v0.xxxx, r1.xyzw
mad r0.xyzw, cb12[212].xyzw, r0.xxxx, r1.xyzw
add r0.xyzw, r0.xyzw, cb12[213].xyzw
div r0.xyz, r0.xyzx, r0.wwww
add r0.xyz, r0.xyzx, -cb3[7].xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
mul r0.y, r0.x, l(0.120000)
log r1.x, |cb3[6].y|
mul r1.xy, r1.xxxx, l(2.800000, 0.800000, 0.000000, 0.000000)
exp r1.xy, r1.xyxx
mad r0.zw, r1.xxxy, l(0.000000, 0.000000, 120.000000, 120.000000), l(0.000000, 0.000000, 1.000000, 1.000000)
lt r1.x, l(0.030000), cb3[6].y
movc r0.xy, r1.xxxx, r0.yzyy, r0.xwxx
div r0.x, r0.x, r0.y
log r0.x, r0.x
mul r0.x, r0.x, l(1.600000)
exp r0.x, r0.x
add r0.x, -r0.x, l(1.000000)
max r0.x, r0.x, l(0.000000)
mul o0.xyz, r0.xxxx, cb3[0].xyzx
mov o0.w, cb3[0].w
mov o1.xyzw, cb3[1].xyzw
mov o2.xyzw, cb3[2].xyzw
mov o3.xyzw, cb3[3].xyzw
ret 
// Approximately 29 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
