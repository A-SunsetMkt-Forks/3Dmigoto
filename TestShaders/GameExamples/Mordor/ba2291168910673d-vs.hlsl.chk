
cbuffer _Globals : register(b0)
{
  float DefaultHeight : packoffset(c0) = float(1.000000e+002);
  float DefaultWidth : packoffset(c0.y) = float(1.000000e+002);

  struct
  {
    float2 m_Position;
  } MaterialVertexDef_Rigid : packoffset(c1);


  struct
  {
    float2 m_Position;
    float4 m_Weights;
    float4 m_Indices;
  } MaterialVertexDef_Skeletal : packoffset(c2);

  bool bHalfPrecision : packoffset(c5) = false;
  float4 k_fBoxBlurParams : packoffset(c6) = float4(2.000000e+000,1.000000e+000,0.000000e+000,1.000000e+000);
  float3 k_fFarDOFParams : packoffset(c7) = float3(0.000000e+000,1.000000e+000,0.000000e+000);
  float3 k_fNearDOFParams : packoffset(c8) = float3(0.000000e+000,1.000000e+000,0.000000e+000);
  float4 k_vSourceBufferSize : packoffset(c9) = float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
  bool k_bOITFastVolumetricApprox : packoffset(c10);
}

Texture2D<float4> StereoParams : register(t125);

void main(
  float2 v0 : SV_POSITION0,
  float4 v1 : BLENDWEIGHT0,
  float4 v2 : BLENDINDICES0,
  out float4 o0 : SV_POSITION0,
  out float2 o1 : TEXCOORD0,
  out float2 p1 : TEXCOORD1,
  out float4 o2 : TEXCOORD2,
  out float4 o3 : TEXCOORD3)
{
  float4 r0,r1;
  uint4 bitmask;
  o0.xy = v0.xy;
  o0.zw = float2(0.000000e+000,1.000000e+000);
  o1.xy = v0.xy * float2(5.000000e-001,-5.000000e-001) + float2(5.000000e-001,5.000000e-001);
  p1.xy = v0.xy * float2(1.000000e+000,-1.000000e+000) + float2(0.000000e+000,0.000000e+000);
  r0.xyzw = v0.xyxy * float4(5.000000e-001,-5.000000e-001,5.000000e-001,-5.000000e-001) + float4(5.000000e-001,5.000000e-001,5.000000e-001,5.000000e-001);
  r1.xyzw = float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000) / k_vSourceBufferSize.xyxy;
  o2.xyzw = r1.zwzw * float4(-4.446720e-001,-1.339244e+000,1.339244e+000,-4.446720e-001) + r0.zwzw;
  o3.xyzw = r1.xyzw * float4(-1.339244e+000,4.446720e-001,4.446720e-001,1.339244e+000) + r0.xyzw;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20546
//
//
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float DefaultHeight;               // Offset:    0 Size:     4 [unused]
//      = 0x42c80000 
//   float DefaultWidth;                // Offset:    4 Size:     4 [unused]
//      = 0x42c80000 
//   
//   struct MaterialVertex_Rigid
//   {
//       
//       float2 m_Position;             // Offset:   16
//
//   } MaterialVertexDef_Rigid;         // Offset:   16 Size:     8 [unused]
//   
//   struct MaterialVertex_Skeletal
//   {
//       
//       float2 m_Position;             // Offset:   32
//       float4 m_Weights;              // Offset:   48
//       float4 m_Indices;              // Offset:   64
//
//   } MaterialVertexDef_Skeletal;      // Offset:   32 Size:    48 [unused]
//   bool bHalfPrecision;               // Offset:   80 Size:     4 [unused]
//      = 0x00000000 
//   float4 k_fBoxBlurParams;           // Offset:   96 Size:    16 [unused]
//      = 0x40000000 0x3f800000 0x00000000 0x3f800000 
//   float3 k_fFarDOFParams;            // Offset:  112 Size:    12 [unused]
//      = 0x00000000 0x3f800000 0x00000000 
//   float3 k_fNearDOFParams;           // Offset:  128 Size:    12 [unused]
//      = 0x00000000 0x3f800000 0x00000000 
//   float4 k_vSourceBufferSize;        // Offset:  144 Size:    16
//      = 0x00000000 0x00000000 0x00000000 0x00000000 
//   bool k_bOITFastVolumetricApprox;   // Offset:  160 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// $Globals                          cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xy          0     NONE   float   xy  
// BLENDWEIGHT              0   xyzw        1     NONE   float       
// BLENDINDICES             0   xyzw        2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 2   xyzw        2     NONE   float   xyzw
// TEXCOORD                 3   xyzw        3     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[10], immediateIndexed
dcl_input v0.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.zw
dcl_output o2.xyzw
dcl_output o3.xyzw
dcl_temps 2
mov o0.xy, v0.xyxx
mov o0.zw, l(0,0,0,1.000000)
mad o1.xyzw, v0.xyxy, l(0.500000, -0.500000, 1.000000, -1.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mad r0.xyzw, v0.xyxy, l(0.500000, -0.500000, 0.500000, -0.500000), l(0.500000, 0.500000, 0.500000, 0.500000)
div r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[9].xyxy
mad o2.xyzw, r1.zwzw, l(-0.444672, -1.339244, 1.339244, -0.444672), r0.zwzw
mad o3.xyzw, r1.xyzw, l(-1.339244, 0.444672, 0.444672, 1.339244), r0.xyzw
ret 
// Approximately 8 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
