
cbuffer CSSToksvigProvider : register(b0)
{
  float4 _DepthTextureSize : packoffset(c0);
}
SamplerState PointSampler_s : register(s0);
SamplerState LinearSampler_s : register(s1);
Texture2D<float> LinearDepthTexture : register(t0);
Texture2D<float4> NormalsTexture : register(t1);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  float4 v0 : SV_Position0,
  float2 v1 : TEXCOORD0,
  uint v2 : SV_IsFrontFace0,
  out float o0 : SV_Target0,
  out float2 o1 : SV_Target1)
{
  float4 r0,r1,r2;
  uint4 bitmask;
  o0.x = 1.000000000e+000;
  r0.xyz = NormalsTexture.SampleLevel(PointSampler_s, v1.xy, 0.000000000e+000, int2(-1, 0)).xyz;
  r0.xyz = r0.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.xyz = r0.xyz * r0.www;
  r1.xyz = NormalsTexture.SampleLevel(PointSampler_s, v1.xy, 0.000000000e+000, int2(0, 0)).xyz;
  r1.xyz = r1.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r0.w = dot(r1.xyz, r1.xyz);
  r0.w = rsqrt(r0.w);
  r1.xyz = r1.xyz * r0.www;
  r0.x = dot(r1.xyz, r0.xyz);
  r2.xyz = NormalsTexture.SampleLevel(PointSampler_s, v1.xy, 0.000000000e+000, int2(0, -1)).xyz;
  r2.xyz = r2.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r0.z = dot(r2.xyz, r2.xyz);
  r0.z = rsqrt(r0.z);
  r2.xyz = r2.xyz * r0.zzz;
  r0.z = dot(r1.xyz, r2.xyz);
  r0.xy = abs(r0.xz);
  r0.xy = float2(1.000000e+000,1.000000e+000) + -r0.xy;
  r0.xy = r0.xy >= float2(5.000000e-001,5.000000e-001);
  r0.zw = -_DepthTextureSize.zw * float2(5.000000e-001,5.000000e-001) + v1.xy;
  r1.xyz = LinearDepthTexture.Gather(LinearSampler_s, r0.zw).xyz;
  r0.zw = r1.yy + -r1.xz;
  r1.x = 2.500000037e-002 * r1.y;
  r1.y = r1.y < 9.900000095e-001;
  r0.zw = abs(r0.zw) >= r1.xx;
  r0.xyzw = r0.xyzw ? float4(1.000000e+000,1.000000e+000,1.000000e+000,1.000000e+000) : 0;
  r0.xy = max(r0.xy, r0.zw);
  o1.xy = r1.yy ? r0.xy : r0.zw;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer CSSToksvigProvider
// {
//
//   float4 _DepthTextureSize;          // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// PointSampler                      sampler      NA          NA    0        1
// LinearSampler                     sampler      NA          NA    1        1
// LinearDepthTexture                texture   float          2d    0        1
// NormalsTexture                    texture  float4          2d    1        1
// CSSToksvigProvider                cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// SV_IsFrontFace           0   x           2    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   x           0   TARGET   float   x   
// SV_Target                1   xy          1   TARGET   float   xy  
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_output o0.x
dcl_output o1.xy
dcl_temps 3
mov o0.x, l(1.000000)
sample_l_aoffimmi_indexable(-1,0,0)(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t1.xyzw, s0, l(0.000000)
mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
sample_l_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t1.xyzw, s0, l(0.000000)
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.x, r1.xyzx, r0.xyzx
sample_l_aoffimmi_indexable(0,-1,0)(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t1.xyzw, s0, l(0.000000)
mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r2.xyzx
dp3 r0.z, r1.xyzx, r2.xyzx
mov r0.xy, |r0.xzxx|
add r0.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
ge r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r0.zw, -cb0[0].zzzw, l(0.000000, 0.000000, 0.500000, 0.500000), v1.xxxy
gather4_indexable(texture2d)(float,float,float,float) r1.xyz, r0.zwzz, t0.xyzw, s1.x
add r0.zw, -r1.xxxz, r1.yyyy
mul r1.x, r1.y, l(0.025000)
lt r1.y, r1.y, l(0.990000)
ge r0.zw, |r0.zzzw|, r1.xxxx
and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
max r0.xy, r0.xyxx, r0.zwzz
movc o1.xy, r1.yyyy, r0.xyxx, r0.zwzz
ret 
// Approximately 31 instruction slots used
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//
// Buffer Definitions: 
//
// cbuffer CSSToksvigProvider
// {
//
//   float4 _DepthTextureSize;          // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// PointSampler_s                    sampler      NA          NA    0        1
// LinearSampler_s                   sampler      NA          NA    1        1
// LinearDepthTexture                texture   float          2d    0        1
// NormalsTexture                    texture  float4          2d    1        1
// CSSToksvigProvider                cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// SV_IsFrontFace           0   x           2    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   x           0   TARGET   float   x   
// SV_Target                1   xy          1   TARGET   float   xy  
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_output o0.x
dcl_output o1.xy
dcl_temps 3
mov o0.x, l(1.000000)
sample_l_aoffimmi_indexable(-1,0,0)(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t1.xyzw, s0, l(0.000000)
mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
sample_l_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t1.xyzw, s0, l(0.000000)
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
dp3 r0.x, r1.xyzx, r0.xyzx
sample_l_aoffimmi_indexable(0,-1,0)(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t1.xyzw, s0, l(0.000000)
mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r2.xyzx
dp3 r0.y, r1.xyzx, r2.xyzx
add r0.xy, -|r0.xyxx|, l(1.000000, 1.000000, 0.000000, 0.000000)
ge r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
and r0.xy, r0.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
ne r0.xy, l(0.000000, 0.000000, 0.000000, 0.000000), r0.xyxx
mad r1.xy, cb0[0].zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000), v1.xyxx
gather4_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t0.xyzw, s1.x
add r1.xz, -r1.xxzx, r1.yyyy
mul r1.w, r1.y, l(0.025000)
lt r1.y, r1.y, l(0.990000)
ge r1.xz, |r1.xxzx|, r1.wwww
and r1.xz, r1.xxzx, l(0x3f800000, 0, 0x3f800000, 0)
ne r0.zw, l(0.000000, 0.000000, 0.000000, 0.000000), r1.xxxz
and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
max r0.xy, r0.zwzz, r0.xyxx
movc o1.xy, r1.yyyy, r0.xyxx, r0.zwzz
ret 
// Approximately 34 instruction slots used
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
