//HUD
cbuffer Constants : register(b0)
{
  float4 mvp[2] : packoffset(c0);
}

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

// FIXME: Implement include handler in 3DMigoto to make paths consistent:
#include <x64\ShaderFixes\hud.hlsl>

void main(
  float2 v0 : TEXCOORD0,
  float4 v1 : SV_Position0,
  out float2 o0 : TEXCOORD0,
  out float4 o1 : SV_Position0)
{
  o0.xy = v0.xy;
  o1.x = dot(v1.xyzw, mvp[0].xyzw);
  o1.y = dot(v1.xyzw, mvp[1].xyzw);
  o1.zw = float2(0.000000e+000,1.000000e+000);

if (!rt_is_screen())
	return;

float4 stereo = StereoParams.Load(0);
float4 params = IniParams.Load(0);
if (params.z == 1)
	o1.x += adjust_from_stereo2mono_depth_buffer(dot(float4(0,0,0,1), mvp[0].xyzw), dot(float4(0,0,0,1), mvp[1].xyzw));
else if (params.z == 2)
	o1.x += adjust_from_stereo2mono_depth_buffer(o1.x, o1.y);
else
	o1.x -= stereo.x*(params.x);  
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.16384
//
//
// Buffer Definitions: 
//
// cbuffer Constants
// {
//
//   float4 mvp[2];                     // Offset:    0 Size:    32
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Constants                         cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// SV_Position              0   xyzw        1     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xy          0     NONE   float   xy  
// SV_Position              0   xyzw        1      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[2], immediateIndexed
dcl_input v0.xy
dcl_input v1.xyzw
dcl_output o0.xy
dcl_output_siv o1.xyzw, position
mov o0.xy, v0.xyxx
dp4 o1.x, v1.xyzw, cb0[0].xyzw
dp4 o1.y, v1.xyzw, cb0[1].xyzw
mov o1.zw, l(0,0,0,1.000000)
ret 
// Approximately 5 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
 
