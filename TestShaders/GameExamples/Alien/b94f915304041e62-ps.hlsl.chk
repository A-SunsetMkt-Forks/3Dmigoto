// Example udiv error shader.
// With uint fix.

cbuffer cbDefaultXSC : register(b0)
{
  float4x4 ViewProj : packoffset(c0);
  float4x4 ViewMatrix : packoffset(c4);
  float4x4 SecondaryProj : packoffset(c8);
  float4x4 SecondaryViewProj : packoffset(c12);
  float4x4 SecondaryInvViewProj : packoffset(c16);
  float4 ConstantColour : packoffset(c20);
  float4 Time : packoffset(c21);
  float4 CameraPosition : packoffset(c22);
  float4 InvProjectionParams : packoffset(c23);
  float4 SecondaryInvProjectionParams : packoffset(c24);
  float4 ShaderDebugParams : packoffset(c25);
  float4 ToneMappingDebugParams : packoffset(c26);
  float4 HDR_EncodeScale2 : packoffset(c27);
  float4 EmissiveSurfaceMultiplier : packoffset(c28);
  float4 AlphaLight_OffsetScale : packoffset(c29);
  float4 TessellationScaleFactor : packoffset(c30);
  float4 FogNearColour : packoffset(c31);
  float4 FogFarColour : packoffset(c32);
  float4 FogParams : packoffset(c33);
  float4 AdvanceEnvironmentShaderDebugParams : packoffset(c34);
  float4 SMAA_RTMetrics : packoffset(c35);
}

cbuffer cbRadiosityXSC : register(b9)
{
  float4 RadiosityInputSliceTexScaleBias : packoffset(c0);
  float4 RadiosityInputSlicePosScaleBias : packoffset(c1);
  float4 RadiosityOutputSliceTexScaleBias : packoffset(c2);
  float4 RadiosityOutputSlicePosScaleBias : packoffset(c3);
  float4 RadiosityInputOutputSliceSize : packoffset(c4);
  float4 RadiosityComputeParams : packoffset(c5);
}
SamplerState g_smp_input_SMP_s : register(s0);
SamplerState g_smp_manglemap_SMP_s : register(s1);
Texture2D<float4> g_smp_input_TEX : register(t0);
Texture2D<float4> g_smp_manglemap_TEX : register(t1);

Texture2D<float4> StereoParams : register(t125);

void main(
  float4 v0 : TEXCOORD0,
  float4 v1 : SV_Position0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1;
  uint4 bitmask;
  r0.xy = -RadiosityOutputSliceTexScaleBias.zw + v0.xy;
  r0.xy = float2(2.560000e+002,2.560000e+002) * r0.xy;
  r0.x = floor(r0.x);
  r0.y = floor(r0.y);
  r0.x = r0.y * RadiosityInputOutputSliceSize.z + r0.x;
  r0.x = (int)r0.x;
  r0.y = (uint)RadiosityInputOutputSliceSize.x;
  // r0.x = r0.x / r0.y;
  // r1.x = r0.x % r0.y;
// int2 tmp;
// tmp.x = (int)r0.x / (int)r0.y;
// tmp.y = (int)r0.x % (int)r0.y;
// r0.x = tmp.x;
// r1.x = tmp.y;
int tmpx = r0.x;
uint tmpy = r0.y;
r0.x = tmpx / tmpy;
r1.x = tmpx % tmpy;
  r1.x = r1.x;
  r1.y = r0.x;
  r0.xy = float2(5.000000e-001,5.000000e-001) + r1.xy;
  r0.xy = RadiosityInputSliceTexScaleBias.xy * r0.xy;
  r0.xy = r0.xy * float2(3.906250e-003,3.906250e-003) + RadiosityInputSliceTexScaleBias.zw;
  r0.xy = g_smp_manglemap_TEX.Sample(g_smp_manglemap_SMP_s, r0.xy).yz;
  r0.xy = r0.yx * float2(9.960938e-001,9.960938e-001) + float2(1.953125e-003,1.953125e-003);
  r0.xy = r0.xy * RadiosityInputSliceTexScaleBias.xy + RadiosityInputSliceTexScaleBias.zw;
  r0.xyzw = g_smp_input_TEX.Sample(g_smp_input_SMP_s, r0.xy).xyzw;
  o0.xyz = HDR_EncodeScale2.yyy * r0.xyz;
  o0.w = r0.w;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer cbDefaultXSC
// {
//
//   float4x4 ViewProj;                 // Offset:    0 Size:    64 [unused]
//   float4x4 ViewMatrix;               // Offset:   64 Size:    64 [unused]
//   float4x4 SecondaryProj;            // Offset:  128 Size:    64 [unused]
//   float4x4 SecondaryViewProj;        // Offset:  192 Size:    64 [unused]
//   float4x4 SecondaryInvViewProj;     // Offset:  256 Size:    64 [unused]
//   float4 ConstantColour;             // Offset:  320 Size:    16 [unused]
//   float4 Time;                       // Offset:  336 Size:    16 [unused]
//   float4 CameraPosition;             // Offset:  352 Size:    16 [unused]
//   float4 InvProjectionParams;        // Offset:  368 Size:    16 [unused]
//   float4 SecondaryInvProjectionParams;// Offset:  384 Size:    16 [unused]
//   float4 ShaderDebugParams;          // Offset:  400 Size:    16 [unused]
//   float4 ToneMappingDebugParams;     // Offset:  416 Size:    16 [unused]
//   float4 HDR_EncodeScale2;           // Offset:  432 Size:    16
//   float4 EmissiveSurfaceMultiplier;  // Offset:  448 Size:    16 [unused]
//   float4 AlphaLight_OffsetScale;     // Offset:  464 Size:    16 [unused]
//   float4 TessellationScaleFactor;    // Offset:  480 Size:    16 [unused]
//   float4 FogNearColour;              // Offset:  496 Size:    16 [unused]
//   float4 FogFarColour;               // Offset:  512 Size:    16 [unused]
//   float4 FogParams;                  // Offset:  528 Size:    16 [unused]
//   float4 AdvanceEnvironmentShaderDebugParams;// Offset:  544 Size:    16 [unused]
//   float4 SMAA_RTMetrics;             // Offset:  560 Size:    16 [unused]
//
// }
//
// cbuffer cbRadiosityXSC
// {
//
//   float4 RadiosityInputSliceTexScaleBias;// Offset:    0 Size:    16
//   float4 RadiosityInputSlicePosScaleBias;// Offset:   16 Size:    16 [unused]
//   float4 RadiosityOutputSliceTexScaleBias;// Offset:   32 Size:    16
//   float4 RadiosityOutputSlicePosScaleBias;// Offset:   48 Size:    16 [unused]
//   float4 RadiosityInputOutputSliceSize;// Offset:   64 Size:    16
//   float4 RadiosityComputeParams;     // Offset:   80 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// g_smp_input_SMP                   sampler      NA          NA    0        1
// g_smp_manglemap_SMP               sampler      NA          NA    1        1
// g_smp_input_TEX                   texture  float4          2d    0        1
// g_smp_manglemap_TEX               texture  float4          2d    1        1
// cbDefaultXSC                      cbuffer      NA          NA    0        1
// cbRadiosityXSC                    cbuffer      NA          NA    9        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// TEXCOORD                 0   xyzw        0     NONE   float   xy  
// SV_Position              0   xyzw        1      POS   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[28], immediateIndexed
dcl_constantbuffer cb9[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v0.xy
dcl_output o0.xyzw
dcl_temps 2
add r0.xy, v0.xyxx, -cb9[2].zwzz
mul r0.xy, r0.xyxx, l(256.000000, 256.000000, 0.000000, 0.000000)
round_ni r0.xy, r0.xyxx
mad r0.x, r0.y, cb9[4].z, r0.x
ftoi r0.x, r0.x
ftou r0.y, cb9[4].x
udiv r0.x, r1.x, r0.x, r0.y
itof r1.x, r1.x
itof r1.y, r0.x
add r0.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r0.xy, r0.xyxx, cb9[0].xyxx
mad r0.xy, r0.xyxx, l(0.003906, 0.003906, 0.000000, 0.000000), cb9[0].zwzz
sample_indexable(texture2d)(float,float,float,float) r0.xy, r0.xyxx, t1.yzxw, s1
mad r0.xy, r0.yxyy, l(0.996094, 0.996094, 0.000000, 0.000000), l(0.001953, 0.001953, 0.000000, 0.000000)
mad r0.xy, r0.xyxx, cb9[0].xyxx, cb9[0].zwzz
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, r0.xyxx, t0.xyzw, s0
mul o0.xyz, r0.xyzx, cb0[27].yyyy
mov o0.w, r0.w
ret 
// Approximately 19 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
