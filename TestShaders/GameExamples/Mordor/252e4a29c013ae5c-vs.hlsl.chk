
Texture2D<float4> StereoParams : register(t125);

void main(
  float2 v0 : SV_POSITION0,
  out float4 o0 : SV_POSITION0,
  out float2 o1 : TEXCOORD0,
  out float2 p1 : TEXCOORD1)
{
  o0.xy = v0.xy;
  o0.zw = float2(0.000000e+000,1.000000e+000);
  o1.xy = v0.xy * float2(1.000000e+000,1.000000e+000) + float2(0.000000e+000,0.000000e+000);
  p1.xy = v0.xy * float2(5.000000e-001,-5.000000e-001) + float2(5.000000e-001,5.000000e-001);  
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20546
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xy          0     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float     zw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_input v0.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o1.zw
mov o0.xy, v0.xyxx
mov o0.zw, l(0,0,0,1.000000)
mad o1.xyzw, v0.xyxy, l(1.000000, 1.000000, 0.500000, -0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
ret 
// Approximately 4 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
