
cbuffer CViewportShaderParameterProvider : register(b0)
{
  float4 _AmbientColorMultiplier : packoffset(c0);
  float4 _AmbientOcclusionRanges_SunOcclusionFactor : packoffset(c1);
  float4 _BloomAdaptationFactor : packoffset(c2);
  float4 _CameraDirection_FOVDeg : packoffset(c3);
  float4 _CameraDistances : packoffset(c4);
  float4 _CameraNearPlaneSize : packoffset(c5);
  float4 _CameraPositionFractions_ZOffsetWS : packoffset(c6);
  float4 _CameraPositionFractions_ZOffsetWS_Previous : packoffset(c7);
  float4 _CameraPosition_DistanceScale : packoffset(c8);
  float4 _CameraPosition_DistanceScale_Previous : packoffset(c9);
  float4x4 _CullingViewProjectionMatrix : packoffset(c10);
  float4 _DepthScale : packoffset(c14);
  float4 _DepthTextureRcpSize : packoffset(c15);
  float4 _DepthTextureScaleOffset : packoffset(c16);
  float4 _FogParams : packoffset(c17);
  float4 _FogSHB : packoffset(c18);
  float4 _FogSHG : packoffset(c19);
  float4 _FogSHR : packoffset(c20);
  float4 _HeightFogParams : packoffset(c21);
  float4x4 _InvProjectionMatrix : packoffset(c22);
  float4x4 _InvViewMatrix : packoffset(c26);
  float4x4 _ProjectionMatrix : packoffset(c30);
  float4 _TempSunDirection : packoffset(c34);
  float4x4 _ViewMatrix : packoffset(c35);
  float4 _ViewPoint_ShadowProjDepthMin : packoffset(c39);
  float4x4 _ViewProjectionMatrix : packoffset(c40);
  float4x4 _ViewRotProjectionMatrix : packoffset(c44);
  float4x4 _ViewRotProjectionMatrix_Previous : packoffset(c48);
  float4 _ViewportSize : packoffset(c52);
  float2 _MotionVectorOffsets : packoffset(c53);
  float3 _CameraRight : packoffset(c54);
  float3 _CameraUp : packoffset(c55);
  float3 _EnvironmentMapColorOffset : packoffset(c56);
  float3 _EnvironmentMapColorScale : packoffset(c57);
}

cbuffer CSceneTransformParameterProvider : register(b1)
{
  float4x4 _WorldMatrix : packoffset(c0);
  float3 _WorldPositionFractions : packoffset(c4);
}

cbuffer CSceneGeometry : register(b2)
{
  float4 _GeometryPickingID : packoffset(c0);
  float4 _MeshDecompression : packoffset(c1);
  float4 _NormalizedXYBBox : packoffset(c2);
}

cbuffer InkAndPaint : register(b3)
{
  float2 _OutlineShapePatternTiling : packoffset(c0);
  float2 _OutlineVisualTiling : packoffset(c0.z);
  float4 _OutlineColor : packoffset(c1);
  float4 _InteriorColor : packoffset(c2);
  float4 _InkAndPaintParams : packoffset(c3);
  float4 _BehindObjectColor : packoffset(c4);
  float4 _MaterialPickingID : packoffset(c5);
}

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  int4 v0 : position0,
  int2 v1 : texcoord0,
  float4 v2 : normal0,
  float4 v3 : color0,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float4 o2 : TEXCOORD1,
  out float o3 : TEXCOORD2)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask;
  r0.x = _WorldMatrix._m30;
  r0.y = _WorldMatrix._m31;
  r0.z = _WorldMatrix._m32;
  r1.xyz = -_CameraPosition_DistanceScale.xyz + r0.xyz;
  r1.xyz = -_CameraPositionFractions_ZOffsetWS.xyz + r1.xyz;
  r2.xyz = v0.xyz;
  r2.xyz = r2.xyz * _MeshDecompression.yyy + _MeshDecompression.xxx;
  r3.x = dot(r2.xyz, _WorldMatrix._m00_m10_m20);
  r3.y = dot(r2.xyz, _WorldMatrix._m01_m11_m21);
  r3.z = dot(r2.xyz, _WorldMatrix._m02_m12_m22);
  r1.xyz = r3.xyz + r1.xyz;
  r0.xyz = r3.xyz + r0.xyz;
  r0.w = dot(r1.xyz, r1.xyz);
  r0.w = rsqrt(r0.w);
  r2.xyz = r1.xyz * r0.www;
  r1.xyz = r2.xyz * _CameraPositionFractions_ZOffsetWS.www + r1.xyz;
  r1.w = 1.000000000e+000;
  r2.x = dot(r1.xyzw, _ViewRotProjectionMatrix._m00_m10_m20_m30);
  r2.y = dot(r1.xyzw, _ViewRotProjectionMatrix._m01_m11_m21_m31);
  r2.w = dot(r1.xyzw, _ViewRotProjectionMatrix._m03_m13_m23_m33);
  o0.z = dot(r1.xyzw, _ViewRotProjectionMatrix._m02_m12_m22_m32);
  o0.xyw = r2.xyw;
  r1.xyzw = _DepthTextureScaleOffset.xyzw * r2.xyww;
  o2.z = r2.w;
  o2.xy = r1.xy + r1.zw;
  r1.xyz = -_CameraPosition_DistanceScale.xyz + r0.xyz;
  r0.w = dot(r1.xyz, r1.xyz);
  r0.w = rsqrt(r0.w);
  r1.xyz = r1.xyz * r0.www;
  r0.xyz = r1.xyz * _CameraPositionFractions_ZOffsetWS.www + r0.xyz;
  r0.xyz = -_CameraPosition_DistanceScale.xyz + r0.xyz;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = sqrt(r0.w);
  r1.xyz = r0.xyz / r0.www;
  r0.x = dot(_CameraDirection_FOVDeg.xyz, r0.xyz);
  o3.x = _CameraDistances.w * r0.x;
  r0.xyz = v2.xyz * float3(2.000000e+000,2.000000e+000,2.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-1.000000e+000);
  r2.x = dot(r0.xyz, _WorldMatrix._m00_m10_m20);
  r2.y = dot(r0.xyz, _WorldMatrix._m01_m11_m21);
  r2.z = dot(r0.xyz, _WorldMatrix._m02_m12_m22);
  r0.x = dot(r2.xyz, r2.xyz);
  r0.x = rsqrt(r0.x);
  r0.xyz = r2.xyz * r0.xxx;
  o1.w = dot(r0.xyz, r1.xyz);
  o1.xyz = float3(0.000000e+000,0.000000e+000,0.000000e+000);
  r0.x = 5.000000000e-001 * _InkAndPaintParams.y;
  o2.w = 1.000000e+000 / r0.x;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4 _AmbientColorMultiplier;    // Offset:    0 Size:    16 [unused]
//   float4 _AmbientOcclusionRanges_SunOcclusionFactor;// Offset:   16 Size:    16 [unused]
//   float4 _BloomAdaptationFactor;     // Offset:   32 Size:    16 [unused]
//   float4 _CameraDirection_FOVDeg;    // Offset:   48 Size:    16
//   float4 _CameraDistances;           // Offset:   64 Size:    16
//   float4 _CameraNearPlaneSize;       // Offset:   80 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS;// Offset:   96 Size:    16
//   float4 _CameraPositionFractions_ZOffsetWS_Previous;// Offset:  112 Size:    16 [unused]
//   float4 _CameraPosition_DistanceScale;// Offset:  128 Size:    16
//   float4 _CameraPosition_DistanceScale_Previous;// Offset:  144 Size:    16 [unused]
//   float4x4 _CullingViewProjectionMatrix;// Offset:  160 Size:    64 [unused]
//   float4 _DepthScale;                // Offset:  224 Size:    16 [unused]
//   float4 _DepthTextureRcpSize;       // Offset:  240 Size:    16 [unused]
//   float4 _DepthTextureScaleOffset;   // Offset:  256 Size:    16
//   float4 _FogParams;                 // Offset:  272 Size:    16 [unused]
//   float4 _FogSHB;                    // Offset:  288 Size:    16 [unused]
//   float4 _FogSHG;                    // Offset:  304 Size:    16 [unused]
//   float4 _FogSHR;                    // Offset:  320 Size:    16 [unused]
//   float4 _HeightFogParams;           // Offset:  336 Size:    16 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  352 Size:    64 [unused]
//   float4x4 _InvViewMatrix;           // Offset:  416 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  480 Size:    64 [unused]
//   float4 _TempSunDirection;          // Offset:  544 Size:    16 [unused]
//   float4x4 _ViewMatrix;              // Offset:  560 Size:    64 [unused]
//   float4 _ViewPoint_ShadowProjDepthMin;// Offset:  624 Size:    16 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:  640 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix; // Offset:  704 Size:    64
//   float4x4 _ViewRotProjectionMatrix_Previous;// Offset:  768 Size:    64 [unused]
//   float4 _ViewportSize;              // Offset:  832 Size:    16 [unused]
//   float2 _MotionVectorOffsets;       // Offset:  848 Size:     8 [unused]
//   float3 _CameraRight;               // Offset:  864 Size:    12 [unused]
//   float3 _CameraUp;                  // Offset:  880 Size:    12 [unused]
//   float3 _EnvironmentMapColorOffset; // Offset:  896 Size:    12 [unused]
//   float3 _EnvironmentMapColorScale;  // Offset:  912 Size:    12 [unused]
//
// }
//
// cbuffer CSceneTransformParameterProvider
// {
//
//   float4x4 _WorldMatrix;             // Offset:    0 Size:    64
//   float3 _WorldPositionFractions;    // Offset:   64 Size:    12 [unused]
//
// }
//
// cbuffer CSceneGeometry
// {
//
//   float4 _GeometryPickingID;         // Offset:    0 Size:    16 [unused]
//   float4 _MeshDecompression;         // Offset:   16 Size:    16
//   float4 _NormalizedXYBBox;          // Offset:   32 Size:    16 [unused]
//
// }
//
// cbuffer InkAndPaint
// {
//
//   float2 _OutlineShapePatternTiling; // Offset:    0 Size:     8 [unused]
//   float2 _OutlineVisualTiling;       // Offset:    8 Size:     8 [unused]
//   float4 _OutlineColor;              // Offset:   16 Size:    16 [unused]
//   float4 _InteriorColor;             // Offset:   32 Size:    16 [unused]
//   float4 _InkAndPaintParams;         // Offset:   48 Size:    16
//   float4 _BehindObjectColor;         // Offset:   64 Size:    16 [unused]
//   float4 _MaterialPickingID;         // Offset:   80 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// CSceneTransformParameterProvider    cbuffer      NA          NA    1        1
// CSceneGeometry                    cbuffer      NA          NA    2        1
// InkAndPaint                       cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE     int   xyz 
// texcoord                 0   xy          1     NONE     int       
// normal                   0   xyzw        2     NONE   float   xyz 
// color                    0   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   x           3     NONE   float   x   
//
vs_4_0
dcl_constantbuffer cb0[48], immediateIndexed
dcl_constantbuffer cb1[3], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_constantbuffer cb3[4], immediateIndexed
dcl_input v0.xyz
dcl_input v2.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.x
dcl_temps 4
mov r0.x, cb1[0].w
mov r0.y, cb1[1].w
mov r0.z, cb1[2].w
add r1.xyz, r0.xyzx, -cb0[8].xyzx
add r1.xyz, r1.xyzx, -cb0[6].xyzx
itof r2.xyz, v0.xyzx
mad r2.xyz, r2.xyzx, cb2[1].yyyy, cb2[1].xxxx
dp3 r3.x, r2.xyzx, cb1[0].xyzx
dp3 r3.y, r2.xyzx, cb1[1].xyzx
dp3 r3.z, r2.xyzx, cb1[2].xyzx
add r1.xyz, r1.xyzx, r3.xyzx
add r0.xyz, r0.xyzx, r3.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mad r1.xyz, r2.xyzx, cb0[6].wwww, r1.xyzx
mov r1.w, l(1.000000)
dp4 r2.x, r1.xyzw, cb0[44].xyzw
dp4 r2.y, r1.xyzw, cb0[45].xyzw
dp4 r2.w, r1.xyzw, cb0[47].xyzw
dp4 o0.z, r1.xyzw, cb0[46].xyzw
mov o0.xyw, r2.xyxw
mul r1.xyzw, r2.xyww, cb0[16].xyzw
mov o2.z, r2.w
add o2.xy, r1.zwzz, r1.xyxx
add r1.xyz, r0.xyzx, -cb0[8].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mad r0.xyz, r1.xyzx, cb0[6].wwww, r0.xyzx
add r0.xyz, r0.xyzx, -cb0[8].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
sqrt r0.w, r0.w
div r1.xyz, r0.xyzx, r0.wwww
dp3 r0.x, cb0[3].xyzx, r0.xyzx
mul o3.x, r0.x, cb0[4].w
mad r0.xyz, v2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r2.x, r0.xyzx, cb1[0].xyzx
dp3 r2.y, r0.xyzx, cb1[1].xyzx
dp3 r2.z, r0.xyzx, cb1[2].xyzx
dp3 r0.x, r2.xyzx, r2.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r2.xyzx
dp3 o1.w, r0.xyzx, r1.xyzx
mov o1.xyz, l(0,0,0,0)
mul r0.x, cb3[3].y, l(0.500000)
div o2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
ret 
// Approximately 48 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4 _AmbientColorMultiplier;    // Offset:    0 Size:    16 [unused]
//   float4 _AmbientOcclusionRanges_SunOcclusionFactor;// Offset:   16 Size:    16 [unused]
//   float4 _BloomAdaptationFactor;     // Offset:   32 Size:    16 [unused]
//   float4 _CameraDirection_FOVDeg;    // Offset:   48 Size:    16
//   float4 _CameraDistances;           // Offset:   64 Size:    16
//   float4 _CameraNearPlaneSize;       // Offset:   80 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS;// Offset:   96 Size:    16
//   float4 _CameraPositionFractions_ZOffsetWS_Previous;// Offset:  112 Size:    16 [unused]
//   float4 _CameraPosition_DistanceScale;// Offset:  128 Size:    16
//   float4 _CameraPosition_DistanceScale_Previous;// Offset:  144 Size:    16 [unused]
//   float4x4 _CullingViewProjectionMatrix;// Offset:  160 Size:    64 [unused]
//   float4 _DepthScale;                // Offset:  224 Size:    16 [unused]
//   float4 _DepthTextureRcpSize;       // Offset:  240 Size:    16 [unused]
//   float4 _DepthTextureScaleOffset;   // Offset:  256 Size:    16
//   float4 _FogParams;                 // Offset:  272 Size:    16 [unused]
//   float4 _FogSHB;                    // Offset:  288 Size:    16 [unused]
//   float4 _FogSHG;                    // Offset:  304 Size:    16 [unused]
//   float4 _FogSHR;                    // Offset:  320 Size:    16 [unused]
//   float4 _HeightFogParams;           // Offset:  336 Size:    16 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  352 Size:    64 [unused]
//   float4x4 _InvViewMatrix;           // Offset:  416 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  480 Size:    64 [unused]
//   float4 _TempSunDirection;          // Offset:  544 Size:    16 [unused]
//   float4x4 _ViewMatrix;              // Offset:  560 Size:    64 [unused]
//   float4 _ViewPoint_ShadowProjDepthMin;// Offset:  624 Size:    16 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:  640 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix; // Offset:  704 Size:    64
//   float4x4 _ViewRotProjectionMatrix_Previous;// Offset:  768 Size:    64 [unused]
//   float4 _ViewportSize;              // Offset:  832 Size:    16 [unused]
//   float2 _MotionVectorOffsets;       // Offset:  848 Size:     8 [unused]
//   float3 _CameraRight;               // Offset:  864 Size:    12 [unused]
//   float3 _CameraUp;                  // Offset:  880 Size:    12 [unused]
//   float3 _EnvironmentMapColorOffset; // Offset:  896 Size:    12 [unused]
//   float3 _EnvironmentMapColorScale;  // Offset:  912 Size:    12 [unused]
//
// }
//
// cbuffer CSceneTransformParameterProvider
// {
//
//   float4x4 _WorldMatrix;             // Offset:    0 Size:    64
//   float3 _WorldPositionFractions;    // Offset:   64 Size:    12 [unused]
//
// }
//
// cbuffer CSceneGeometry
// {
//
//   float4 _GeometryPickingID;         // Offset:    0 Size:    16 [unused]
//   float4 _MeshDecompression;         // Offset:   16 Size:    16
//   float4 _NormalizedXYBBox;          // Offset:   32 Size:    16 [unused]
//
// }
//
// cbuffer InkAndPaint
// {
//
//   float2 _OutlineShapePatternTiling; // Offset:    0 Size:     8 [unused]
//   float2 _OutlineVisualTiling;       // Offset:    8 Size:     8 [unused]
//   float4 _OutlineColor;              // Offset:   16 Size:    16 [unused]
//   float4 _InteriorColor;             // Offset:   32 Size:    16 [unused]
//   float4 _InkAndPaintParams;         // Offset:   48 Size:    16
//   float4 _BehindObjectColor;         // Offset:   64 Size:    16 [unused]
//   float4 _MaterialPickingID;         // Offset:   80 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// CSceneTransformParameterProvider    cbuffer      NA          NA    1        1
// CSceneGeometry                    cbuffer      NA          NA    2        1
// InkAndPaint                       cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// position                 0   xyzw        0     NONE     int   xyz 
// texcoord                 0   xy          1     NONE     int       
// normal                   0   xyzw        2     NONE   float   xyz 
// color                    0   xyzw        3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   x           3     NONE   float   x   
//
vs_4_0
dcl_constantbuffer cb0[48], immediateIndexed
dcl_constantbuffer cb1[3], immediateIndexed
dcl_constantbuffer cb2[2], immediateIndexed
dcl_constantbuffer cb3[4], immediateIndexed
dcl_input v0.xyz
dcl_input v2.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_output o3.x
dcl_temps 4
mov r0.x, cb1[0].w
mov r0.y, cb1[1].w
mov r0.z, cb1[2].w
add r1.xyz, r0.xyzx, -cb0[8].xyzx
add r1.xyz, r1.xyzx, -cb0[6].xyzx
itof r2.xyz, v0.xyzx
mad r2.xyz, r2.xyzx, cb2[1].yyyy, cb2[1].xxxx
dp3 r3.x, r2.xyzx, cb1[0].xyzx
dp3 r3.y, r2.xyzx, cb1[1].xyzx
dp3 r3.z, r2.xyzx, cb1[2].xyzx
add r1.xyz, r1.xyzx, r3.xyzx
add r0.xyz, r0.xyzx, r3.xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r1.xyzx
mad r1.xyz, r2.xyzx, cb0[6].wwww, r1.xyzx
mov r1.w, l(1.000000)
dp4 r2.x, r1.xyzw, cb0[44].xyzw
dp4 r2.y, r1.xyzw, cb0[45].xyzw
dp4 r2.w, r1.xyzw, cb0[47].xyzw
dp4 o0.z, r1.xyzw, cb0[46].xyzw
mov o0.xyw, r2.xyxw
mul r1.xyzw, r2.xyww, cb0[16].xyzw
mov o2.z, r2.w
add o2.xy, r1.zwzz, r1.xyxx
add r1.xyz, r0.xyzx, -cb0[8].xyzx
dp3 r0.w, r1.xyzx, r1.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r1.xyzx
mad r0.xyz, r1.xyzx, cb0[6].wwww, r0.xyzx
add r0.xyz, r0.xyzx, -cb0[8].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
sqrt r0.w, r0.w
div r1.xyz, r0.xyzx, r0.wwww
dp3 r0.x, cb0[3].xyzx, r0.xyzx
mul o3.x, r0.x, cb0[4].w
mad r0.xyz, v2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r2.x, r0.xyzx, cb1[0].xyzx
dp3 r2.y, r0.xyzx, cb1[1].xyzx
dp3 r2.z, r0.xyzx, cb1[2].xyzx
dp3 r0.x, r2.xyzx, r2.xyzx
rsq r0.x, r0.x
mul r0.xyz, r0.xxxx, r2.xyzx
dp3 o1.w, r0.xyzx, r1.xyzx
mov o1.xyz, l(0,0,0,0)
mul r0.x, l(0.500000), cb3[3].y
div o2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
ret 
// Approximately 48 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
