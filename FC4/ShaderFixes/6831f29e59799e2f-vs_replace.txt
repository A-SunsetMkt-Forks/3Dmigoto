// Direct sun shafts (pass 1/4) + other celestial objects

// Was using partner pixel shader filtering in d3dx.ini to only adjust sun
// shafts, now doing the fix in parts 2+3 instead of here.

cbuffer CViewportShaderParameterProvider : register(b0)
{
  float4 _AmbientColorMultiplier : packoffset(c0);
  float4 _AmbientOcclusionRanges_SunOcclusionFactor : packoffset(c1);
  float4 _BloomAdaptationFactor : packoffset(c2);
  float4 _CameraDirection_FOVDeg : packoffset(c3);
  float4 _CameraDistances : packoffset(c4);
  float4 _CameraNearPlaneSize : packoffset(c5);
  float4 _CameraPositionFractions_ZOffsetWS : packoffset(c6);
  float4 _CameraPositionFractions_ZOffsetWS_Previous : packoffset(c7);
  float4 _CameraPosition_DistanceScale : packoffset(c8);
  float4 _CameraPosition_DistanceScale_Previous : packoffset(c9);
  float4x4 _CullingViewProjectionMatrix : packoffset(c10);
  float4 _DepthScale : packoffset(c14);
  float4 _DepthTextureRcpSize : packoffset(c15);
  float4 _DepthTextureScaleOffset : packoffset(c16);
  float4 _FogParams : packoffset(c17);
  float4 _FogSHB : packoffset(c18);
  float4 _FogSHG : packoffset(c19);
  float4 _FogSHR : packoffset(c20);
  float4 _HeightFogParams : packoffset(c21);
  float4x4 _InvProjectionMatrix : packoffset(c22);
  float4x4 _InvViewMatrix : packoffset(c26);
  float4x4 _ProjectionMatrix : packoffset(c30);
  float4 _TempSunDirection : packoffset(c34);
  float4x4 _ViewMatrix : packoffset(c35);
  float4 _ViewPoint_ShadowProjDepthMin : packoffset(c39);
  float4x4 _ViewProjectionMatrix : packoffset(c40);
  float4x4 _ViewRotProjectionMatrix : packoffset(c44);
  float4x4 _ViewRotProjectionMatrix_Previous : packoffset(c48);
  float4 _ViewportSize : packoffset(c52);
  float2 _MotionVectorOffsets : packoffset(c53);
  float3 _CameraRight : packoffset(c54);
  float3 _CameraUp : packoffset(c55);
  float3 _EnvironmentMapColorOffset : packoffset(c56);
  float3 _EnvironmentMapColorScale : packoffset(c57);
}

cbuffer CCelestialBodyShaderParameterProvider : register(b1)
{
  float4x4 _ModelViewProj : packoffset(c0);
  float4 _Params : packoffset(c4);
  float3 _BodyColor : packoffset(c5);
  float3 _SkyPosition : packoffset(c6);
}

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  float4 v0 : POSITION0,
  float2 v1 : TEXCOORD0,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float2 o2 : TEXCOORD1)
{
  float4 r0,r1;
  uint4 bitmask, uiDest;
  float4 fDest;

  o0.x = dot(v0.xyzw, _ModelViewProj._m00_m10_m20_m30);
  o0.y = dot(v0.xyzw, _ModelViewProj._m01_m11_m21_m31);
  o0.z = dot(v0.xyzw, _ModelViewProj._m02_m12_m22_m32);
  o0.w = dot(v0.xyzw, _ModelViewProj._m03_m13_m23_m33);

// Part of an early attempt to fix god rays (direct, not nvidia or volumetric
// fog). Was able to position them correctly, but they were not being occluded
// accurately. Instead they are now fixed in the two propagation shaders.

// NOTE: would break sun position, so use partner shader filtering so this
// only applies when used with the sun shaft pixel shader
//float4 stereo = StereoParams.Load(0);
//o0.x -= stereo.x * (o0.w - stereo.y);

  r0.xyz = v0.yzx * _CameraDistances.yyy + _SkyPosition.yzx;
  r0.xyz = -_CameraPosition_DistanceScale.yzx + r0.xyz;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r1.yzw = r0.xyz * r0.www;
  r0.x = _HeightFogParams.y * r0.y;
  r0.x = max(r0.x, -1.250000000e+002);
  o1.w = min(r0.x, 1.250000000e+002);
  r1.x = 1.000000000e+000;
  r0.x = dot(_FogSHR.xyzw, r1.xyzw);
  r0.y = dot(_FogSHG.xyzw, r1.xyzw);
  r0.z = dot(_FogSHB.xyzw, r1.xyzw);
  o1.xyz = max(r0.xyz, float3(0.000000e+000,0.000000e+000,0.000000e+000));
  o2.xy = v1.xy;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4 _AmbientColorMultiplier;    // Offset:    0 Size:    16 [unused]
//   float4 _AmbientOcclusionRanges_SunOcclusionFactor;// Offset:   16 Size:    16 [unused]
//   float4 _BloomAdaptationFactor;     // Offset:   32 Size:    16 [unused]
//   float4 _CameraDirection_FOVDeg;    // Offset:   48 Size:    16 [unused]
//   float4 _CameraDistances;           // Offset:   64 Size:    16
//   float4 _CameraNearPlaneSize;       // Offset:   80 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS;// Offset:   96 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS_Previous;// Offset:  112 Size:    16 [unused]
//   float4 _CameraPosition_DistanceScale;// Offset:  128 Size:    16
//   float4 _CameraPosition_DistanceScale_Previous;// Offset:  144 Size:    16 [unused]
//   float4x4 _CullingViewProjectionMatrix;// Offset:  160 Size:    64 [unused]
//   float4 _DepthScale;                // Offset:  224 Size:    16 [unused]
//   float4 _DepthTextureRcpSize;       // Offset:  240 Size:    16 [unused]
//   float4 _DepthTextureScaleOffset;   // Offset:  256 Size:    16 [unused]
//   float4 _FogParams;                 // Offset:  272 Size:    16 [unused]
//   float4 _FogSHB;                    // Offset:  288 Size:    16
//   float4 _FogSHG;                    // Offset:  304 Size:    16
//   float4 _FogSHR;                    // Offset:  320 Size:    16
//   float4 _HeightFogParams;           // Offset:  336 Size:    16
//   float4x4 _InvProjectionMatrix;     // Offset:  352 Size:    64 [unused]
//   float4x4 _InvViewMatrix;           // Offset:  416 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  480 Size:    64 [unused]
//   float4 _TempSunDirection;          // Offset:  544 Size:    16 [unused]
//   float4x4 _ViewMatrix;              // Offset:  560 Size:    64 [unused]
//   float4 _ViewPoint_ShadowProjDepthMin;// Offset:  624 Size:    16 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:  640 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix; // Offset:  704 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix_Previous;// Offset:  768 Size:    64 [unused]
//   float4 _ViewportSize;              // Offset:  832 Size:    16 [unused]
//   float2 _MotionVectorOffsets;       // Offset:  848 Size:     8 [unused]
//   float3 _CameraRight;               // Offset:  864 Size:    12 [unused]
//   float3 _CameraUp;                  // Offset:  880 Size:    12 [unused]
//   float3 _EnvironmentMapColorOffset; // Offset:  896 Size:    12 [unused]
//   float3 _EnvironmentMapColorScale;  // Offset:  912 Size:    12 [unused]
//
// }
//
// cbuffer CCelestialBodyShaderParameterProvider
// {
//
//   float4x4 _ModelViewProj;           // Offset:    0 Size:    64
//   float4 _Params;                    // Offset:   64 Size:    16 [unused]
//   float3 _BodyColor;                 // Offset:   80 Size:    12 [unused]
//   float3 _SkyPosition;               // Offset:   96 Size:    12
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// CCelestialBodyShaderParameterProvider    cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xy          2     NONE   float   xy  
//
vs_4_0
dcl_constantbuffer cb0[22], immediateIndexed
dcl_constantbuffer cb1[7], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_temps 2
dp4 o0.x, v0.xyzw, cb1[0].xyzw
dp4 o0.y, v0.xyzw, cb1[1].xyzw
dp4 o0.z, v0.xyzw, cb1[2].xyzw
dp4 o0.w, v0.xyzw, cb1[3].xyzw
mad r0.xyz, v0.yzxy, cb0[4].yyyy, cb1[6].yzxy
add r0.xyz, r0.xyzx, -cb0[8].yzxy
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.yzw, r0.wwww, r0.xxyz
mul r0.x, r0.y, cb0[21].y
max r0.x, r0.x, l(-125.000000)
min o1.w, r0.x, l(125.000000)
mov r1.x, l(1.000000)
dp4 r0.x, cb0[20].xyzw, r1.xyzw
dp4 r0.y, cb0[19].xyzw, r1.xyzw
dp4 r0.z, cb0[18].xyzw, r1.xyzw
max o1.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mov o2.xy, v1.xyxx
ret 
// Approximately 19 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
