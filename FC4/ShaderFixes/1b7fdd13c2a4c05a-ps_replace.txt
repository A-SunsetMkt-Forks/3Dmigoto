
cbuffer CViewportShaderParameterProvider : register(b0)
{
  float4 _AmbientColorMultiplier : packoffset(c0);
  float4 _AmbientOcclusionRanges_SunOcclusionFactor : packoffset(c1);
  float4 _BloomAdaptationFactor : packoffset(c2);
  float4 _CameraDirection_FOVDeg : packoffset(c3);
  float4 _CameraDistances : packoffset(c4);
  float4 _CameraNearPlaneSize : packoffset(c5);
  float4 _CameraPositionFractions_ZOffsetWS : packoffset(c6);
  float4 _CameraPositionFractions_ZOffsetWS_Previous : packoffset(c7);
  float4 _CameraPosition_DistanceScale : packoffset(c8);
  float4 _CameraPosition_DistanceScale_Previous : packoffset(c9);
  float4x4 _CullingViewProjectionMatrix : packoffset(c10);
  float4 _DepthScale : packoffset(c14);
  float4 _DepthTextureRcpSize : packoffset(c15);
  float4 _DepthTextureScaleOffset : packoffset(c16);
  float4 _FogParams : packoffset(c17);
  float4 _FogSHB : packoffset(c18);
  float4 _FogSHG : packoffset(c19);
  float4 _FogSHR : packoffset(c20);
  float4 _HeightFogParams : packoffset(c21);
  float4x4 _InvProjectionMatrix : packoffset(c22);
  float4x4 _InvViewMatrix : packoffset(c26);
  float4x4 _ProjectionMatrix : packoffset(c30);
  float4 _TempSunDirection : packoffset(c34);
  float4x4 _ViewMatrix : packoffset(c35);
  float4 _ViewPoint_ShadowProjDepthMin : packoffset(c39);
  float4x4 _ViewProjectionMatrix : packoffset(c40);
  float4x4 _ViewRotProjectionMatrix : packoffset(c44);
  float4x4 _ViewRotProjectionMatrix_Previous : packoffset(c48);
  float4 _ViewportSize : packoffset(c52);
  float2 _MotionVectorOffsets : packoffset(c53);
  float3 _CameraRight : packoffset(c54);
  float3 _CameraUp : packoffset(c55);
  float3 _EnvironmentMapColorOffset : packoffset(c56);
  float3 _EnvironmentMapColorScale : packoffset(c57);
}

cbuffer CDepthReconstructionProvider : register(b1)
{
  float4x4 _InvViewRotProjectionMatrix : packoffset(c0);
  float4x4 _ReconsInvViewRotProjectionMatrix : packoffset(c4);
  float3 _ReconsCamPosition : packoffset(c8);
  float _ReconsDepthMul : packoffset(c8.w);
  float _ReconsDepthOffset : packoffset(c9);
  float _ReconsViewFar : packoffset(c9.y);
  float _ReconsViewNear : packoffset(c9.z);
  float _ReconsViewOORange : packoffset(c9.w);
  float _ReconsViewRange : packoffset(c10);
}

cbuffer CCloudShadowParameterProvider : register(b2)
{
  float4 _CloudSettings : packoffset(c0);
  float4 _SunColor : packoffset(c1);
  float3 _PlayerPosition : packoffset(c2);
  float3 _SunDirection : packoffset(c3);
}
SamplerState SkyDomeColorWrap_s : register(s0);
Texture2DMS<float4,2> DepthVPSampler_TextureObject : register(t0);
Texture2D<float4> ShadowMaskPCSSSampler_TextureObject : register(t1);
Texture2D<float4> CloudShadowTexture : register(t2);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  uint v2 : SV_IsFrontFace0,
  uint w2 : SV_SampleIndex0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2;
  uint4 bitmask;
  DepthVPSampler_TextureObject.GetDimensions(r0.x, r0.y, bitmask.x);
  r0.xy = r0.xy;
  r0.xy = v1.xy * r0.xy;
  r0.xy = (int2)r0.xy;
  r0.zw = float2(0.000000e+000,0.000000e+000);
  r0.x = DepthVPSampler_TextureObject.Load(r0.xyz,w2.x).x;
  r0.x = _DepthScale.y * r0.x + _DepthScale.x;
  r0.x = 1.000000e+000 / r0.x;
  r0.x = _CameraDistances.z * r0.x;
  r0.y = _CameraDistances.x * _CameraDistances.y;
  r0.x = r0.y / r0.x;
  r0.x = _CameraDistances.y + -r0.x;
  r0.z = -r0.x * _CameraDistances.w + 1.000000000e+000;
  r0.xy = v1.xy * float2(2.000000e+000,-2.000000e+000) + float2(-1.000000e+000,1.000000e+000);
  r0.w = 1.000000000e+000;
  r1.x = dot(r0.xyzw, _InvViewRotProjectionMatrix._m00_m10_m20_m30);
  r1.y = dot(r0.xyzw, _InvViewRotProjectionMatrix._m01_m11_m21_m31);
  r1.z = dot(r0.xyzw, _InvViewRotProjectionMatrix._m02_m12_m22_m32);
  r0.x = dot(r0.xyzw, _InvViewRotProjectionMatrix._m03_m13_m23_m33);
  r0.xyz = r1.xyz / r0.xxx;
  r0.xyz = _CameraPosition_DistanceScale.xyz + r0.xyz;
  r0.xyz = -_PlayerPosition.xyz + r0.xyz;
  r0.w = dot(r0.xyz, r0.xyz);
  r1.x = -_CloudSettings.z * _CloudSettings.z + r0.w;
  r0.w = sqrt(r0.w);
  r1.x = 4.000000000e+000 * r1.x;
  r1.y = dot(r0.xyz, -_SunDirection.xyz);
  r1.z = r1.y + r1.y;
  r1.x = r1.z * r1.z + -r1.x;
  r1.x = sqrt(r1.x);
  r1.z = -r1.y * 2.000000000e+000 + -r1.x;
  r1.x = -r1.y * 2.000000000e+000 + r1.x;
  r1.xy = float2(5.000000e-001,5.000000e-001) * r1.xz;
  r1.x = max(r1.y, r1.x);
  r0.xyz = -_SunDirection.xyz * r1.xxx + r0.xyz;
  r0.y = r0.y / r0.x;
  r1.x = max(abs(r0.y), 1.000000000e+000);
  r1.x = 1.000000e+000 / r1.x;
  r1.y = min(abs(r0.y), 1.000000000e+000);
  r1.x = r1.y * r1.x;
  r1.y = r1.x * r1.x;
  r1.z = r1.y * 2.083509974e-002 + -8.513300121e-002;
  r1.z = r1.y * r1.z + 1.801410019e-001;
  r1.z = r1.y * r1.z + -3.302994967e-001;
  r1.y = r1.y * r1.z + 9.998660088e-001;
  r1.z = r1.x * r1.y;
  r1.z = r1.z * -2.000000000e+000 + 1.570796371e+000;
  r1.w = 1.000000000e+000 < abs(r0.y);
  r0.y = min(r0.y, 1.000000000e+000);
  r0.y = r0.y < -r0.y;
  r1.z = r1.w ? r1.z : 0;
  r1.x = r1.x * r1.y + r1.z;
  r0.y = r0.y ? -r1.x : r1.x;
  r1.xy = float2(-1.570796e+000,-4.712389e+000) + -r0.yy;
  r0.x = r0.x < 0.000000000e+000;
  r0.y = 9.150000215e-001 * r0.z;
  r0.y = r0.y / _CloudSettings.z;
  r2.y = 1.000000000e+000 + -r0.y;
  r0.x = r0.x ? r1.y : r1.x;
  r0.y = 3.000000119e-001 * _CloudSettings.y;
  r2.x = r0.x * 1.591549367e-001 + r0.y;
  r0.x = CloudShadowTexture.SampleLevel(SkyDomeColorWrap_s, r2.xy, 0.000000000e+000).w;
  r0.y = -1.000000015e-001 + r0.x;
  r0.y = saturate(1.000000000e+001 * r0.y);
  r0.z = r0.y * -2.000000000e+000 + 3.000000000e+000;
  r0.y = r0.y * r0.y;
  r0.x = -r0.z * r0.y + r0.x;
  r0.y = r0.z * r0.y;
  r0.z = 1.000000e+000 / _CloudSettings.z;
  r0.z = saturate(r0.w * r0.z);
  r0.w = r0.z * -2.000000000e+000 + 3.000000000e+000;
  r0.z = r0.z * r0.z;
  r0.z = r0.w * r0.z;
  r0.x = r0.z * r0.x + r0.y;
  r0.y = -r0.z * 5.000000000e-001 + 1.000000000e+000;
  r0.x = r0.x * r0.x;
  r0.z = _CloudSettings.x + _CloudSettings.x;
  r0.x = r0.z * r0.x;
  r0.x = saturate(-r0.x * r0.y + 1.000000000e+000);
  r1.xy = (int2)v0.xy;
  r1.zw = float2(0.000000e+000,0.000000e+000);
  r0.y = ShadowMaskPCSSSampler_TextureObject.Load(r1.xyz).x;
  o0.xyzw = r0.yyyy * r0.xxxx;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4 _AmbientColorMultiplier;    // Offset:    0 Size:    16 [unused]
//   float4 _AmbientOcclusionRanges_SunOcclusionFactor;// Offset:   16 Size:    16 [unused]
//   float4 _BloomAdaptationFactor;     // Offset:   32 Size:    16 [unused]
//   float4 _CameraDirection_FOVDeg;    // Offset:   48 Size:    16 [unused]
//   float4 _CameraDistances;           // Offset:   64 Size:    16
//   float4 _CameraNearPlaneSize;       // Offset:   80 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS;// Offset:   96 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS_Previous;// Offset:  112 Size:    16 [unused]
//   float4 _CameraPosition_DistanceScale;// Offset:  128 Size:    16
//   float4 _CameraPosition_DistanceScale_Previous;// Offset:  144 Size:    16 [unused]
//   float4x4 _CullingViewProjectionMatrix;// Offset:  160 Size:    64 [unused]
//   float4 _DepthScale;                // Offset:  224 Size:    16
//   float4 _DepthTextureRcpSize;       // Offset:  240 Size:    16 [unused]
//   float4 _DepthTextureScaleOffset;   // Offset:  256 Size:    16 [unused]
//   float4 _FogParams;                 // Offset:  272 Size:    16 [unused]
//   float4 _FogSHB;                    // Offset:  288 Size:    16 [unused]
//   float4 _FogSHG;                    // Offset:  304 Size:    16 [unused]
//   float4 _FogSHR;                    // Offset:  320 Size:    16 [unused]
//   float4 _HeightFogParams;           // Offset:  336 Size:    16 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  352 Size:    64 [unused]
//   float4x4 _InvViewMatrix;           // Offset:  416 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  480 Size:    64 [unused]
//   float4 _TempSunDirection;          // Offset:  544 Size:    16 [unused]
//   float4x4 _ViewMatrix;              // Offset:  560 Size:    64 [unused]
//   float4 _ViewPoint_ShadowProjDepthMin;// Offset:  624 Size:    16 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:  640 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix; // Offset:  704 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix_Previous;// Offset:  768 Size:    64 [unused]
//   float4 _ViewportSize;              // Offset:  832 Size:    16 [unused]
//   float2 _MotionVectorOffsets;       // Offset:  848 Size:     8 [unused]
//   float3 _CameraRight;               // Offset:  864 Size:    12 [unused]
//   float3 _CameraUp;                  // Offset:  880 Size:    12 [unused]
//   float3 _EnvironmentMapColorOffset; // Offset:  896 Size:    12 [unused]
//   float3 _EnvironmentMapColorScale;  // Offset:  912 Size:    12 [unused]
//
// }
//
// cbuffer CDepthReconstructionProvider
// {
//
//   float4x4 _InvViewRotProjectionMatrix;// Offset:    0 Size:    64
//   float4x4 _ReconsInvViewRotProjectionMatrix;// Offset:   64 Size:    64 [unused]
//   float3 _ReconsCamPosition;         // Offset:  128 Size:    12 [unused]
//   float _ReconsDepthMul;             // Offset:  140 Size:     4 [unused]
//   float _ReconsDepthOffset;          // Offset:  144 Size:     4 [unused]
//   float _ReconsViewFar;              // Offset:  148 Size:     4 [unused]
//   float _ReconsViewNear;             // Offset:  152 Size:     4 [unused]
//   float _ReconsViewOORange;          // Offset:  156 Size:     4 [unused]
//   float _ReconsViewRange;            // Offset:  160 Size:     4 [unused]
//
// }
//
// cbuffer CCloudShadowParameterProvider
// {
//
//   float4 _CloudSettings;             // Offset:    0 Size:    16
//   float4 _SunColor;                  // Offset:   16 Size:    16 [unused]
//   float3 _PlayerPosition;            // Offset:   32 Size:    12
//   float3 _SunDirection;              // Offset:   48 Size:    12
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// SkyDomeColorWrap                  sampler      NA          NA    0        1
// DepthVPSampler_TextureObject      texture  float4       2dMS2    0        1
// ShadowMaskPCSSSampler_TextureObject    texture  float4          2d    1        1
// CloudShadowTexture                texture  float4          2d    2        1
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// CDepthReconstructionProvider      cbuffer      NA          NA    1        1
// CCloudShadowParameterProvider     cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// SV_IsFrontFace           0   x           2    FFACE    uint       
// SV_SampleIndex           0    y          2   SAMPLE    uint    y  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
// Pixel Shader runs at sample frequency
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[15], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2dms(2) (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps_siv linear noperspective centroid v0.xy, position
dcl_input_ps linear v1.xy
dcl_input_ps_sgv v2.y, sampleIndex
dcl_output o0.xyzw
dcl_temps 3
resinfo_indexable(texture2dms)(float,float,float,float)_uint r0.xy, l(0), t0.xyzw
utof r0.xy, r0.xyxx
mul r0.xy, r0.xyxx, v1.xyxx
ftoi r0.xy, r0.xyxx
mov r0.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r0.x, r0.xyzw, t0.xyzw, v2.y
mad r0.x, cb0[14].y, r0.x, cb0[14].x
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
mul r0.x, r0.x, cb0[4].z
mul r0.y, cb0[4].y, cb0[4].x
div r0.x, r0.y, r0.x
add r0.x, -r0.x, cb0[4].y
mad r0.z, -r0.x, cb0[4].w, l(1.000000)
mad r0.xy, v1.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, cb1[0].xyzw
dp4 r1.y, r0.xyzw, cb1[1].xyzw
dp4 r1.z, r0.xyzw, cb1[2].xyzw
dp4 r0.x, r0.xyzw, cb1[3].xyzw
div r0.xyz, r1.xyzx, r0.xxxx
add r0.xyz, r0.xyzx, cb0[8].xyzx
add r0.xyz, r0.xyzx, -cb2[2].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
mad r1.x, -cb2[0].z, cb2[0].z, r0.w
sqrt r0.w, r0.w
mul r1.x, r1.x, l(4.000000)
dp3 r1.y, r0.xyzx, -cb2[3].xyzx
add r1.z, r1.y, r1.y
mad r1.x, r1.z, r1.z, -r1.x
sqrt r1.x, r1.x
mad r1.z, -r1.y, l(2.000000), -r1.x
mad r1.x, -r1.y, l(2.000000), r1.x
mul r1.xy, r1.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000)
max r1.x, r1.y, r1.x
mad r0.xyz, -cb2[3].xyzx, r1.xxxx, r0.xyzx
div r0.y, r0.y, r0.x
max r1.x, |r0.y|, l(1.000000)
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
min r1.y, |r0.y|, l(1.000000)
mul r1.x, r1.x, r1.y
mul r1.y, r1.x, r1.x
mad r1.z, r1.y, l(0.020835), l(-0.085133)
mad r1.z, r1.y, r1.z, l(0.180141)
mad r1.z, r1.y, r1.z, l(-0.330299)
mad r1.y, r1.y, r1.z, l(0.999866)
mul r1.z, r1.y, r1.x
mad r1.z, r1.z, l(-2.000000), l(1.570796)
lt r1.w, l(1.000000), |r0.y|
min r0.y, r0.y, l(1.000000)
lt r0.y, r0.y, -r0.y
and r1.z, r1.w, r1.z
mad r1.x, r1.x, r1.y, r1.z
movc r0.y, r0.y, -r1.x, r1.x
add r1.xy, -r0.yyyy, l(-1.570796, -4.712389, 0.000000, 0.000000)
lt r0.x, r0.x, l(0.000000)
mul r0.y, r0.z, l(0.915000)
div r0.y, r0.y, cb2[0].z
add r2.y, -r0.y, l(1.000000)
movc r0.x, r0.x, r1.y, r1.x
mul r0.y, cb2[0].y, l(0.300000)
mad r2.x, r0.x, l(0.159155), r0.y
sample_l_indexable(texture2d)(float,float,float,float) r0.x, r2.xyxx, t2.wxyz, s0, l(0.000000)
add r0.y, r0.x, l(-0.100000)
mul_sat r0.y, r0.y, l(10.000000)
mad r0.z, r0.y, l(-2.000000), l(3.000000)
mul r0.y, r0.y, r0.y
mad r0.x, -r0.z, r0.y, r0.x
mul r0.y, r0.y, r0.z
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), cb2[0].z
mul_sat r0.z, r0.z, r0.w
mad r0.w, r0.z, l(-2.000000), l(3.000000)
mul r0.z, r0.z, r0.z
mul r0.z, r0.z, r0.w
mad r0.x, r0.z, r0.x, r0.y
mad r0.y, -r0.z, l(0.500000), l(1.000000)
mul r0.x, r0.x, r0.x
add r0.z, cb2[0].x, cb2[0].x
mul r0.x, r0.x, r0.z
mad_sat r0.x, -r0.x, r0.y, l(1.000000)
ftoi r1.xy, v0.xyxx
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.y, r1.xyzw, t1.yxzw
mul o0.xyzw, r0.xxxx, r0.yyyy
ret 
// Approximately 84 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4 _AmbientColorMultiplier;    // Offset:    0 Size:    16 [unused]
//   float4 _AmbientOcclusionRanges_SunOcclusionFactor;// Offset:   16 Size:    16 [unused]
//   float4 _BloomAdaptationFactor;     // Offset:   32 Size:    16 [unused]
//   float4 _CameraDirection_FOVDeg;    // Offset:   48 Size:    16 [unused]
//   float4 _CameraDistances;           // Offset:   64 Size:    16
//   float4 _CameraNearPlaneSize;       // Offset:   80 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS;// Offset:   96 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS_Previous;// Offset:  112 Size:    16 [unused]
//   float4 _CameraPosition_DistanceScale;// Offset:  128 Size:    16
//   float4 _CameraPosition_DistanceScale_Previous;// Offset:  144 Size:    16 [unused]
//   float4x4 _CullingViewProjectionMatrix;// Offset:  160 Size:    64 [unused]
//   float4 _DepthScale;                // Offset:  224 Size:    16
//   float4 _DepthTextureRcpSize;       // Offset:  240 Size:    16 [unused]
//   float4 _DepthTextureScaleOffset;   // Offset:  256 Size:    16 [unused]
//   float4 _FogParams;                 // Offset:  272 Size:    16 [unused]
//   float4 _FogSHB;                    // Offset:  288 Size:    16 [unused]
//   float4 _FogSHG;                    // Offset:  304 Size:    16 [unused]
//   float4 _FogSHR;                    // Offset:  320 Size:    16 [unused]
//   float4 _HeightFogParams;           // Offset:  336 Size:    16 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  352 Size:    64 [unused]
//   float4x4 _InvViewMatrix;           // Offset:  416 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  480 Size:    64 [unused]
//   float4 _TempSunDirection;          // Offset:  544 Size:    16 [unused]
//   float4x4 _ViewMatrix;              // Offset:  560 Size:    64 [unused]
//   float4 _ViewPoint_ShadowProjDepthMin;// Offset:  624 Size:    16 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:  640 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix; // Offset:  704 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix_Previous;// Offset:  768 Size:    64 [unused]
//   float4 _ViewportSize;              // Offset:  832 Size:    16 [unused]
//   float2 _MotionVectorOffsets;       // Offset:  848 Size:     8 [unused]
//   float3 _CameraRight;               // Offset:  864 Size:    12 [unused]
//   float3 _CameraUp;                  // Offset:  880 Size:    12 [unused]
//   float3 _EnvironmentMapColorOffset; // Offset:  896 Size:    12 [unused]
//   float3 _EnvironmentMapColorScale;  // Offset:  912 Size:    12 [unused]
//
// }
//
// cbuffer CDepthReconstructionProvider
// {
//
//   float4x4 _InvViewRotProjectionMatrix;// Offset:    0 Size:    64
//   float4x4 _ReconsInvViewRotProjectionMatrix;// Offset:   64 Size:    64 [unused]
//   float3 _ReconsCamPosition;         // Offset:  128 Size:    12 [unused]
//   float _ReconsDepthMul;             // Offset:  140 Size:     4 [unused]
//   float _ReconsDepthOffset;          // Offset:  144 Size:     4 [unused]
//   float _ReconsViewFar;              // Offset:  148 Size:     4 [unused]
//   float _ReconsViewNear;             // Offset:  152 Size:     4 [unused]
//   float _ReconsViewOORange;          // Offset:  156 Size:     4 [unused]
//   float _ReconsViewRange;            // Offset:  160 Size:     4 [unused]
//
// }
//
// cbuffer CCloudShadowParameterProvider
// {
//
//   float4 _CloudSettings;             // Offset:    0 Size:    16
//   float4 _SunColor;                  // Offset:   16 Size:    16 [unused]
//   float3 _PlayerPosition;            // Offset:   32 Size:    12
//   float3 _SunDirection;              // Offset:   48 Size:    12
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// SkyDomeColorWrap_s                sampler      NA          NA    0        1
// DepthVPSampler_TextureObject      texture  float4       2dMS2    0        1
// ShadowMaskPCSSSampler_TextureObject    texture  float4          2d    1        1
// CloudShadowTexture                texture  float4          2d    2        1
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// CDepthReconstructionProvider      cbuffer      NA          NA    1        1
// CCloudShadowParameterProvider     cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// SV_IsFrontFace           0   x           2    FFACE    uint       
// SV_SampleIndex           0    y          2   SAMPLE    uint    y  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
// Pixel Shader runs at sample frequency
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[15], immediateIndexed
dcl_constantbuffer cb1[4], immediateIndexed
dcl_constantbuffer cb2[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2dms(2) (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xy
dcl_input_ps_sgv v2.y, sampleIndex
dcl_output o0.xyzw
dcl_temps 3
resinfo_indexable(texture2dms)(float,float,float,float) r0.xy, l(0), t0.xyzw
mul r0.xy, r0.xyxx, v1.xyxx
round_z r0.xy, r0.xyxx
ftoi r0.xy, r0.xyxx
mov r0.zw, l(0,0,0,0)
ldms_indexable(texture2dms)(float,float,float,float) r0.x, r0.xyzw, t0.xyzw, v2.y
mad r0.x, cb0[14].y, r0.x, cb0[14].x
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
mul r0.x, r0.x, cb0[4].z
mul r0.y, cb0[4].y, cb0[4].x
div r0.x, r0.y, r0.x
add r0.x, -r0.x, cb0[4].y
mad r0.z, -r0.x, cb0[4].w, l(1.000000)
mad r0.xy, v1.xyxx, l(2.000000, -2.000000, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, cb1[0].xyzw
dp4 r1.y, r0.xyzw, cb1[1].xyzw
dp4 r1.z, r0.xyzw, cb1[2].xyzw
dp4 r0.x, r0.xyzw, cb1[3].xyzw
div r0.xyz, r1.xyzx, r0.xxxx
add r0.xyz, r0.xyzx, cb0[8].xyzx
add r0.xyz, r0.xyzx, -cb2[2].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
mad r1.x, -cb2[0].z, cb2[0].z, r0.w
sqrt r0.w, r0.w
mul r1.x, r1.x, l(4.000000)
dp3 r1.y, r0.xyzx, -cb2[3].xyzx
add r1.z, r1.y, r1.y
mad r1.x, r1.z, r1.z, -r1.x
sqrt r1.x, r1.x
mad r2.y, r1.y, l(-2.000000), -r1.x
mad r2.x, r1.y, l(-2.000000), r1.x
mul r1.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
max r1.x, r1.x, r1.y
mad r0.xyz, -cb2[3].xyzx, r1.xxxx, r0.xyzx
div r0.y, r0.y, r0.x
max r1.x, |r0.y|, l(1.000000)
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
min r1.y, |r0.y|, l(1.000000)
mul r1.x, r1.x, r1.y
mul r1.y, r1.x, r1.x
mad r1.z, r1.y, l(0.020835), l(-0.085133)
mad r1.z, r1.y, r1.z, l(0.180141)
mad r1.z, r1.y, r1.z, l(-0.330299)
mad r1.y, r1.y, r1.z, l(0.999866)
mul r1.z, r1.y, r1.x
mad r1.z, r1.z, l(-2.000000), l(1.570796)
lt r1.w, l(1.000000), |r0.y|
min r0.y, r0.y, l(1.000000)
lt r0.y, r0.y, -r0.y
and r1.z, r1.z, r1.w
mad r1.x, r1.x, r1.y, r1.z
movc r0.y, r0.y, -r1.x, r1.x
add r1.xy, -r0.yyyy, l(-1.570796, -4.712389, 0.000000, 0.000000)
lt r0.x, r0.x, l(0.000000)
mul r0.y, r0.z, l(0.915000)
div r0.y, r0.y, cb2[0].z
add r2.y, -r0.y, l(1.000000)
movc r0.x, r0.x, r1.y, r1.x
mul r0.y, l(0.300000), cb2[0].y
mad r2.x, r0.x, l(0.159155), r0.y
sample_l_indexable(texture2d)(float,float,float,float) r0.x, r2.xyxx, t2.wxyz, s0, l(0.000000)
add r0.y, r0.x, l(-0.100000)
mul_sat r0.y, r0.y, l(10.000000)
mad r0.z, r0.y, l(-2.000000), l(3.000000)
mul r0.y, r0.y, r0.y
mad r0.x, -r0.z, r0.y, r0.x
mul r0.y, r0.y, r0.z
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), cb2[0].z
mul_sat r0.z, r0.z, r0.w
mad r0.w, r0.z, l(-2.000000), l(3.000000)
mul r0.z, r0.z, r0.z
mul r0.z, r0.z, r0.w
mad r0.x, r0.z, r0.x, r0.y
mad r0.y, r0.z, l(-0.500000), l(1.000000)
mul r0.x, r0.x, r0.x
add r0.z, cb2[0].x, cb2[0].x
mul r0.x, r0.x, r0.z
mad_sat r0.x, -r0.x, r0.y, l(1.000000)
round_z r0.yz, v0.xxyx
ftoi r1.xy, r0.yzyy
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.y, r1.xyzw, t1.yxzw
mul o0.xyzw, r0.xxxx, r0.yyyy
ret 
// Approximately 85 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
