cbuffer cb3 : register(b3)
{
  float4 cb3[1];
}


Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  uint v0 : SV_VertexID0,
  out float4 o0 : SV_Position0,
  out float2 o1 : TEXCOORD0)
{
  const float4 icb[] = { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000},
                              { 1.000000, 1.000000, 0, 1.000000},
                              { 1.000000, -1.000000, 0, 1.000000},
                              { -1.000000, 1.000000, 0, 1.000000},
                              { -1.000000, -1.000000, 0, 1.000000} };
  float4 r0;
  uint4 bitmask, uiDest;
  float4 fDest;

  o0.zw = float2(0.000000e+000,1.000000e+000);
  r0.x = v0.x;
  o0.xy = icb[r0.x+4].xy;
  o1.x = dot(cb3[0].zzxx, icb[r0.x+0].xyzw);
  o1.y = dot(cb3[0].ywyw, icb[r0.x+0].xyzw);
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_VertexID              0   x           0   VERTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000},
                              { 1.000000, 1.000000, 0, 1.000000},
                              { 1.000000, -1.000000, 0, 1.000000},
                              { -1.000000, 1.000000, 0, 1.000000},
                              { -1.000000, -1.000000, 0, 1.000000} }
dcl_constantbuffer cb3[1], immediateIndexed
dcl_input_sgv v0.x, vertex_id
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_temps 1
mov o0.zw, l(0,0,0,1.000000)
mov r0.x, v0.x
mov o0.xy, icb[r0.x + 4].xyxx
dp4 o1.x, cb3[0].zzxx, icb[r0.x + 0].xyzw
dp4 o1.y, cb3[0].ywyw, icb[r0.x + 0].xyzw
ret 
// Approximately 0 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//
// Buffer Definitions: 
//
// cbuffer cb3
// {
//
//   float4 cb3;                        // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// cb3                               cbuffer      NA          NA    3        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_VertexID              0   x           0   VERTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000},
                              { 1.000000, 1.000000, 0, 1.000000},
                              { 1.000000, -1.000000, 0, 1.000000},
                              { -1.000000, 1.000000, 0, 1.000000},
                              { -1.000000, -1.000000, 0, 1.000000} }
dcl_constantbuffer cb3[1], immediateIndexed
dcl_input_sgv v0.x, vertex_id
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_temps 1
utof r0.x, v0.x
add r0.x, r0.x, l(4.000000)
ftou r0.x, r0.x
mov o0.xy, icb[r0.x + 0].xyxx
mov o0.zw, l(0,0,0,1.000000)
mov r0.x, v0.x
dp4 o1.x, cb3[0].zzxx, icb[r0.x + 0].xyzw
dp4 o1.y, cb3[0].ywyw, icb[r0.x + 0].xyzw
ret 
// Approximately 9 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
