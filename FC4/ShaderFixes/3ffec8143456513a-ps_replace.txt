// Water near white tiger in Shangria-La (No AA)

cbuffer CViewportShaderParameterProvider : register(b0)
{
  float4 _AmbientColorMultiplier : packoffset(c0);
  float4 _AmbientOcclusionRanges_SunOcclusionFactor : packoffset(c1);
  float4 _BloomAdaptationFactor : packoffset(c2);
  float4 _CameraDirection_FOVDeg : packoffset(c3);
  float4 _CameraDistances : packoffset(c4);
  float4 _CameraNearPlaneSize : packoffset(c5);
  float4 _CameraPositionFractions_ZOffsetWS : packoffset(c6);
  float4 _CameraPositionFractions_ZOffsetWS_Previous : packoffset(c7);
  float4 _CameraPosition_DistanceScale : packoffset(c8);
  float4 _CameraPosition_DistanceScale_Previous : packoffset(c9);
  float4x4 _CullingViewProjectionMatrix : packoffset(c10);
  float4 _DepthScale : packoffset(c14);
  float4 _DepthTextureRcpSize : packoffset(c15);
  float4 _DepthTextureScaleOffset : packoffset(c16);
  float4 _FogParams : packoffset(c17);
  float4 _FogSHB : packoffset(c18);
  float4 _FogSHG : packoffset(c19);
  float4 _FogSHR : packoffset(c20);
  float4 _HeightFogParams : packoffset(c21);
  float4x4 _InvProjectionMatrix : packoffset(c22);
  float4x4 _InvViewMatrix : packoffset(c26);
  float4x4 _ProjectionMatrix : packoffset(c30);
  float4 _TempSunDirection : packoffset(c34);
  float4x4 _ViewMatrix : packoffset(c35);
  float4 _ViewPoint_ShadowProjDepthMin : packoffset(c39);
  float4x4 _ViewProjectionMatrix : packoffset(c40);
  float4x4 _ViewRotProjectionMatrix : packoffset(c44);
  float4x4 _ViewRotProjectionMatrix_Previous : packoffset(c48);
  float4 _ViewportSize : packoffset(c52);
  float2 _MotionVectorOffsets : packoffset(c53);
  float3 _CameraRight : packoffset(c54);
  float3 _CameraUp : packoffset(c55);
  float3 _EnvironmentMapColorOffset : packoffset(c56);
  float3 _EnvironmentMapColorScale : packoffset(c57);
}

cbuffer CGlobalShaderParameterProvider : register(b1)
{
  float4 _BurnColor : packoffset(c0);
  float4 _BurnParams : packoffset(c1);
  float4 _BurnParams2 : packoffset(c2);
  float4 _BurnParams3 : packoffset(c3);
  float4 _CascadedShadowScaleOffsetTile0 : packoffset(c4);
  float4 _CascadedShadowScaleOffsetTile1 : packoffset(c5);
  float4 _GlobalScalars : packoffset(c6);
  float4 _SSS_MiscParams : packoffset(c7);
  float4 _WindSimParamsX : packoffset(c8);
  float4 _WindSimParamsY : packoffset(c9);
  float2 _RangeDepthCompression : packoffset(c10);
  float3 _SSS_Color : packoffset(c11);
  int _BRDFHighQuality : packoffset(c11.w);
}

cbuffer CWaterReflectionParameterProvider : register(b2)
{
  float4 _WaterReflectionColor : packoffset(c0);
  float4 _WaterReflectionPlane : packoffset(c1);
  float4 _WaterReflectionTexCoordRange : packoffset(c2);
  float4x4 _WaterReflectionTransform : packoffset(c3);
  float _WaterLevelAdjustment : packoffset(c7);
}

cbuffer CWaterParameterProvider : register(b3)
{
  float4 _BorderAlphaMask : packoffset(c0);
  float _ReflectionInvSquareFadeDistance : packoffset(c1);
  float _ReflectionSquareFadeDistance : packoffset(c1.y);
  float _SunLightScale : packoffset(c1.z);
  bool _DisableThirdNormalUVs : packoffset(c1.w);
}

cbuffer CWaterWaveParameterProvider : register(b4)
{
  float4 _WaterWave_CameraCenter_FrontVector : packoffset(c0);
  float4 _WaterWave_CameraRightVector_ : packoffset(c1);
  float4 _WaterWave_CameraTanFOVx_2_Near_Far : packoffset(c2);
  bool _WaterWave_Enabled : packoffset(c3);
}

cbuffer Water : register(b5)
{
  float _NormalOffsetScale : packoffset(c0);
  float2 _Tiling1 : packoffset(c0.y);
  float2 _Tiling2 : packoffset(c1);
  float2 _Dir1 : packoffset(c1.z);
  float2 _Dir2 : packoffset(c2);
  float2 _Tiling3 : packoffset(c2.z);
  float2 _Dir3 : packoffset(c3);
  float _NormalTexture3Blend : packoffset(c3.z);
  float _CausticsIntensity : packoffset(c3.w);
  float _CausticsScale : packoffset(c4);
  float _ReflectionNormalOffsetScale : packoffset(c4.y);
  float _ReflectionColorOffset : packoffset(c4.z);
  float _ReflectionColorScale : packoffset(c4.w);
  float _ReflectionAnisotropicDistanceScale : packoffset(c5);
  float _ReflectionAnisotropicDistanceOffset : packoffset(c5.y);
  float2 _DiffuseTiling : packoffset(c5.z);
  float _DiffuseSpeedFactor : packoffset(c6);
  float4 _WaterColor : packoffset(c7);
  float4 _UnderwaterColor : packoffset(c8);
  float4 _Specular : packoffset(c9);
  float2 _BaseTiling : packoffset(c10);
  float4 _RefractionWaveInfo : packoffset(c11);
  float _NormalModifier : packoffset(c12);
  float4 _Extinctions : packoffset(c13);
  float4 _MaterialPickingID : packoffset(c14);
}

cbuffer CNewLightingDataProvider : register(b6)
{
  float4 _CSMSlice0_0 : packoffset(c0);
  float4 _CSMSlice0_1 : packoffset(c1);
  float4 _CSMSlice0_2 : packoffset(c2);
  float4 _CSMSlice1_0 : packoffset(c3);
  float4 _CSMSlice1_1 : packoffset(c4);
  float4 _CSMSlice1_2 : packoffset(c5);
  float4 _CSMSlice2_0 : packoffset(c6);
  float4 _CSMSlice2_1 : packoffset(c7);
  float4 _CSMSlice2_2 : packoffset(c8);
  float4 _CSMSliceFade : packoffset(c9);
  float4 _LightUpWS_RcpSquaredLightRadius : packoffset(c10);
  float4 _PointAttenuation_SpotFactors : packoffset(c11);
  float4 _ShadowMapSize : packoffset(c12);
  float4x4 _ShadowProjectionMatrix : packoffset(c13);
  float4x4 _ShadowRotProjectionMatrix : packoffset(c17);
  float3 _LightColor : packoffset(c21);
  float3 _LightColorUpNormal : packoffset(c22);
  float3 _LightDirectionWS : packoffset(c23);
  float3 _LightPositionWS : packoffset(c24);
  float3 _LightRightWS : packoffset(c25);
}
SamplerState DepthVPSampler__SampObj___s : register(s0);
SamplerState EnvironmentMapTexture__SampObj___s : register(s1);
SamplerState WaterWaveTexture__SampObj___s : register(s2);
SamplerState NormalTexture__SampObj___s : register(s3);
SamplerState NormalTexture3__SampObj___s : register(s4);
SamplerState CausticsTexture__SampObj___s : register(s5);
SamplerState DiffuseTexture__SampObj___s : register(s6);
SamplerState ReflectionRealTexture__SampObj___s : register(s8);
SamplerComparisonState ShadowCmpSampler_s : register(s7);
Texture2D<float4> DepthVPSampler__TexObj__ : register(t0);
TextureCube<float4> EnvironmentMapTexture__TexObj__ : register(t1);
Texture2D<float4> WaterWaveTexture__TexObj__ : register(t2);
Texture2D<float4> NormalTexture__TexObj__ : register(t3);
Texture2D<float4> NormalTexture3__TexObj__ : register(t4);
Texture2D<float4> CausticsTexture__TexObj__ : register(t5);
Texture2D<float4> DiffuseTexture__TexObj__ : register(t6);
Texture2DArray<float4> ShadowCmpSampler_TextureObject : register(t7);
Texture2D<float4> ReflectionRealTexture__TexObj__ : register(t8);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  float4 v0 : SV_Position0,
  float4 v1 : TEXCOORD0,
  float4 v2 : TEXCOORD1,
  float3 v3 : TEXCOORD2,
  float3 v4 : TEXCOORD3,
  float3 v5 : TEXCOORD4,
  float3 v6 : TEXCOORD5,
  float3 v7 : TEXCOORD6,
  float3 v8 : TEXCOORD7,
  float4 v9 : TEXCOORD8,
  uint v10 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10,r11,r12,r13,r14,r15,r16,r17,r18,r19,r20,r21;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = dot(v3.xyz, v3.xyz);
  r0.x = sqrt(r0.x);
  r0.yzw = _CameraPosition_DistanceScale.xyz + -v4.xyz;
  r1.x = dot(r0.yzw, r0.yzw);
  r1.x = rsqrt(r1.x);
  r0.yzw = r1.xxx * r0.yzw;
  if (_WaterWave_Enabled != 0) {
    r1.xy = -_WaterWave_CameraCenter_FrontVector.xy + v4.xy;
    r1.z = dot(_WaterWave_CameraCenter_FrontVector.zw, r1.xy);
    r1.x = dot(_WaterWave_CameraRightVector_.xy, r1.xy);
    r1.y = _WaterWave_CameraTanFOVx_2_Near_Far.y * _WaterWave_CameraTanFOVx_2_Near_Far.z;
    r1.w = 1.000000e+000 / r1.z;
    r1.w = r1.y * r1.w + -_WaterWave_CameraTanFOVx_2_Near_Far.z;
    r2.x = _WaterWave_CameraTanFOVx_2_Near_Far.y + -_WaterWave_CameraTanFOVx_2_Near_Far.z;
    r3.y = r1.w / r2.x;
    r1.z = _WaterWave_CameraTanFOVx_2_Near_Far.x * r1.z;
    r1.x = r1.x / r1.z;
    r3.x = r1.x * 5.000000000e-001 + 5.000000000e-001;
    r1.x = WaterWaveTexture__TexObj__.Sample(WaterWaveTexture__SampObj___s, r3.xy).x;
    r1.x = 2.000000030e-001 * r1.x;
    r1.z = -_CameraPosition_DistanceScale.z + v4.z;
    r1.x = r1.x / r1.z;
    r1.x = r1.x * r0.x;
    r1.x = max(r1.x, -2.000000000e+000);
    r1.x = min(r1.x, 2.000000000e+000);
    r3.xyz = r0.yzw * -r1.xxx + v4.xyz;
    r1.x = r1.x + r0.x;
    r1.x = r1.x / r0.x;
    r1.x = v3.z * r1.x;
    r4.x = 9.999999776e-003 * r0.x;
    r1.zw = -_WaterWave_CameraCenter_FrontVector.xy + r3.xy;
    r1.z = dot(_WaterWave_CameraCenter_FrontVector.zw, r1.zw);
    r1.z = 1.000000e+000 / r1.z;
    r1.z = r1.y * r1.z + -_WaterWave_CameraTanFOVx_2_Near_Far.z;
    r1.z = r1.z / r2.x;
    r5.x = -r4.x;
    r5.y = 0.000000000e+000;
    r2.yz = r5.xy + r3.xy;
    r2.yz = -_WaterWave_CameraCenter_FrontVector.xy + r2.yz;
    r1.w = dot(_WaterWave_CameraCenter_FrontVector.zw, r2.yz);
    r2.y = dot(_WaterWave_CameraRightVector_.xy, r2.yz);
    r2.z = 1.000000e+000 / r1.w;
    r2.z = r1.y * r2.z + -_WaterWave_CameraTanFOVx_2_Near_Far.z;
    r5.y = r2.z / r2.x;
    r1.w = _WaterWave_CameraTanFOVx_2_Near_Far.x * r1.w;
    r1.w = r2.y / r1.w;
    r5.x = r1.w * 5.000000000e-001 + 5.000000000e-001;
    r4.y = 0.000000000e+000;
    r6.xyzw = r4.xyyx + r3.xyxy;
    r6.xyzw = -_WaterWave_CameraCenter_FrontVector.xyxy + r6.xyzw;
    r1.w = dot(_WaterWave_CameraCenter_FrontVector.zw, r6.xy);
    r2.y = dot(_WaterWave_CameraRightVector_.xy, r6.xy);
    r2.z = 1.000000e+000 / r1.w;
    r2.z = r1.y * r2.z + -_WaterWave_CameraTanFOVx_2_Near_Far.z;
    r6.y = r2.z / r2.x;
    r1.w = _WaterWave_CameraTanFOVx_2_Near_Far.x * r1.w;
    r1.w = r2.y / r1.w;
    r6.x = r1.w * 5.000000000e-001 + 5.000000000e-001;
    r4.z = -r4.x;
    r2.yz = r4.yz + r3.xy;
    r2.yz = -_WaterWave_CameraCenter_FrontVector.xy + r2.yz;
    r1.w = dot(_WaterWave_CameraCenter_FrontVector.zw, r2.yz);
    r2.y = dot(_WaterWave_CameraRightVector_.xy, r2.yz);
    r2.z = 1.000000e+000 / r1.w;
    r2.z = r1.y * r2.z + -_WaterWave_CameraTanFOVx_2_Near_Far.z;
    r7.y = r2.z / r2.x;
    r1.w = _WaterWave_CameraTanFOVx_2_Near_Far.x * r1.w;
    r1.w = r2.y / r1.w;
    r7.x = r1.w * 5.000000000e-001 + 5.000000000e-001;
    r1.w = dot(_WaterWave_CameraCenter_FrontVector.zw, r6.zw);
    r2.y = dot(_WaterWave_CameraRightVector_.xy, r6.zw);
    r2.z = 1.000000e+000 / r1.w;
    r1.y = r1.y * r2.z + -_WaterWave_CameraTanFOVx_2_Near_Far.z;
    r8.y = r1.y / r2.x;
    r1.y = _WaterWave_CameraTanFOVx_2_Near_Far.x * r1.w;
    r1.y = r2.y / r1.y;
    r8.x = r1.y * 5.000000000e-001 + 5.000000000e-001;
    r1.y = WaterWaveTexture__TexObj__.Sample(WaterWaveTexture__SampObj___s, r5.xy).x;
    r1.w = WaterWaveTexture__TexObj__.Sample(WaterWaveTexture__SampObj___s, r6.xy).x;
    r2.x = WaterWaveTexture__TexObj__.Sample(WaterWaveTexture__SampObj___s, r7.xy).x;
    r2.y = WaterWaveTexture__TexObj__.Sample(WaterWaveTexture__SampObj___s, r8.xy).x;
    r5.x = r1.w + -r1.y;
    r5.y = r2.y + -r2.x;
    r1.yw = r5.xy / r4.xx;
    r2.xy = r3.xy;
  } else {
    r2.xy = v4.xy;
    r1.x = v3.z;
    r3.z = v4.z;
    r1.yzw = float3(0.000000e+000,0.000000e+000,0.000000e+000);
  }
  r4.xy = NormalTexture__TexObj__.Sample(NormalTexture__SampObj___s, v1.yx).yw;
  r4.xy = r4.xy * float2(2.007874e+000,2.007874e+000) + float2(-1.000000e+000,-1.000000e+000);
  r4.xz = _NormalModifier * r4.xy;
  r2.w = saturate(dot(r4.xz, r4.xz));
  r2.w = -r2.w * 9.990000129e-001 + 1.000000000e+000;
  r4.y = sqrt(r2.w);
  r5.xy = NormalTexture__TexObj__.Sample(NormalTexture__SampObj___s, v1.wz).yw;
  r5.xy = r5.xy * float2(2.007874e+000,2.007874e+000) + float2(-1.000000e+000,-1.000000e+000);
  r5.xz = _NormalModifier * r5.xy;
  r2.w = saturate(dot(r5.xz, r5.xz));
  r2.w = -r2.w * 9.990000129e-001 + 1.000000000e+000;
  r5.y = sqrt(r2.w);
  r4.xyz = r5.xyz + r4.xyz;
  r2.w = dot(r4.xyz, r4.xyz);
  r2.w = rsqrt(r2.w);
  r5.xyz = r4.xyz * r2.www;
  r6.xy = NormalTexture3__TexObj__.Sample(NormalTexture3__SampObj___s, v9.yx).yw;
  r6.xy = r6.xy * float2(2.007874e+000,2.007874e+000) + float2(-1.000000e+000,-1.000000e+000);
  r6.xz = _NormalModifier * r6.xy;
  r2.w = saturate(dot(r6.xz, r6.xz));
  r2.w = -r2.w * 9.990000129e-001 + 1.000000000e+000;
  r6.y = sqrt(r2.w);
  r6.xyz = r6.xyz + -r4.xyz;
  r4.xyz = _NormalTexture3Blend * r6.xyz + r4.xyz;
  r2.w = dot(r4.xyz, r4.xyz);
  r2.w = rsqrt(r2.w);
  r4.xyz = r4.xyz * r2.www;
  r4.xyz = _DisableThirdNormalUVs ? r5.xyz : r4.xyz;
  r1.z = -8.999999762e-001 + r1.z;
  r1.z = saturate(1.000000000e+001 * r1.z);
  r1.z = r1.z * -5.000000075e-002 + 5.000000075e-002;
  r5.xz = r1.yw * r1.zz;
  r5.y = 0.000000000e+000;
  r1.yzw = r5.xyz + r4.xyz;
  r2.w = dot(r1.yzw, r1.yzw);
  r2.w = rsqrt(r2.w);
  r1.yzw = r2.www * r1.yzw;
  r1.yzw = _WaterWave_Enabled ? r1.yzw : r4.xyz;
  r4.xy = r1.yw * _NormalOffsetScale + v9.zw;
  r4.xyzw = DiffuseTexture__TexObj__.Sample(DiffuseTexture__SampObj___s, r4.xy).xyzw;
  r3.xy = r1.yw * _NormalOffsetScale + r2.xy;
  r2.w = dot(r1.ywz, r0.yzw);
  r5.x = saturate(r2.w);
  r5.y = 1.000000000e+000 + -r5.x;
  r5.z = r5.y * r5.y;
  r5.z = r5.z * r5.z;
  r5.y = r5.z * r5.y;
  r5.y = 9.800000191e-001 * r5.y;
  r5.z = _Specular.x * _Specular.x;
  r5.z = r5.z * 8.299999833e-001 + 1.700000018e-001;
  r5.y = r5.y * r5.z + 1.999999955e-002;
  r5.w = -8.656169891e+000 * r5.x;
  r5.w = exp2(r5.w);
  r5.z = r5.z * r5.w;
  r5.z = r5.z * 9.800000191e-001 + 1.999999955e-002;
  r5.y = _BRDFHighQuality ? r5.y : r5.z;
  r6.xyz = _LightColor.xyz * _SunLightScale;
  r5.z = dot(v8.xyz, v8.xyz);
  r5.z = rsqrt(r5.z);
  r7.xyz = v8.xyz * r5.zzz;
  r8.xyz = v8.xyz * r5.zzz + -v7.xyz;
  r5.z = dot(r8.xyz, r8.xyz);
  r5.z = rsqrt(r5.z);
  r8.xyz = r8.xyz * r5.zzz;
  r5.z = dot(r8.xyz, r7.xyz);
  r5.w = 1.000000000e+000 + -r5.z;
  r6.w = r5.w * r5.w;
  r6.w = r6.w * r6.w;
  r5.w = r6.w * r5.w;
  r5.w = r5.w * 9.800000191e-001 + 1.999999955e-002;
  r5.z = -8.656169891e+000 * r5.z;
  r5.z = exp2(r5.z);
  r5.z = r5.z * 9.800000191e-001 + 1.999999955e-002;
  r5.z = _BRDFHighQuality ? r5.w : r5.z;
  r3.w = 1.000000000e+000;
  r7.x = dot(r3.xyzw, _CSMSlice2_0.xyzw);
  r7.y = dot(r3.xyzw, _CSMSlice2_1.xyzw);
  r7.z = dot(r3.xyzw, _CSMSlice2_2.xyzw);
  r9.x = dot(r3.xyzw, _CSMSlice1_0.xyzw);
  r9.y = dot(r3.xyzw, _CSMSlice1_1.xyzw);
  r9.z = dot(r3.xyzw, _CSMSlice1_2.xyzw);
  r10.xyz = r9.xyz >= float3(0.000000e+000,0.000000e+000,0.000000e+000);
  r10.xyz = r10.xyz ? 1.000000 : 0;
  r11.xyz = float3(1.000000e+000,1.000000e+000,1.000000e+000) >= r9.xyz;
  r11.xyz = r11.xyz ? 1.000000 : 0;
  r10.xyz = r11.xyz * r10.xyz;
  r5.w = dot(r10.xyz, float3(1.000000e+000,1.000000e+000,1.000000e+000));
  r5.w = r5.w >= 3.000000000e+000;
  r9.w = 1.000000000e+000;
  r7.w = 2.000000000e+000;
  r10.xyzw = r5.wwww ? r9.xyzw : r7.xyzw;
  r11.x = dot(r3.xyzw, _CSMSlice0_0.xyzw);
  r11.y = dot(r3.xyzw, _CSMSlice0_1.xyzw);
  r11.z = dot(r3.xyzw, _CSMSlice0_2.xyzw);
  r3.xyw = r11.xyz >= float3(0.000000e+000,0.000000e+000,0.000000e+000);
  r3.xyw = r3.xyw ? 1.000000 : 0;
  r12.xyz = float3(1.000000e+000,1.000000e+000,1.000000e+000) >= r11.xyz;
  r12.xyz = r12.xyz ? 1.000000 : 0;
  r3.xyw = r12.xyz * r3.xyw;
  r3.x = dot(r3.xyw, float3(1.000000e+000,1.000000e+000,1.000000e+000));
  r3.x = r3.x >= 3.000000000e+000;
  r11.w = 0.000000000e+000;
  r10.xyzw = r3.xxxx ? r11.xywz : r10.xywz;
  r3.x = r10.z == 2.000000;
  if (r3.x != 0) {
    r3.xyw = r7.xyz * float3(2.000000e+000,2.000000e+000,1.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-0.000000e+000);
    r3.xyw = float3(-8.000000e-001,-8.000000e-001,-8.000000e-001) + abs(r3.xyw);
    r3.xyw = saturate(float3(5.000000e+000,5.000000e+000,5.000000e+000) * r3.xyw);
    r3.xyw = float3(1.000000e+000,1.000000e+000,1.000000e+000) + -r3.xyw;
    r3.x = min(r3.y, r3.x);
    r3.x = min(r3.w, r3.x);
    r3.yw = r10.xy * _ShadowMapSize.xy + float2(5.000000e-001,5.000000e-001);
    r7.xy = floor(r3.yw);
    r3.yw = -r7.xy + r3.yw;
    r7.xy = float2(-5.000000e-001,-5.000000e-001) + r7.xy;
    r7.zw = -r3.wy * float2(2.000000e+000,2.000000e+000) + float2(3.000000e+000,3.000000e+000);
    r12.xy = r3.yw * float2(2.000000e+000,2.000000e+000) + float2(1.000000e+000,1.000000e+000);
    r12.zw = float2(2.000000e+000,2.000000e+000) + -r3.yw;
    r12.zw = r12.zw / r7.wz;
    r3.yw = r3.yw / r12.xy;
    r13.zw = float2(-1.000000e+000,-1.000000e+000) + r12.zw;
    r13.xy = float2(1.000000e+000,1.000000e+000) + r3.yw;
    r3.y = r7.w * r7.z;
    r14.xyzw = _ShadowMapSize.zwzw * r13.zwxw;
    r15.xy = r7.xy * _ShadowMapSize.zw + r14.xy;
    r15.z = 2.000000000e+000;
    r3.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r15.xyz, r10.w, int2(0, 0)).x;
    r7.zw = r12.xy * r7.zw;
    r14.xy = r7.xy * _ShadowMapSize.zw + r14.zw;
    r14.z = 2.000000000e+000;
    r5.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r14.xyz, r10.w, int2(0, 0)).x;
    r5.w = r7.z * r5.w;
    r3.y = r3.y * r3.w + r5.w;
    r13.xyzw = _ShadowMapSize.zwzw * r13.zyxy;
    r14.xy = r7.xy * _ShadowMapSize.zw + r13.xy;
    r14.z = 2.000000000e+000;
    r3.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r14.xyz, r10.w, int2(0, 0)).x;
    r3.y = r7.w * r3.w + r3.y;
    r3.w = r12.x * r12.y;
    r7.xy = r7.xy * _ShadowMapSize.zw + r13.zw;
    r7.z = 2.000000000e+000;
    r5.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r7.xyz, r10.w, int2(0, 0)).x;
    r3.y = r3.w * r5.w + r3.y;
    r3.y = r3.y * 6.250000000e-002 + -1.000000000e+000;
    r3.x = r3.x * r3.y + 1.000000000e+000;
  } else {
    r3.y = r10.z == 1.000000;
    if (r3.y != 0) {
      r3.yw = r10.xy * _ShadowMapSize.xy + float2(5.000000e-001,5.000000e-001);
      r7.xy = floor(r3.yw);
      r3.yw = -r7.xy + r3.yw;
      r7.xy = float2(-5.000000e-001,-5.000000e-001) + r7.xy;
      r7.zw = _ShadowMapSize.zw * r7.xy;
      r12.xy = -r3.wy * float2(3.000000e+000,3.000000e+000) + float2(4.000000e+000,4.000000e+000);
      r12.zw = r3.yw * float2(3.000000e+000,3.000000e+000) + float2(1.000000e+000,1.000000e+000);
      r13.xy = -r3.yw * float2(2.000000e+000,2.000000e+000) + float2(3.000000e+000,3.000000e+000);
      r13.xy = r13.xy / r12.yx;
      r13.zw = float2(3.000000e+000,3.000000e+000) + r3.yw;
      r3.yw = r3.yw / r12.zw;
      r14.xw = float2(-2.000000e+000,-2.000000e+000) + r13.xy;
      r14.yz = float2(1.428571e-001,1.428571e-001) * r13.wz;
      r13.xy = float2(2.000000e+000,2.000000e+000) + r3.yw;
      r3.y = r12.y * r12.x;
      r15.xyzw = _ShadowMapSize.zwzw * r14.xwzw;
      r16.xy = r7.xy * _ShadowMapSize.zw + r15.xy;
      r16.z = 1.000000000e+000;
      r3.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r16.xyz, r10.w, int2(0, 0)).x;
      r15.xy = float2(7.000000e+000,7.000000e+000) * r12.xy;
      r16.xy = r7.xy * _ShadowMapSize.zw + r15.zw;
      r16.z = 1.000000000e+000;
      r5.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r16.xyz, r10.w, int2(0, 0)).x;
      r5.w = r15.x * r5.w;
      r3.y = r3.y * r3.w + r5.w;
      r12.xy = r12.zw * r12.xy;
      r13.zw = r14.wy;
      r16.xyzw = _ShadowMapSize.zwzw * r13.xzxw;
      r17.xy = r7.xy * _ShadowMapSize.zw + r16.xy;
      r17.z = 1.000000000e+000;
      r3.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r17.xyz, r10.w, int2(0, 0)).x;
      r3.y = r12.x * r3.w + r3.y;
      r17.xyzw = _ShadowMapSize.zwzw * r14.xyzy;
      r18.xy = r7.xy * _ShadowMapSize.zw + r17.xy;
      r18.z = 1.000000000e+000;
      r3.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r18.xyz, r10.w, int2(0, 0)).x;
      r3.y = r15.y * r3.w + r3.y;
      r15.xy = r7.xy * _ShadowMapSize.zw + r17.zw;
      r15.z = 1.000000000e+000;
      r3.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r15.xyz, r10.w, int2(0, 0)).x;
      r3.y = r3.w * 4.900000000e+001 + r3.y;
      r13.zw = float2(7.000000e+000,7.000000e+000) * r12.zw;
      r15.xy = r7.xy * _ShadowMapSize.zw + r16.zw;
      r15.z = 1.000000000e+000;
      r3.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r15.xyz, r10.w, int2(0, 0)).x;
      r3.y = r13.z * r3.w + r3.y;
      r14.y = r13.y;
      r14.xyzw = _ShadowMapSize.zwzw * r14.xyzy;
      r15.xy = r7.xy * _ShadowMapSize.zw + r14.xy;
      r15.z = 1.000000000e+000;
      r3.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r15.xyz, r10.w, int2(0, 0)).x;
      r3.y = r12.y * r3.w + r3.y;
      r14.xy = r7.xy * _ShadowMapSize.zw + r14.zw;
      r14.z = 1.000000000e+000;
      r3.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r14.xyz, r10.w, int2(0, 0)).x;
      r3.y = r13.w * r3.w + r3.y;
      r3.w = r12.z * r12.w;
      r7.xy = r13.xy * _ShadowMapSize.zw + r7.zw;
      r7.z = 1.000000000e+000;
      r5.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r7.xyz, r10.w, int2(0, 0)).x;
      r3.y = r3.w * r5.w + r3.y;
      r3.x = 6.944444496e-003 * r3.y;
    } else {
      r3.yw = r10.xy * _ShadowMapSize.xy + float2(5.000000e-001,5.000000e-001);
      r7.xy = floor(r3.yw);
      r3.yw = -r7.xy + r3.yw;
      r7.xy = float2(-5.000000e-001,-5.000000e-001) + r7.xy;
      r7.zw = _ShadowMapSize.zw * r7.xy;
      r12.xyzw = r3.yyyy * float4(1.100000e+001,1.100000e+001,5.000000e+000,5.000000e+000) + float4(-2.800000e+001,1.700000e+001,-6.000000e+000,1.000000e+000);
      r13.xyz = r3.yyy * float3(4.000000e+000,4.000000e+000,7.000000e+000) + float3(-5.000000e+000,-1.600000e+001,5.000000e+000);
      r13.xyz = r13.xyz / r12.zxy;
      r13.xyz = float3(-1.000000e+000,-3.000000e+000,1.000000e+000) + r13.yxz;
      r3.y = r3.y / r12.w;
      r14.x = 3.000000000e+000 + r3.y;
      r15.xyzw = r3.wwww * float4(1.100000e+001,1.100000e+001,5.000000e+000,5.000000e+000) + float4(-2.800000e+001,1.700000e+001,-6.000000e+000,1.000000e+000);
      r16.xyz = r3.www * float3(4.000000e+000,4.000000e+000,7.000000e+000) + float3(-5.000000e+000,-1.600000e+001,5.000000e+000);
      r16.xyz = r16.xyz / r15.zxy;
      r16.xyz = float3(-3.000000e+000,-1.000000e+000,1.000000e+000) + r16.xyz;
      r3.y = r3.w / r15.w;
      r17.y = 3.000000000e+000 + r3.y;
      r18.xyzw = r15.zzxx * r12.zxzx;
      r13.w = r16.x;
      r19.xyzw = _ShadowMapSize.zwzw * r13.ywxw;
      r10.xy = r7.xy * _ShadowMapSize.zw + r19.xy;
      r3.y = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r10.xyz, r10.w, int2(0, 0)).x;
      r10.xy = r7.xy * _ShadowMapSize.zw + r19.zw;
      r3.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r10.xyz, r10.w, int2(0, 0)).x;
      r3.w = r18.y * r3.w;
      r3.y = r18.x * r3.y + r3.w;
      r19.xyzw = r15.zzxx * -r12.ywyw;
      r10.xy = r13.zw * _ShadowMapSize.zw + r7.zw;
      r3.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r10.xyz, r10.w, int2(0, 0)).x;
      r3.y = r19.x * r3.w + r3.y;
      r14.y = r13.w;
      r10.xy = r14.xy * _ShadowMapSize.zw + r7.zw;
      r3.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r10.xyz, r10.w, int2(0, 0)).x;
      r3.y = r19.y * r3.w + r3.y;
      r16.w = r13.y;
      r20.xyzw = _ShadowMapSize.zwzw * r16.wywz;
      r10.xy = r7.xy * _ShadowMapSize.zw + r20.xy;
      r3.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r10.xyz, r10.w, int2(0, 0)).x;
      r3.y = r18.z * r3.w + r3.y;
      r13.yw = r16.yz;
      r21.xyzw = _ShadowMapSize.zwzw * r13.xyzy;
      r10.xy = r7.xy * _ShadowMapSize.zw + r21.xy;
      r3.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r10.xyz, r10.w, int2(0, 0)).x;
      r3.y = r18.w * r3.w + r3.y;
      r10.xy = r7.xy * _ShadowMapSize.zw + r21.zw;
      r3.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r10.xyz, r10.w, int2(0, 0)).x;
      r3.y = r19.z * r3.w + r3.y;
      r14.zw = r13.yw;
      r18.xyzw = _ShadowMapSize.zwzw * r14.xzxw;
      r10.xy = r7.xy * _ShadowMapSize.zw + r18.xy;
      r3.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r10.xyz, r10.w, int2(0, 0)).x;
      r3.y = r19.w * r3.w + r3.y;
      r19.xyzw = -r15.yyww * r12.zxzx;
      r10.xy = r7.xy * _ShadowMapSize.zw + r20.zw;
      r3.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r10.xyz, r10.w, int2(0, 0)).x;
      r3.y = r19.x * r3.w + r3.y;
      r20.xyzw = _ShadowMapSize.zwzw * r13.xwzw;
      r10.xy = r7.xy * _ShadowMapSize.zw + r20.xy;
      r3.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r10.xyz, r10.w, int2(0, 0)).x;
      r3.y = r19.y * r3.w + r3.y;
      r12.xyzw = r15.yyww * r12.ywyw;
      r10.xy = r7.xy * _ShadowMapSize.zw + r20.zw;
      r3.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r10.xyz, r10.w, int2(0, 0)).x;
      r3.y = r12.x * r3.w + r3.y;
      r10.xy = r7.xy * _ShadowMapSize.zw + r18.zw;
      r3.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r10.xyz, r10.w, int2(0, 0)).x;
      r3.y = r12.y * r3.w + r3.y;
      r17.x = r16.w;
      r10.xy = r17.xy * _ShadowMapSize.zw + r7.zw;
      r3.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r10.xyz, r10.w, int2(0, 0)).x;
      r3.y = r19.z * r3.w + r3.y;
      r17.zw = r13.xz;
      r13.xyzw = _ShadowMapSize.zwzw * r17.zywy;
      r10.xy = r7.xy * _ShadowMapSize.zw + r13.xy;
      r3.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r10.xyz, r10.w, int2(0, 0)).x;
      r3.y = r19.w * r3.w + r3.y;
      r10.xy = r7.xy * _ShadowMapSize.zw + r13.zw;
      r3.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r10.xyz, r10.w, int2(0, 0)).x;
      r3.y = r12.z * r3.w + r3.y;
      r17.x = r14.x;
      r10.xy = r17.xy * _ShadowMapSize.zw + r7.zw;
      r3.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r10.xyz, r10.w, int2(0, 0)).x;
      r3.y = r12.w * r3.w + r3.y;
      r3.x = 3.698224900e-004 * r3.y;
      r7.xyz = r11.xyz * float3(2.000000e+000,2.000000e+000,1.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-0.000000e+000);
      r7.xyz = float3(-8.000000e-001,-8.000000e-001,-8.000000e-001) + abs(r7.xyz);
      r7.xyz = saturate(float3(5.000000e+000,5.000000e+000,5.000000e+000) * r7.xyz);
      r7.xyz = float3(1.000000e+000,1.000000e+000,1.000000e+000) + -r7.xyz;
      r3.w = min(r7.y, r7.x);
      r3.w = min(r7.z, r3.w);
      r5.w = r3.w != 1.000000;
      if (r5.w != 0) {
        r7.xy = r9.xy * _ShadowMapSize.xy + float2(5.000000e-001,5.000000e-001);
        r7.zw = floor(r7.xy);
        r7.xy = r7.xy + -r7.zw;
        r7.zw = float2(-5.000000e-001,-5.000000e-001) + r7.zw;
        r9.xy = _ShadowMapSize.zw * r7.zw;
        r10.xy = -r7.yx * float2(3.000000e+000,3.000000e+000) + float2(4.000000e+000,4.000000e+000);
        r10.zw = r7.xy * float2(3.000000e+000,3.000000e+000) + float2(1.000000e+000,1.000000e+000);
        r11.xy = -r7.xy * float2(2.000000e+000,2.000000e+000) + float2(3.000000e+000,3.000000e+000);
        r11.xy = r11.xy / r10.yx;
        r11.zw = float2(3.000000e+000,3.000000e+000) + r7.xy;
        r7.xy = r7.xy / r10.zw;
        r12.xw = float2(-2.000000e+000,-2.000000e+000) + r11.xy;
        r12.yz = float2(1.428571e-001,1.428571e-001) * r11.wz;
        r11.xy = float2(2.000000e+000,2.000000e+000) + r7.xy;
        r5.w = r10.y * r10.x;
        r13.xyzw = _ShadowMapSize.zwzw * r12.xwzw;
        r14.xy = r7.zw * _ShadowMapSize.zw + r13.xy;
        r14.z = 1.000000000e+000;
        r6.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r14.xyz, r9.z, int2(0, 0)).x;
        r7.xy = float2(7.000000e+000,7.000000e+000) * r10.xy;
        r13.xy = r7.zw * _ShadowMapSize.zw + r13.zw;
        r13.z = 1.000000000e+000;
        r8.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r13.xyz, r9.z, int2(0, 0)).x;
        r7.x = r8.w * r7.x;
        r5.w = r5.w * r6.w + r7.x;
        r10.xy = r10.zw * r10.xy;
        r11.zw = r12.wy;
        r13.xyzw = _ShadowMapSize.zwzw * r11.xzxw;
        r14.xy = r7.zw * _ShadowMapSize.zw + r13.xy;
        r14.z = 1.000000000e+000;
        r6.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r14.xyz, r9.z, int2(0, 0)).x;
        r5.w = r10.x * r6.w + r5.w;
        r14.xyzw = _ShadowMapSize.zwzw * r12.xyzy;
        r15.xy = r7.zw * _ShadowMapSize.zw + r14.xy;
        r15.z = 1.000000000e+000;
        r6.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r15.xyz, r9.z, int2(0, 0)).x;
        r5.w = r7.y * r6.w + r5.w;
        r14.xy = r7.zw * _ShadowMapSize.zw + r14.zw;
        r14.z = 1.000000000e+000;
        r6.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r14.xyz, r9.z, int2(0, 0)).x;
        r5.w = r6.w * 4.900000000e+001 + r5.w;
        r7.xy = float2(7.000000e+000,7.000000e+000) * r10.zw;
        r13.xy = r7.zw * _ShadowMapSize.zw + r13.zw;
        r13.z = 1.000000000e+000;
        r6.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r13.xyz, r9.z, int2(0, 0)).x;
        r5.w = r7.x * r6.w + r5.w;
        r12.y = r11.y;
        r12.xyzw = _ShadowMapSize.zwzw * r12.xyzy;
        r13.xy = r7.zw * _ShadowMapSize.zw + r12.xy;
        r13.z = 1.000000000e+000;
        r6.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r13.xyz, r9.z, int2(0, 0)).x;
        r5.w = r10.y * r6.w + r5.w;
        r12.xy = r7.zw * _ShadowMapSize.zw + r12.zw;
        r12.z = 1.000000000e+000;
        r6.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r12.xyz, r9.z, int2(0, 0)).x;
        r5.w = r7.y * r6.w + r5.w;
        r6.w = r10.z * r10.w;
        r7.xy = r11.xy * _ShadowMapSize.zw + r9.xy;
        r7.z = 1.000000000e+000;
        r7.x = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r7.xyz, r9.z, int2(0, 0)).x;
        r5.w = r6.w * r7.x + r5.w;
        r5.w = 6.944444496e-003 * r5.w;
        r3.y = r3.y * 3.698224900e-004 + -r5.w;
        r3.x = r3.w * r3.y + r5.w;
      }
    }
  }
  r3.y = 1.300000000e+001 * _Specular.x;
  r3.w = _Specular.x * -2.554450035e-001 + 1.401520014e+000;
  r3.w = r3.w * _Specular.x + -1.946949959e+000;
  r3.w = r3.w * _Specular.x + 8.165000081e-001;
  r3.y = exp2(r3.y);
  r3.y = _BRDFHighQuality ? r3.w : r3.y;
  r3.w = saturate(dot(-v7.xzy, r1.yzw));
  r5.w = r3.w * r3.w;
  r6.w = r3.y * r3.y;
  r7.x = -r3.y * r3.y + 1.000000000e+000;
  r5.w = r5.w * r7.x + r6.w;
  r5.w = sqrt(r5.w);
  r5.w = r5.w + r3.w;
  r5.w = 1.000000e+000 / r5.w;
  r7.y = r5.x * r5.x;
  r6.w = r7.y * r7.x + r6.w;
  r6.w = sqrt(r6.w);
  r5.x = r6.w + r5.x;
  r5.x = 1.000000e+000 / r5.x;
  r5.xw = _BRDFHighQuality ? r5.xw : float2(1.000000e+000,1.000000e+000);
  r5.x = r5.w * r5.x;
  r5.w = saturate(dot(r8.xzy, r1.yzw));
  r6.w = r3.y * r3.y + -1.000000000e+000;
  r7.x = r5.w * r5.w;
  r6.w = r7.x * r6.w + 1.000000000e+000;
  r6.w = r3.y / r6.w;
  r6.w = r6.w * r6.w;
  r7.xyz = r6.xyz * r6.www;
  r5.w = log2(r5.w);
  r5.w = r5.w * r3.y;
  r5.w = exp2(r5.w);
  r3.y = r3.y * 1.250000000e-001 + 2.500000000e-001;
  r3.y = r5.w * r3.y;
  r8.xyz = r6.xyz * r3.yyy;
  r7.xyz = _BRDFHighQuality ? r7.xyz : r8.xyz;
  r7.xyz = r7.xyz * r3.www;
  r7.xyz = r7.xyz * r5.xxx;
  r7.xyz = r7.xyz * r3.xxx;
  r6.xyz = r3.www * r6.xyz;
  r8.xy = _ViewportSize.zw * v0.xy;
  r3.yw = r8.xy * float2(2.000000e+000,2.000000e+000) + float2(-1.000000e+000,-1.000000e+000);
  r3.yw = -abs(r3.yw) * abs(r3.yw) + float2(1.000000e+000,1.000000e+000);
  r5.xw = _ReflectionNormalOffsetScale * r1.yw;
  r9.xy = r5.xw * r0.xx + v5.xy;
  r9.z = v5.z;
  r9.w = 1.000000000e+000;

float4 stereo = StereoParams.Load(0);
float4 tmp = mul(r9, _ViewProjectionMatrix);
float4 adj = float4(stereo.x * (tmp.w - stereo.y), 0, 0, 0);
// Negating Z axis to improve reflections while camera is rotated (e.g. in wingsuit)
r9 += mul(mul(adj, _InvProjectionMatrix), _InvViewMatrix) * float4(1,1,-1,1);

  r10.x = dot(r9.xyzw, _WaterReflectionTransform._m00_m10_m20_m30);
  r10.y = dot(r9.xyzw, _WaterReflectionTransform._m01_m11_m21_m31);
  r5.x = dot(r9.xyzw, _WaterReflectionTransform._m03_m13_m23_m33);
  r5.xw = r10.xy / r5.xx;
  r8.zw = -v0.xx * _ViewportSize.zz + float2(1.000000e+000,1.000000e+000);
  r5.xw = r5.xw + -r8.zy;
  r3.yw = saturate(r5.xw * r3.yw + r8.wy);
  r8.xyz = -_CameraPosition_DistanceScale.xyz + r9.xyz;
  r5.x = dot(r8.xyz, r8.xyz);
  r5.x = sqrt(r5.x);
  r5.x = r5.x / abs(r8.z);
  r5.x = max(r5.x, 1.000000000e+000);
  r5.x = min(r5.x, 8.000000000e+000);
  r5.x = r0.x * r5.x + -_ReflectionAnisotropicDistanceOffset;
  r5.x = r5.x * _ReflectionAnisotropicDistanceScale + 1.000000000e+000;
  r5.x = log2(r5.x);
  r8.xyz = ReflectionRealTexture__TexObj__.SampleLevel(ReflectionRealTexture__SampObj___s, r3.yw, r5.x).xyz;
  r8.xyz = r8.xyz * r8.xyz;
  r8.xyz = min(r8.xyz, float3(1.600000e+001,1.600000e+001,1.600000e+001));
  r8.xyz = _WaterReflectionColor.www * r8.xyz;
  r2.z = r3.z;
  r3.yzw = _CameraPosition_DistanceScale.xyz + -r2.xyz;
  r3.y = dot(r3.yzw, r3.yzw);
  r3.y = saturate(r3.y * _ReflectionInvSquareFadeDistance + _ReflectionSquareFadeDistance);
  r2.w = r2.w + r2.w;
  r9.xyz = r1.yzw * -r2.www + r0.ywz;
  r9.xyz = -r9.xyz;
  r1.z = -_Specular.x * 6.000000000e+000 + 6.000000000e+000;
  r9.xyz = EnvironmentMapTexture__TexObj__.SampleLevel(EnvironmentMapTexture__SampObj___s, r9.xyz, r1.z).xyz;
  r9.xyz = r9.xyz * _ReflectionColorScale + _ReflectionColorOffset;
  r9.xyz = _AmbientColorMultiplier.xyz * r9.xyz + -r8.xyz;
  r3.yzw = r3.yyy * r9.xyz + r8.xyz;
  r8.xy = v6.xy / v6.zz;
  r8.z = DepthVPSampler__TexObj__.SampleLevel(DepthVPSampler__SampObj___s, r8.xy, 0.000000000e+000).x;
  r8.w = 1.000000000e+000;
  r1.z = dot(r8.xyzw, _InvProjectionMatrix._m02_m12_m22_m32);
  r2.w = dot(r8.xyzw, _InvProjectionMatrix._m03_m13_m23_m33);
  r1.z = -r1.z / r2.w;
  r1.z = -r1.z * r0.x;
  r1.x = r1.z / r1.x;
  r0.x = r1.x + -r0.x;
  r8.xyz = -r0.yzw * r1.xxx + _CameraPosition_DistanceScale.xyz;
  r0.x = -_Extinctions.x * r0.x;
  r0.x = exp2(r0.x);
  r0.x = 1.000000000e+000 + -r0.x;
  r0.x = max(r0.x, 0.000000000e+000);
  r0.yzw = r6.xyz * r3.xxx + _AmbientColorMultiplier.xyz;
  r1.x = 1.000000000e+000 + -r5.y;
  r0.yzw = r1.xxx * r0.yzw;
  r5.xzw = r7.xyz * r5.zzz;
  r3.xyz = r3.yzw * r5.yyy + r5.xzw;
  r4.xyz = -_WaterColor.xyz + r4.xyz;
  r4.xyz = r4.www * r4.xyz + _WaterColor.xyz;
  r1.x = -r8.z + r2.z;
  r1.x = max(r1.x, 0.000000000e+000);
  r1.yz = r1.yw * r1.xx;
  r1.yz = r1.yz * float2(5.000000e-001,5.000000e-001) + r8.xy;
  r1.yz = _CausticsScale * r1.yz;
  r1.yzw = CausticsTexture__TexObj__.Sample(CausticsTexture__SampObj___s, r1.yz).xyz;
  r1.yzw = _LightColorUpNormal.xyz * r1.yzw;
  r8.w = 1.000000000e+000;
  r5.x = dot(r8.xyzw, _CSMSlice2_0.xyzw);
  r5.y = dot(r8.xyzw, _CSMSlice2_1.xyzw);
  r5.z = dot(r8.xyzw, _CSMSlice2_2.xyzw);
  r6.x = dot(r8.xyzw, _CSMSlice1_0.xyzw);
  r6.y = dot(r8.xyzw, _CSMSlice1_1.xyzw);
  r6.z = dot(r8.xyzw, _CSMSlice1_2.xyzw);
  r7.xyz = r6.xyz >= float3(0.000000e+000,0.000000e+000,0.000000e+000);
  r7.xyz = r7.xyz ? 1.000000 : 0;
  r9.xyz = float3(1.000000e+000,1.000000e+000,1.000000e+000) >= r6.xyz;
  r9.xyz = r9.xyz ? 1.000000 : 0;
  r7.xyz = r9.xyz * r7.xyz;
  r2.w = dot(r7.xyz, float3(1.000000e+000,1.000000e+000,1.000000e+000));
  r2.w = r2.w >= 3.000000000e+000;
  r6.w = 1.000000000e+000;
  r5.w = 2.000000000e+000;
  r7.xyzw = r2.wwww ? r6.xyzw : r5.xyzw;
  r9.x = dot(r8.xyzw, _CSMSlice0_0.xyzw);
  r9.y = dot(r8.xyzw, _CSMSlice0_1.xyzw);
  r9.z = dot(r8.xyzw, _CSMSlice0_2.xyzw);
  r8.xyz = r9.xyz >= float3(0.000000e+000,0.000000e+000,0.000000e+000);
  r8.xyz = r8.xyz ? 1.000000 : 0;
  r10.xyz = float3(1.000000e+000,1.000000e+000,1.000000e+000) >= r9.xyz;
  r10.xyz = r10.xyz ? 1.000000 : 0;
  r8.xyz = r10.xyz * r8.xyz;
  r2.w = dot(r8.xyz, float3(1.000000e+000,1.000000e+000,1.000000e+000));
  r2.w = r2.w >= 3.000000000e+000;
  r9.w = 0.000000000e+000;
  r7.xyzw = r2.wwww ? r9.xywz : r7.xywz;
  r2.w = r7.z == 2.000000;
  if (r2.w != 0) {
    r5.xyz = r5.xyz * float3(2.000000e+000,2.000000e+000,1.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-0.000000e+000);
    r5.xyz = float3(-8.000000e-001,-8.000000e-001,-8.000000e-001) + abs(r5.xyz);
    r5.xyz = saturate(float3(5.000000e+000,5.000000e+000,5.000000e+000) * r5.xyz);
    r5.xyz = float3(1.000000e+000,1.000000e+000,1.000000e+000) + -r5.xyz;
    r2.w = min(r5.y, r5.x);
    r2.w = min(r5.z, r2.w);
    r5.xy = r7.xy * _ShadowMapSize.xy + float2(5.000000e-001,5.000000e-001);
    r5.zw = floor(r5.xy);
    r5.xy = r5.xy + -r5.zw;
    r5.zw = float2(-5.000000e-001,-5.000000e-001) + r5.zw;
    r8.xy = -r5.yx * float2(2.000000e+000,2.000000e+000) + float2(3.000000e+000,3.000000e+000);
    r8.zw = r5.xy * float2(2.000000e+000,2.000000e+000) + float2(1.000000e+000,1.000000e+000);
    r10.xy = float2(2.000000e+000,2.000000e+000) + -r5.xy;
    r10.xy = r10.xy / r8.yx;
    r5.xy = r5.xy / r8.zw;
    r10.zw = float2(-1.000000e+000,-1.000000e+000) + r10.xy;
    r10.xy = float2(1.000000e+000,1.000000e+000) + r5.xy;
    r3.w = r8.y * r8.x;
    r11.xyzw = _ShadowMapSize.zwzw * r10.zwxw;
    r12.xy = r5.zw * _ShadowMapSize.zw + r11.xy;
    r12.z = 2.000000000e+000;
    r4.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r12.xyz, r7.w, int2(0, 0)).x;
    r5.xy = r8.zw * r8.xy;
    r11.xy = r5.zw * _ShadowMapSize.zw + r11.zw;
    r11.z = 2.000000000e+000;
    r6.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r11.xyz, r7.w, int2(0, 0)).x;
    r5.x = r6.w * r5.x;
    r3.w = r3.w * r4.w + r5.x;
    r10.xyzw = _ShadowMapSize.zwzw * r10.zyxy;
    r11.xy = r5.zw * _ShadowMapSize.zw + r10.xy;
    r11.z = 2.000000000e+000;
    r4.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r11.xyz, r7.w, int2(0, 0)).x;
    r3.w = r5.y * r4.w + r3.w;
    r4.w = r8.z * r8.w;
    r5.xy = r5.zw * _ShadowMapSize.zw + r10.zw;
    r5.z = 2.000000000e+000;
    r5.x = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r5.xyz, r7.w, int2(0, 0)).x;
    r3.w = r4.w * r5.x + r3.w;
    r3.w = r3.w * 6.250000000e-002 + -1.000000000e+000;
    r2.w = r2.w * r3.w + 1.000000000e+000;
  } else {
    r3.w = r7.z == 1.000000;
    if (r3.w != 0) {
      r5.xy = r7.xy * _ShadowMapSize.xy + float2(5.000000e-001,5.000000e-001);
      r5.zw = floor(r5.xy);
      r5.xy = r5.xy + -r5.zw;
      r5.zw = float2(-5.000000e-001,-5.000000e-001) + r5.zw;
      r8.xy = _ShadowMapSize.zw * r5.zw;
      r8.zw = -r5.yx * float2(3.000000e+000,3.000000e+000) + float2(4.000000e+000,4.000000e+000);
      r10.xy = r5.xy * float2(3.000000e+000,3.000000e+000) + float2(1.000000e+000,1.000000e+000);
      r10.zw = -r5.xy * float2(2.000000e+000,2.000000e+000) + float2(3.000000e+000,3.000000e+000);
      r10.zw = r10.zw / r8.wz;
      r11.xy = float2(3.000000e+000,3.000000e+000) + r5.xy;
      r5.xy = r5.xy / r10.xy;
      r12.xw = float2(-2.000000e+000,-2.000000e+000) + r10.zw;
      r12.yz = float2(1.428571e-001,1.428571e-001) * r11.yx;
      r11.xy = float2(2.000000e+000,2.000000e+000) + r5.xy;
      r3.w = r8.w * r8.z;
      r13.xyzw = _ShadowMapSize.zwzw * r12.xwzw;
      r14.xy = r5.zw * _ShadowMapSize.zw + r13.xy;
      r14.z = 1.000000000e+000;
      r4.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r14.xyz, r7.w, int2(0, 0)).x;
      r5.xy = float2(7.000000e+000,7.000000e+000) * r8.zw;
      r13.xy = r5.zw * _ShadowMapSize.zw + r13.zw;
      r13.z = 1.000000000e+000;
      r6.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r13.xyz, r7.w, int2(0, 0)).x;
      r5.x = r6.w * r5.x;
      r3.w = r3.w * r4.w + r5.x;
      r8.zw = r10.xy * r8.zw;
      r11.zw = r12.wy;
      r13.xyzw = _ShadowMapSize.zwzw * r11.xzxw;
      r14.xy = r5.zw * _ShadowMapSize.zw + r13.xy;
      r14.z = 1.000000000e+000;
      r4.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r14.xyz, r7.w, int2(0, 0)).x;
      r3.w = r8.z * r4.w + r3.w;
      r14.xyzw = _ShadowMapSize.zwzw * r12.xyzy;
      r15.xy = r5.zw * _ShadowMapSize.zw + r14.xy;
      r15.z = 1.000000000e+000;
      r4.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r15.xyz, r7.w, int2(0, 0)).x;
      r3.w = r5.y * r4.w + r3.w;
      r14.xy = r5.zw * _ShadowMapSize.zw + r14.zw;
      r14.z = 1.000000000e+000;
      r4.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r14.xyz, r7.w, int2(0, 0)).x;
      r3.w = r4.w * 4.900000000e+001 + r3.w;
      r5.xy = float2(7.000000e+000,7.000000e+000) * r10.xy;
      r13.xy = r5.zw * _ShadowMapSize.zw + r13.zw;
      r13.z = 1.000000000e+000;
      r4.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r13.xyz, r7.w, int2(0, 0)).x;
      r3.w = r5.x * r4.w + r3.w;
      r12.y = r11.y;
      r12.xyzw = _ShadowMapSize.zwzw * r12.xyzy;
      r13.xy = r5.zw * _ShadowMapSize.zw + r12.xy;
      r13.z = 1.000000000e+000;
      r4.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r13.xyz, r7.w, int2(0, 0)).x;
      r3.w = r8.w * r4.w + r3.w;
      r12.xy = r5.zw * _ShadowMapSize.zw + r12.zw;
      r12.z = 1.000000000e+000;
      r4.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r12.xyz, r7.w, int2(0, 0)).x;
      r3.w = r5.y * r4.w + r3.w;
      r4.w = r10.x * r10.y;
      r5.xy = r11.xy * _ShadowMapSize.zw + r8.xy;
      r5.z = 1.000000000e+000;
      r5.x = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r5.xyz, r7.w, int2(0, 0)).x;
      r3.w = r4.w * r5.x + r3.w;
      r2.w = 6.944444496e-003 * r3.w;
    } else {
      r5.xy = r7.xy * _ShadowMapSize.xy + float2(5.000000e-001,5.000000e-001);
      r5.zw = floor(r5.xy);
      r5.xy = r5.xy + -r5.zw;
      r5.zw = float2(-5.000000e-001,-5.000000e-001) + r5.zw;
      r8.xy = _ShadowMapSize.zw * r5.zw;
      r10.xyzw = r5.xxxx * float4(1.100000e+001,1.100000e+001,5.000000e+000,5.000000e+000) + float4(-2.800000e+001,1.700000e+001,-6.000000e+000,1.000000e+000);
      r11.xyz = r5.xxx * float3(4.000000e+000,4.000000e+000,7.000000e+000) + float3(-5.000000e+000,-1.600000e+001,5.000000e+000);
      r11.xyz = r11.xyz / r10.zxy;
      r11.xyz = float3(-1.000000e+000,-3.000000e+000,1.000000e+000) + r11.yxz;
      r3.w = r5.x / r10.w;
      r12.x = 3.000000000e+000 + r3.w;
      r13.xyzw = r5.yyyy * float4(1.100000e+001,1.100000e+001,5.000000e+000,5.000000e+000) + float4(-2.800000e+001,1.700000e+001,-6.000000e+000,1.000000e+000);
      r14.xyz = r5.yyy * float3(4.000000e+000,4.000000e+000,7.000000e+000) + float3(-5.000000e+000,-1.600000e+001,5.000000e+000);
      r14.xyz = r14.xyz / r13.zxy;
      r14.xyz = float3(-3.000000e+000,-1.000000e+000,1.000000e+000) + r14.xyz;
      r3.w = r5.y / r13.w;
      r15.y = 3.000000000e+000 + r3.w;
      r16.xyzw = r13.zzxx * r10.zxzx;
      r11.w = r14.x;
      r17.xyzw = _ShadowMapSize.zwzw * r11.ywxw;
      r7.xy = r5.zw * _ShadowMapSize.zw + r17.xy;
      r3.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r7.xyz, r7.w, int2(0, 0)).x;
      r7.xy = r5.zw * _ShadowMapSize.zw + r17.zw;
      r4.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r7.xyz, r7.w, int2(0, 0)).x;
      r4.w = r16.y * r4.w;
      r3.w = r16.x * r3.w + r4.w;
      r17.xyzw = r13.zzxx * -r10.ywyw;
      r7.xy = r11.zw * _ShadowMapSize.zw + r8.xy;
      r4.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r7.xyz, r7.w, int2(0, 0)).x;
      r3.w = r17.x * r4.w + r3.w;
      r12.y = r11.w;
      r7.xy = r12.xy * _ShadowMapSize.zw + r8.xy;
      r4.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r7.xyz, r7.w, int2(0, 0)).x;
      r3.w = r17.y * r4.w + r3.w;
      r14.w = r11.y;
      r18.xyzw = _ShadowMapSize.zwzw * r14.wywz;
      r7.xy = r5.zw * _ShadowMapSize.zw + r18.xy;
      r4.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r7.xyz, r7.w, int2(0, 0)).x;
      r3.w = r16.z * r4.w + r3.w;
      r11.yw = r14.yz;
      r19.xyzw = _ShadowMapSize.zwzw * r11.xyzy;
      r7.xy = r5.zw * _ShadowMapSize.zw + r19.xy;
      r4.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r7.xyz, r7.w, int2(0, 0)).x;
      r3.w = r16.w * r4.w + r3.w;
      r7.xy = r5.zw * _ShadowMapSize.zw + r19.zw;
      r4.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r7.xyz, r7.w, int2(0, 0)).x;
      r3.w = r17.z * r4.w + r3.w;
      r12.zw = r11.yw;
      r16.xyzw = _ShadowMapSize.zwzw * r12.xzxw;
      r7.xy = r5.zw * _ShadowMapSize.zw + r16.xy;
      r4.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r7.xyz, r7.w, int2(0, 0)).x;
      r3.w = r17.w * r4.w + r3.w;
      r17.xyzw = -r13.yyww * r10.zxzx;
      r7.xy = r5.zw * _ShadowMapSize.zw + r18.zw;
      r4.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r7.xyz, r7.w, int2(0, 0)).x;
      r3.w = r17.x * r4.w + r3.w;
      r18.xyzw = _ShadowMapSize.zwzw * r11.xwzw;
      r7.xy = r5.zw * _ShadowMapSize.zw + r18.xy;
      r4.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r7.xyz, r7.w, int2(0, 0)).x;
      r3.w = r17.y * r4.w + r3.w;
      r10.xyzw = r13.yyww * r10.ywyw;
      r7.xy = r5.zw * _ShadowMapSize.zw + r18.zw;
      r4.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r7.xyz, r7.w, int2(0, 0)).x;
      r3.w = r10.x * r4.w + r3.w;
      r7.xy = r5.zw * _ShadowMapSize.zw + r16.zw;
      r4.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r7.xyz, r7.w, int2(0, 0)).x;
      r3.w = r10.y * r4.w + r3.w;
      r15.x = r14.w;
      r7.xy = r15.xy * _ShadowMapSize.zw + r8.xy;
      r4.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r7.xyz, r7.w, int2(0, 0)).x;
      r3.w = r17.z * r4.w + r3.w;
      r15.zw = r11.xz;
      r11.xyzw = _ShadowMapSize.zwzw * r15.zywy;
      r7.xy = r5.zw * _ShadowMapSize.zw + r11.xy;
      r4.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r7.xyz, r7.w, int2(0, 0)).x;
      r3.w = r17.w * r4.w + r3.w;
      r7.xy = r5.zw * _ShadowMapSize.zw + r11.zw;
      r4.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r7.xyz, r7.w, int2(0, 0)).x;
      r3.w = r10.z * r4.w + r3.w;
      r15.x = r12.x;
      r7.xy = r15.xy * _ShadowMapSize.zw + r8.xy;
      r4.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r7.xyz, r7.w, int2(0, 0)).x;
      r3.w = r10.w * r4.w + r3.w;
      r2.w = 3.698224900e-004 * r3.w;
      r5.xyz = r9.xyz * float3(2.000000e+000,2.000000e+000,1.000000e+000) + float3(-1.000000e+000,-1.000000e+000,-0.000000e+000);
      r5.xyz = float3(-8.000000e-001,-8.000000e-001,-8.000000e-001) + abs(r5.xyz);
      r5.xyz = saturate(float3(5.000000e+000,5.000000e+000,5.000000e+000) * r5.xyz);
      r5.xyz = float3(1.000000e+000,1.000000e+000,1.000000e+000) + -r5.xyz;
      r4.w = min(r5.y, r5.x);
      r4.w = min(r5.z, r4.w);
      r5.x = r4.w != 1.000000;
      if (r5.x != 0) {
        r5.xy = r6.xy * _ShadowMapSize.xy + float2(5.000000e-001,5.000000e-001);
        r5.zw = floor(r5.xy);
        r5.xy = r5.xy + -r5.zw;
        r5.zw = float2(-5.000000e-001,-5.000000e-001) + r5.zw;
        r6.xy = _ShadowMapSize.zw * r5.zw;
        r7.xy = -r5.yx * float2(3.000000e+000,3.000000e+000) + float2(4.000000e+000,4.000000e+000);
        r7.zw = r5.xy * float2(3.000000e+000,3.000000e+000) + float2(1.000000e+000,1.000000e+000);
        r8.xy = -r5.xy * float2(2.000000e+000,2.000000e+000) + float2(3.000000e+000,3.000000e+000);
        r8.xy = r8.xy / r7.yx;
        r8.zw = float2(3.000000e+000,3.000000e+000) + r5.xy;
        r5.xy = r5.xy / r7.zw;
        r9.xw = float2(-2.000000e+000,-2.000000e+000) + r8.xy;
        r9.yz = float2(1.428571e-001,1.428571e-001) * r8.wz;
        r8.xy = float2(2.000000e+000,2.000000e+000) + r5.xy;
        r5.x = r7.y * r7.x;
        r10.xyzw = _ShadowMapSize.zwzw * r9.xwzw;
        r11.xy = r5.zw * _ShadowMapSize.zw + r10.xy;
        r11.z = 1.000000000e+000;
        r5.y = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r11.xyz, r6.z, int2(0, 0)).x;
        r10.xy = float2(7.000000e+000,7.000000e+000) * r7.xy;
        r11.xy = r5.zw * _ShadowMapSize.zw + r10.zw;
        r11.z = 1.000000000e+000;
        r6.w = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r11.xyz, r6.z, int2(0, 0)).x;
        r6.w = r10.x * r6.w;
        r5.x = r5.x * r5.y + r6.w;
        r7.xy = r7.zw * r7.xy;
        r8.zw = r9.wy;
        r11.xyzw = _ShadowMapSize.zwzw * r8.xzxw;
        r12.xy = r5.zw * _ShadowMapSize.zw + r11.xy;
        r12.z = 1.000000000e+000;
        r5.y = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r12.xyz, r6.z, int2(0, 0)).x;
        r5.x = r7.x * r5.y + r5.x;
        r12.xyzw = _ShadowMapSize.zwzw * r9.xyzy;
        r13.xy = r5.zw * _ShadowMapSize.zw + r12.xy;
        r13.z = 1.000000000e+000;
        r5.y = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r13.xyz, r6.z, int2(0, 0)).x;
        r5.x = r10.y * r5.y + r5.x;
        r10.xy = r5.zw * _ShadowMapSize.zw + r12.zw;
        r10.z = 1.000000000e+000;
        r5.y = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r10.xyz, r6.z, int2(0, 0)).x;
        r5.x = r5.y * 4.900000000e+001 + r5.x;
        r8.zw = float2(7.000000e+000,7.000000e+000) * r7.zw;
        r10.xy = r5.zw * _ShadowMapSize.zw + r11.zw;
        r10.z = 1.000000000e+000;
        r5.y = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r10.xyz, r6.z, int2(0, 0)).x;
        r5.x = r8.z * r5.y + r5.x;
        r9.y = r8.y;
        r9.xyzw = _ShadowMapSize.zwzw * r9.xyzy;
        r10.xy = r5.zw * _ShadowMapSize.zw + r9.xy;
        r10.z = 1.000000000e+000;
        r5.y = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r10.xyz, r6.z, int2(0, 0)).x;
        r5.x = r7.y * r5.y + r5.x;
        r9.xy = r5.zw * _ShadowMapSize.zw + r9.zw;
        r9.z = 1.000000000e+000;
        r5.y = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r9.xyz, r6.z, int2(0, 0)).x;
        r5.x = r8.w * r5.y + r5.x;
        r5.y = r7.z * r7.w;
        r7.xy = r8.xy * _ShadowMapSize.zw + r6.xy;
        r7.z = 1.000000000e+000;
        r5.z = ShadowCmpSampler_TextureObject.SampleCmpLevelZero(ShadowCmpSampler_s, r7.xyz, r6.z, int2(0, 0)).x;
        r5.x = r5.y * r5.z + r5.x;
        r5.x = 6.944444496e-003 * r5.x;
        r3.w = r3.w * 3.698224900e-004 + -r5.x;
        r2.w = r4.w * r3.w + r5.x;
      }
    }
  }
  r1.yzw = r2.www * r1.yzw;
  r1.x = -_Extinctions.y * r1.x;
  r1.x = exp2(r1.x);
  r1.xyz = r1.yzw * r1.xxx;
  r1.xyz = _CausticsIntensity * r1.xyz;
  r3.xyz = r3.xyz * r0.xxx;
  r0.yzw = r0.yzw * r4.xyz + r3.xyz;
  r3.w = -r0.x;
  r1.w = 1.000000000e+000 + r3.w;
  r0.yzw = r1.xyz * r1.www + r0.yzw;
  r1.xyz = -_CameraPosition_DistanceScale.xyz + r2.xyz;
  r1.x = dot(r1.xyz, r1.xyz);
  r1.x = sqrt(r1.x);
  r1.x = saturate(r1.x * _FogParams.y + _FogParams.x);
  r1.y = _HeightFogParams.y * r1.z;
  r1.y = max(r1.y, -1.250000000e+002);
  r1.z = 9.999999975e-007 < abs(r1.y);
  r1.w = exp2(-r1.y);
  r1.w = 1.000000000e+000 + -r1.w;
  r1.y = r1.w / r1.y;
  r1.y = r1.z ? r1.y : 1.000000000e+000;
  r1.y = r1.y * _HeightFogParams.x + _FogParams.w;
  r1.x = r1.x * r1.y;
  r1.x = -_FogParams.z * r1.x;
  r1.x = exp2(r1.x);
  r1.yzw = -v2.xyz * r1.xxx + v2.xyz;
  r0.yzw = r0.yzw * r1.xxx + r1.yzw;
  r3.xyz = r0.yzw * r0.xxx;
  r0.xyzw = v2.wwww * r3.xyzw + float4(0.000000e+000,0.000000e+000,0.000000e+000,1.000000e+000);
  o0.xyz = _BloomAdaptationFactor.zzz * r0.xyz;
  o0.w = r0.w;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4 _AmbientColorMultiplier;    // Offset:    0 Size:    16
//   float4 _AmbientOcclusionRanges_SunOcclusionFactor;// Offset:   16 Size:    16 [unused]
//   float4 _BloomAdaptationFactor;     // Offset:   32 Size:    16
//   float4 _CameraDirection_FOVDeg;    // Offset:   48 Size:    16 [unused]
//   float4 _CameraDistances;           // Offset:   64 Size:    16 [unused]
//   float4 _CameraNearPlaneSize;       // Offset:   80 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS;// Offset:   96 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS_Previous;// Offset:  112 Size:    16 [unused]
//   float4 _CameraPosition_DistanceScale;// Offset:  128 Size:    16
//   float4 _CameraPosition_DistanceScale_Previous;// Offset:  144 Size:    16 [unused]
//   float4x4 _CullingViewProjectionMatrix;// Offset:  160 Size:    64 [unused]
//   float4 _DepthScale;                // Offset:  224 Size:    16 [unused]
//   float4 _DepthTextureRcpSize;       // Offset:  240 Size:    16 [unused]
//   float4 _DepthTextureScaleOffset;   // Offset:  256 Size:    16 [unused]
//   float4 _FogParams;                 // Offset:  272 Size:    16
//   float4 _FogSHB;                    // Offset:  288 Size:    16 [unused]
//   float4 _FogSHG;                    // Offset:  304 Size:    16 [unused]
//   float4 _FogSHR;                    // Offset:  320 Size:    16 [unused]
//   float4 _HeightFogParams;           // Offset:  336 Size:    16
//   float4x4 _InvProjectionMatrix;     // Offset:  352 Size:    64
//   float4x4 _InvViewMatrix;           // Offset:  416 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  480 Size:    64 [unused]
//   float4 _TempSunDirection;          // Offset:  544 Size:    16 [unused]
//   float4x4 _ViewMatrix;              // Offset:  560 Size:    64 [unused]
//   float4 _ViewPoint_ShadowProjDepthMin;// Offset:  624 Size:    16 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:  640 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix; // Offset:  704 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix_Previous;// Offset:  768 Size:    64 [unused]
//   float4 _ViewportSize;              // Offset:  832 Size:    16
//   float2 _MotionVectorOffsets;       // Offset:  848 Size:     8 [unused]
//   float3 _CameraRight;               // Offset:  864 Size:    12 [unused]
//   float3 _CameraUp;                  // Offset:  880 Size:    12 [unused]
//   float3 _EnvironmentMapColorOffset; // Offset:  896 Size:    12 [unused]
//   float3 _EnvironmentMapColorScale;  // Offset:  912 Size:    12 [unused]
//
// }
//
// cbuffer CGlobalShaderParameterProvider
// {
//
//   float4 _BurnColor;                 // Offset:    0 Size:    16 [unused]
//   float4 _BurnParams;                // Offset:   16 Size:    16 [unused]
//   float4 _BurnParams2;               // Offset:   32 Size:    16 [unused]
//   float4 _BurnParams3;               // Offset:   48 Size:    16 [unused]
//   float4 _CascadedShadowScaleOffsetTile0;// Offset:   64 Size:    16 [unused]
//   float4 _CascadedShadowScaleOffsetTile1;// Offset:   80 Size:    16 [unused]
//   float4 _GlobalScalars;             // Offset:   96 Size:    16 [unused]
//   float4 _SSS_MiscParams;            // Offset:  112 Size:    16 [unused]
//   float4 _WindSimParamsX;            // Offset:  128 Size:    16 [unused]
//   float4 _WindSimParamsY;            // Offset:  144 Size:    16 [unused]
//   float2 _RangeDepthCompression;     // Offset:  160 Size:     8 [unused]
//   float3 _SSS_Color;                 // Offset:  176 Size:    12 [unused]
//   int _BRDFHighQuality;              // Offset:  188 Size:     4
//
// }
//
// cbuffer CWaterReflectionParameterProvider
// {
//
//   float4 _WaterReflectionColor;      // Offset:    0 Size:    16
//   float4 _WaterReflectionPlane;      // Offset:   16 Size:    16 [unused]
//   float4 _WaterReflectionTexCoordRange;// Offset:   32 Size:    16 [unused]
//   float4x4 _WaterReflectionTransform;// Offset:   48 Size:    64
//   float _WaterLevelAdjustment;       // Offset:  112 Size:     4 [unused]
//
// }
//
// cbuffer CWaterParameterProvider
// {
//
//   float4 _BorderAlphaMask;           // Offset:    0 Size:    16 [unused]
//   float _ReflectionInvSquareFadeDistance;// Offset:   16 Size:     4
//   float _ReflectionSquareFadeDistance;// Offset:   20 Size:     4
//   float _SunLightScale;              // Offset:   24 Size:     4
//   bool _DisableThirdNormalUVs;       // Offset:   28 Size:     4
//
// }
//
// cbuffer CWaterWaveParameterProvider
// {
//
//   float4 _WaterWave_CameraCenter_FrontVector;// Offset:    0 Size:    16
//   float4 _WaterWave_CameraRightVector_;// Offset:   16 Size:    16
//   float4 _WaterWave_CameraTanFOVx_2_Near_Far;// Offset:   32 Size:    16
//   bool _WaterWave_Enabled;           // Offset:   48 Size:     4
//
// }
//
// cbuffer Water
// {
//
//   float _NormalOffsetScale;          // Offset:    0 Size:     4
//   float2 _Tiling1;                   // Offset:    4 Size:     8 [unused]
//   float2 _Tiling2;                   // Offset:   16 Size:     8 [unused]
//   float2 _Dir1;                      // Offset:   24 Size:     8 [unused]
//   float2 _Dir2;                      // Offset:   32 Size:     8 [unused]
//   float2 _Tiling3;                   // Offset:   40 Size:     8 [unused]
//   float2 _Dir3;                      // Offset:   48 Size:     8 [unused]
//   float _NormalTexture3Blend;        // Offset:   56 Size:     4
//   float _CausticsIntensity;          // Offset:   60 Size:     4
//   float _CausticsScale;              // Offset:   64 Size:     4
//   float _ReflectionNormalOffsetScale;// Offset:   68 Size:     4
//   float _ReflectionColorOffset;      // Offset:   72 Size:     4
//   float _ReflectionColorScale;       // Offset:   76 Size:     4
//   float _ReflectionAnisotropicDistanceScale;// Offset:   80 Size:     4
//   float _ReflectionAnisotropicDistanceOffset;// Offset:   84 Size:     4
//   float2 _DiffuseTiling;             // Offset:   88 Size:     8 [unused]
//   float _DiffuseSpeedFactor;         // Offset:   96 Size:     4 [unused]
//   float4 _WaterColor;                // Offset:  112 Size:    16
//   float4 _UnderwaterColor;           // Offset:  128 Size:    16 [unused]
//   float4 _Specular;                  // Offset:  144 Size:    16
//   float2 _BaseTiling;                // Offset:  160 Size:     8 [unused]
//   float4 _RefractionWaveInfo;        // Offset:  176 Size:    16 [unused]
//   float _NormalModifier;             // Offset:  192 Size:     4
//   float4 _Extinctions;               // Offset:  208 Size:    16
//   float4 _MaterialPickingID;         // Offset:  224 Size:    16 [unused]
//
// }
//
// cbuffer CNewLightingDataProvider
// {
//
//   float4 _CSMSlice0_0;               // Offset:    0 Size:    16
//   float4 _CSMSlice0_1;               // Offset:   16 Size:    16
//   float4 _CSMSlice0_2;               // Offset:   32 Size:    16
//   float4 _CSMSlice1_0;               // Offset:   48 Size:    16
//   float4 _CSMSlice1_1;               // Offset:   64 Size:    16
//   float4 _CSMSlice1_2;               // Offset:   80 Size:    16
//   float4 _CSMSlice2_0;               // Offset:   96 Size:    16
//   float4 _CSMSlice2_1;               // Offset:  112 Size:    16
//   float4 _CSMSlice2_2;               // Offset:  128 Size:    16
//   float4 _CSMSliceFade;              // Offset:  144 Size:    16 [unused]
//   float4 _LightUpWS_RcpSquaredLightRadius;// Offset:  160 Size:    16 [unused]
//   float4 _PointAttenuation_SpotFactors;// Offset:  176 Size:    16 [unused]
//   float4 _ShadowMapSize;             // Offset:  192 Size:    16
//   float4x4 _ShadowProjectionMatrix;  // Offset:  208 Size:    64 [unused]
//   float4x4 _ShadowRotProjectionMatrix;// Offset:  272 Size:    64 [unused]
//   float3 _LightColor;                // Offset:  336 Size:    12
//   float3 _LightColorUpNormal;        // Offset:  352 Size:    12
//   float3 _LightDirectionWS;          // Offset:  368 Size:    12 [unused]
//   float3 _LightPositionWS;           // Offset:  384 Size:    12 [unused]
//   float3 _LightRightWS;              // Offset:  400 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// DepthVPSampler__SampObj__         sampler      NA          NA    0        1
// EnvironmentMapTexture__SampObj__    sampler      NA          NA    1        1
// WaterWaveTexture__SampObj__       sampler      NA          NA    2        1
// NormalTexture__SampObj__          sampler      NA          NA    3        1
// NormalTexture3__SampObj__         sampler      NA          NA    4        1
// CausticsTexture__SampObj__        sampler      NA          NA    5        1
// DiffuseTexture__SampObj__         sampler      NA          NA    6        1
// ShadowCmpSampler                sampler_c      NA          NA    7        1
// ReflectionRealTexture__SampObj__    sampler      NA          NA    8        1
// DepthVPSampler__TexObj__          texture  float4          2d    0        1
// EnvironmentMapTexture__TexObj__    texture  float4        cube    1        1
// WaterWaveTexture__TexObj__        texture  float4          2d    2        1
// NormalTexture__TexObj__           texture  float4          2d    3        1
// NormalTexture3__TexObj__          texture  float4          2d    4        1
// CausticsTexture__TexObj__         texture  float4          2d    5        1
// DiffuseTexture__TexObj__          texture  float4          2d    6        1
// ShadowCmpSampler_TextureObject    texture  float4     2darray    7        1
// ReflectionRealTexture__TexObj__    texture  float4          2d    8        1
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// CGlobalShaderParameterProvider    cbuffer      NA          NA    1        1
// CWaterReflectionParameterProvider    cbuffer      NA          NA    2        1
// CWaterParameterProvider           cbuffer      NA          NA    3        1
// CWaterWaveParameterProvider       cbuffer      NA          NA    4        1
// Water                             cbuffer      NA          NA    5        1
// CNewLightingDataProvider          cbuffer      NA          NA    6        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyz         8     NONE   float   xyz 
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
// SV_IsFrontFace           0   x          10    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[53], immediateIndexed
dcl_constantbuffer cb1[12], immediateIndexed
dcl_constantbuffer cb2[7], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[4], immediateIndexed
dcl_constantbuffer cb5[14], immediateIndexed
dcl_constantbuffer cb6[23], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_comparison
dcl_sampler s8, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2darray (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_input_ps_siv linear noperspective centroid v0.xy, position
dcl_input_ps linear v1.xyzw
dcl_input_ps linear centroid v2.xyzw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xyz
dcl_input_ps linear v9.xyzw
dcl_output o0.xyzw
dcl_temps 22
dp3 r0.x, v3.xyzx, v3.xyzx
sqrt r0.x, r0.x
add r0.yzw, -v4.xxyz, cb0[8].xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx
if_nz cb4[3].x
  add r1.xy, v4.xyxx, -cb4[0].xyxx
  dp2 r1.z, cb4[0].zwzz, r1.xyxx
  dp2 r1.x, cb4[1].xyxx, r1.xyxx
  mul r1.y, cb4[2].z, cb4[2].y
  div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
  mad r1.w, r1.y, r1.w, -cb4[2].z
  add r2.x, -cb4[2].z, cb4[2].y
  div r3.y, r1.w, r2.x
  mul r1.z, r1.z, cb4[2].x
  div r1.x, r1.x, r1.z
  mad r3.x, r1.x, l(0.500000), l(0.500000)
  sample_indexable(texture2d)(float,float,float,float) r1.x, r3.xyxx, t2.xyzw, s2
  mul r1.x, r1.x, l(0.200000)
  add r1.z, v4.z, -cb0[8].z
  div r1.x, r1.x, r1.z
  mul r1.x, r0.x, r1.x
  max r1.x, r1.x, l(-2.000000)
  min r1.x, r1.x, l(2.000000)
  mad r3.xyz, r0.yzwy, -r1.xxxx, v4.xyzx
  add r1.x, r0.x, r1.x
  div r1.x, r1.x, r0.x
  mul r1.x, r1.x, v3.z
  mul r4.x, r0.x, l(0.010000)
  add r1.zw, r3.xxxy, -cb4[0].xxxy
  dp2 r1.z, cb4[0].zwzz, r1.zwzz
  div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
  mad r1.z, r1.y, r1.z, -cb4[2].z
  div r1.z, r1.z, r2.x
  mov r5.x, -r4.x
  mov r5.y, l(0)
  add r2.yz, r3.xxyx, r5.xxyx
  add r2.yz, r2.yyzy, -cb4[0].xxyx
  dp2 r1.w, cb4[0].zwzz, r2.yzyy
  dp2 r2.y, cb4[1].xyxx, r2.yzyy
  div r2.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  mad r2.z, r1.y, r2.z, -cb4[2].z
  div r5.y, r2.z, r2.x
  mul r1.w, r1.w, cb4[2].x
  div r1.w, r2.y, r1.w
  mad r5.x, r1.w, l(0.500000), l(0.500000)
  mov r4.y, l(0)
  add r6.xyzw, r3.xyxy, r4.xyyx
  add r6.xyzw, r6.xyzw, -cb4[0].xyxy
  dp2 r1.w, cb4[0].zwzz, r6.xyxx
  dp2 r2.y, cb4[1].xyxx, r6.xyxx
  div r2.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  mad r2.z, r1.y, r2.z, -cb4[2].z
  div r6.y, r2.z, r2.x
  mul r1.w, r1.w, cb4[2].x
  div r1.w, r2.y, r1.w
  mad r6.x, r1.w, l(0.500000), l(0.500000)
  mov r4.z, -r4.x
  add r2.yz, r3.xxyx, r4.yyzy
  add r2.yz, r2.yyzy, -cb4[0].xxyx
  dp2 r1.w, cb4[0].zwzz, r2.yzyy
  dp2 r2.y, cb4[1].xyxx, r2.yzyy
  div r2.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  mad r2.z, r1.y, r2.z, -cb4[2].z
  div r7.y, r2.z, r2.x
  mul r1.w, r1.w, cb4[2].x
  div r1.w, r2.y, r1.w
  mad r7.x, r1.w, l(0.500000), l(0.500000)
  dp2 r1.w, cb4[0].zwzz, r6.zwzz
  dp2 r2.y, cb4[1].xyxx, r6.zwzz
  div r2.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  mad r1.y, r1.y, r2.z, -cb4[2].z
  div r8.y, r1.y, r2.x
  mul r1.y, r1.w, cb4[2].x
  div r1.y, r2.y, r1.y
  mad r8.x, r1.y, l(0.500000), l(0.500000)
  sample_indexable(texture2d)(float,float,float,float) r1.y, r5.xyxx, t2.yxzw, s2
  sample_indexable(texture2d)(float,float,float,float) r1.w, r6.xyxx, t2.yzwx, s2
  sample_indexable(texture2d)(float,float,float,float) r2.x, r7.xyxx, t2.xyzw, s2
  sample_indexable(texture2d)(float,float,float,float) r2.y, r8.xyxx, t2.yxzw, s2
  add r5.x, -r1.y, r1.w
  add r5.y, -r2.x, r2.y
  div r1.yw, r5.xxxy, r4.xxxx
  mov r2.xy, r3.xyxx
else 
  mov r2.xy, v4.xyxx
  mov r1.x, v3.z
  mov r3.z, v4.z
  mov r1.yzw, l(0,0,0,0)
endif 
sample_indexable(texture2d)(float,float,float,float) r4.xy, v1.yxyy, t3.ywxz, s3
mad r4.xy, r4.xyxx, l(2.007874, 2.007874, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.xz, r4.xxyx, cb5[12].xxxx
dp2_sat r2.w, r4.xzxx, r4.xzxx
mad r2.w, -r2.w, l(0.999000), l(1.000000)
sqrt r4.y, r2.w
sample_indexable(texture2d)(float,float,float,float) r5.xy, v1.wzww, t3.ywxz, s3
mad r5.xy, r5.xyxx, l(2.007874, 2.007874, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r5.xz, r5.xxyx, cb5[12].xxxx
dp2_sat r2.w, r5.xzxx, r5.xzxx
mad r2.w, -r2.w, l(0.999000), l(1.000000)
sqrt r5.y, r2.w
add r4.xyz, r4.xyzx, r5.xyzx
dp3 r2.w, r4.xyzx, r4.xyzx
rsq r2.w, r2.w
mul r5.xyz, r2.wwww, r4.xyzx
sample_indexable(texture2d)(float,float,float,float) r6.xy, v9.yxyy, t4.ywxz, s4
mad r6.xy, r6.xyxx, l(2.007874, 2.007874, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r6.xz, r6.xxyx, cb5[12].xxxx
dp2_sat r2.w, r6.xzxx, r6.xzxx
mad r2.w, -r2.w, l(0.999000), l(1.000000)
sqrt r6.y, r2.w
add r6.xyz, -r4.xyzx, r6.xyzx
mad r4.xyz, cb5[3].zzzz, r6.xyzx, r4.xyzx
dp3 r2.w, r4.xyzx, r4.xyzx
rsq r2.w, r2.w
mul r4.xyz, r2.wwww, r4.xyzx
movc r4.xyz, cb3[1].wwww, r5.xyzx, r4.xyzx
add r1.z, r1.z, l(-0.900000)
mul_sat r1.z, r1.z, l(10.000000)
mad r1.z, r1.z, l(-0.050000), l(0.050000)
mul r5.xz, r1.zzzz, r1.yywy
mov r5.y, l(0)
add r1.yzw, r4.xxyz, r5.xxyz
dp3 r2.w, r1.yzwy, r1.yzwy
rsq r2.w, r2.w
mul r1.yzw, r1.yyzw, r2.wwww
movc r1.yzw, cb4[3].xxxx, r1.yyzw, r4.xxyz
mad r4.xy, r1.ywyy, cb5[0].xxxx, v9.zwzz
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.xyxx, t6.xyzw, s6
mad r3.xy, r1.ywyy, cb5[0].xxxx, r2.xyxx
dp3 r2.w, r1.ywzy, r0.yzwy
mov_sat r5.x, r2.w
add r5.y, -r5.x, l(1.000000)
mul r5.z, r5.y, r5.y
mul r5.z, r5.z, r5.z
mul r5.y, r5.y, r5.z
mul r5.y, r5.y, l(0.980000)
mul r5.z, cb5[9].x, cb5[9].x
mad r5.z, r5.z, l(0.830000), l(0.170000)
mad r5.y, r5.y, r5.z, l(0.020000)
mul r5.w, r5.x, l(-8.656170)
exp r5.w, r5.w
mul r5.z, r5.w, r5.z
mad r5.z, r5.z, l(0.980000), l(0.020000)
movc r5.y, cb1[11].w, r5.y, r5.z
mul r6.xyz, cb3[1].zzzz, cb6[21].xyzx
dp3 r5.z, v8.xyzx, v8.xyzx
rsq r5.z, r5.z
mul r7.xyz, r5.zzzz, v8.xyzx
mad r8.xyz, v8.xyzx, r5.zzzz, -v7.xyzx
dp3 r5.z, r8.xyzx, r8.xyzx
rsq r5.z, r5.z
mul r8.xyz, r5.zzzz, r8.xyzx
dp3 r5.z, r8.xyzx, r7.xyzx
add r5.w, -r5.z, l(1.000000)
mul r6.w, r5.w, r5.w
mul r6.w, r6.w, r6.w
mul r5.w, r5.w, r6.w
mad r5.w, r5.w, l(0.980000), l(0.020000)
mul r5.z, r5.z, l(-8.656170)
exp r5.z, r5.z
mad r5.z, r5.z, l(0.980000), l(0.020000)
movc r5.z, cb1[11].w, r5.w, r5.z
mov r3.w, l(1.000000)
dp4 r7.x, r3.xyzw, cb6[6].xyzw
dp4 r7.y, r3.xyzw, cb6[7].xyzw
dp4 r7.z, r3.xyzw, cb6[8].xyzw
dp4 r9.x, r3.xyzw, cb6[3].xyzw
dp4 r9.y, r3.xyzw, cb6[4].xyzw
dp4 r9.z, r3.xyzw, cb6[5].xyzw
ge r10.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r10.xyz, r10.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
ge r11.xyz, l(1.000000, 1.000000, 1.000000, 0.000000), r9.xyzx
and r11.xyz, r11.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
mul r10.xyz, r10.xyzx, r11.xyzx
dp3 r5.w, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
ge r5.w, r5.w, l(3.000000)
mov r9.w, l(1.000000)
mov r7.w, l(2.000000)
movc r10.xyzw, r5.wwww, r9.xyzw, r7.xyzw
dp4 r11.x, r3.xyzw, cb6[0].xyzw
dp4 r11.y, r3.xyzw, cb6[1].xyzw
dp4 r11.z, r3.xyzw, cb6[2].xyzw
ge r3.xyw, r11.xyxz, l(0.000000, 0.000000, 0.000000, 0.000000)
and r3.xyw, r3.xyxw, l(0x3f800000, 0x3f800000, 0, 0x3f800000)
ge r12.xyz, l(1.000000, 1.000000, 1.000000, 0.000000), r11.xyzx
and r12.xyz, r12.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
mul r3.xyw, r3.xyxw, r12.xyxz
dp3 r3.x, r3.xywx, l(1.000000, 1.000000, 1.000000, 0.000000)
ge r3.x, r3.x, l(3.000000)
mov r11.w, l(0)
movc r10.xyzw, r3.xxxx, r11.xywz, r10.xywz
eq r3.x, r10.z, l(2.000000)
if_nz r3.x
  mad r3.xyw, r7.xyxz, l(2.000000, 2.000000, 0.000000, 1.000000), l(-1.000000, -1.000000, 0.000000, -0.000000)
  add r3.xyw, |r3.xyxw|, l(-0.800000, -0.800000, 0.000000, -0.800000)
  mul_sat r3.xyw, r3.xyxw, l(5.000000, 5.000000, 0.000000, 5.000000)
  add r3.xyw, -r3.xyxw, l(1.000000, 1.000000, 0.000000, 1.000000)
  min r3.x, r3.y, r3.x
  min r3.x, r3.w, r3.x
  mad r3.yw, r10.xxxy, cb6[12].xxxy, l(0.000000, 0.500000, 0.000000, 0.500000)
  round_ni r7.xy, r3.ywyy
  add r3.yw, r3.yyyw, -r7.xxxy
  add r7.xy, r7.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
  mad r7.zw, -r3.wwwy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
  mad r12.xy, r3.ywyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(1.000000, 1.000000, 0.000000, 0.000000)
  add r12.zw, -r3.yyyw, l(0.000000, 0.000000, 2.000000, 2.000000)
  div r12.zw, r12.zzzw, r7.wwwz
  div r3.yw, r3.yyyw, r12.xxxy
  add r13.zw, r12.zzzw, l(0.000000, 0.000000, -1.000000, -1.000000)
  add r13.xy, r3.ywyy, l(1.000000, 1.000000, 0.000000, 0.000000)
  mul r3.y, r7.z, r7.w
  mul r14.xyzw, r13.zwxw, cb6[12].zwzw
  mad r15.xy, r7.xyxx, cb6[12].zwzz, r14.xyxx
  mov r15.z, l(2.000000)
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r15.xyzx, t7.xxxx, s7, r10.w
  mul r7.zw, r7.zzzw, r12.xxxy
  mad r14.xy, r7.xyxx, cb6[12].zwzz, r14.zwzz
  mov r14.z, l(2.000000)
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.w, r14.xyzx, t7.xxxx, s7, r10.w
  mul r5.w, r5.w, r7.z
  mad r3.y, r3.y, r3.w, r5.w
  mul r13.xyzw, r13.zyxy, cb6[12].zwzw
  mad r14.xy, r7.xyxx, cb6[12].zwzz, r13.xyxx
  mov r14.z, l(2.000000)
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r14.xyzx, t7.xxxx, s7, r10.w
  mad r3.y, r7.w, r3.w, r3.y
  mul r3.w, r12.y, r12.x
  mad r7.xy, r7.xyxx, cb6[12].zwzz, r13.zwzz
  mov r7.z, l(2.000000)
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.w, r7.xyzx, t7.xxxx, s7, r10.w
  mad r3.y, r3.w, r5.w, r3.y
  mad r3.y, r3.y, l(0.062500), l(-1.000000)
  mad r3.x, r3.x, r3.y, l(1.000000)
else 
  eq r3.y, r10.z, l(1.000000)
  if_nz r3.y
    mad r3.yw, r10.xxxy, cb6[12].xxxy, l(0.000000, 0.500000, 0.000000, 0.500000)
    round_ni r7.xy, r3.ywyy
    add r3.yw, r3.yyyw, -r7.xxxy
    add r7.xy, r7.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    mul r7.zw, r7.xxxy, cb6[12].zzzw
    mad r12.xy, -r3.wyww, l(3.000000, 3.000000, 0.000000, 0.000000), l(4.000000, 4.000000, 0.000000, 0.000000)
    mad r12.zw, r3.yyyw, l(0.000000, 0.000000, 3.000000, 3.000000), l(0.000000, 0.000000, 1.000000, 1.000000)
    mad r13.xy, -r3.ywyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
    div r13.xy, r13.xyxx, r12.yxyy
    add r13.zw, r3.yyyw, l(0.000000, 0.000000, 3.000000, 3.000000)
    div r3.yw, r3.yyyw, r12.zzzw
    add r14.xw, r13.xxxy, l(-2.000000, 0.000000, 0.000000, -2.000000)
    mul r14.yz, r13.wwzw, l(0.000000, 0.142857, 0.142857, 0.000000)
    add r13.xy, r3.ywyy, l(2.000000, 2.000000, 0.000000, 0.000000)
    mul r3.y, r12.x, r12.y
    mul r15.xyzw, r14.xwzw, cb6[12].zwzw
    mad r16.xy, r7.xyxx, cb6[12].zwzz, r15.xyxx
    mov r16.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r16.xyzx, t7.xxxx, s7, r10.w
    mul r15.xy, r12.xyxx, l(7.000000, 7.000000, 0.000000, 0.000000)
    mad r16.xy, r7.xyxx, cb6[12].zwzz, r15.zwzz
    mov r16.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.w, r16.xyzx, t7.xxxx, s7, r10.w
    mul r5.w, r5.w, r15.x
    mad r3.y, r3.y, r3.w, r5.w
    mul r12.xy, r12.xyxx, r12.zwzz
    mov r13.zw, r14.wwwy
    mul r16.xyzw, r13.xzxw, cb6[12].zwzw
    mad r17.xy, r7.xyxx, cb6[12].zwzz, r16.xyxx
    mov r17.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r17.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r12.x, r3.w, r3.y
    mul r17.xyzw, r14.xyzy, cb6[12].zwzw
    mad r18.xy, r7.xyxx, cb6[12].zwzz, r17.xyxx
    mov r18.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r18.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r15.y, r3.w, r3.y
    mad r15.xy, r7.xyxx, cb6[12].zwzz, r17.zwzz
    mov r15.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r15.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r3.w, l(49.000000), r3.y
    mul r13.zw, r12.zzzw, l(0.000000, 0.000000, 7.000000, 7.000000)
    mad r15.xy, r7.xyxx, cb6[12].zwzz, r16.zwzz
    mov r15.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r15.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r13.z, r3.w, r3.y
    mov r14.y, r13.y
    mul r14.xyzw, r14.xyzy, cb6[12].zwzw
    mad r15.xy, r7.xyxx, cb6[12].zwzz, r14.xyxx
    mov r15.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r15.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r12.y, r3.w, r3.y
    mad r14.xy, r7.xyxx, cb6[12].zwzz, r14.zwzz
    mov r14.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r14.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r13.w, r3.w, r3.y
    mul r3.w, r12.w, r12.z
    mad r7.xy, r13.xyxx, cb6[12].zwzz, r7.zwzz
    mov r7.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.w, r7.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r3.w, r5.w, r3.y
    mul r3.x, r3.y, l(0.006944)
  else 
    mad r3.yw, r10.xxxy, cb6[12].xxxy, l(0.000000, 0.500000, 0.000000, 0.500000)
    round_ni r7.xy, r3.ywyy
    add r3.yw, r3.yyyw, -r7.xxxy
    add r7.xy, r7.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    mul r7.zw, r7.xxxy, cb6[12].zzzw
    mad r12.xyzw, r3.yyyy, l(11.000000, 11.000000, 5.000000, 5.000000), l(-28.000000, 17.000000, -6.000000, 1.000000)
    mad r13.xyz, r3.yyyy, l(4.000000, 4.000000, 7.000000, 0.000000), l(-5.000000, -16.000000, 5.000000, 0.000000)
    div r13.xyz, r13.xyzx, r12.zxyz
    add r13.xyz, r13.yxzy, l(-1.000000, -3.000000, 1.000000, 0.000000)
    div r3.y, r3.y, r12.w
    add r14.x, r3.y, l(3.000000)
    mad r15.xyzw, r3.wwww, l(11.000000, 11.000000, 5.000000, 5.000000), l(-28.000000, 17.000000, -6.000000, 1.000000)
    mad r16.xyz, r3.wwww, l(4.000000, 4.000000, 7.000000, 0.000000), l(-5.000000, -16.000000, 5.000000, 0.000000)
    div r16.xyz, r16.xyzx, r15.zxyz
    add r16.xyz, r16.xyzx, l(-3.000000, -1.000000, 1.000000, 0.000000)
    div r3.y, r3.w, r15.w
    add r17.y, r3.y, l(3.000000)
    mul r18.xyzw, r12.zxzx, r15.zzxx
    mov r13.w, r16.x
    mul r19.xyzw, r13.ywxw, cb6[12].zwzw
    mad r10.xy, r7.xyxx, cb6[12].zwzz, r19.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.y, r10.xyzx, t7.xxxx, s7, r10.w
    mad r10.xy, r7.xyxx, cb6[12].zwzz, r19.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mul r3.w, r3.w, r18.y
    mad r3.y, r18.x, r3.y, r3.w
    mul r19.xyzw, -r12.ywyw, r15.zzxx
    mad r10.xy, r13.zwzz, cb6[12].zwzz, r7.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r19.x, r3.w, r3.y
    mov r14.y, r13.w
    mad r10.xy, r14.xyxx, cb6[12].zwzz, r7.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r19.y, r3.w, r3.y
    mov r16.w, r13.y
    mul r20.xyzw, r16.wywz, cb6[12].zwzw
    mad r10.xy, r7.xyxx, cb6[12].zwzz, r20.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r18.z, r3.w, r3.y
    mov r13.yw, r16.yyyz
    mul r21.xyzw, r13.xyzy, cb6[12].zwzw
    mad r10.xy, r7.xyxx, cb6[12].zwzz, r21.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r18.w, r3.w, r3.y
    mad r10.xy, r7.xyxx, cb6[12].zwzz, r21.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r19.z, r3.w, r3.y
    mov r14.zw, r13.yyyw
    mul r18.xyzw, r14.xzxw, cb6[12].zwzw
    mad r10.xy, r7.xyxx, cb6[12].zwzz, r18.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r19.w, r3.w, r3.y
    mul r19.xyzw, r12.zxzx, -r15.yyww
    mad r10.xy, r7.xyxx, cb6[12].zwzz, r20.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r19.x, r3.w, r3.y
    mul r20.xyzw, r13.xwzw, cb6[12].zwzw
    mad r10.xy, r7.xyxx, cb6[12].zwzz, r20.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r19.y, r3.w, r3.y
    mul r12.xyzw, r12.ywyw, r15.yyww
    mad r10.xy, r7.xyxx, cb6[12].zwzz, r20.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r12.x, r3.w, r3.y
    mad r10.xy, r7.xyxx, cb6[12].zwzz, r18.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r12.y, r3.w, r3.y
    mov r17.x, r16.w
    mad r10.xy, r17.xyxx, cb6[12].zwzz, r7.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r19.z, r3.w, r3.y
    mov r17.zw, r13.xxxz
    mul r13.xyzw, r17.zywy, cb6[12].zwzw
    mad r10.xy, r7.xyxx, cb6[12].zwzz, r13.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r19.w, r3.w, r3.y
    mad r10.xy, r7.xyxx, cb6[12].zwzz, r13.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r12.z, r3.w, r3.y
    mov r17.x, r14.x
    mad r10.xy, r17.xyxx, cb6[12].zwzz, r7.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r12.w, r3.w, r3.y
    mul r3.x, r3.y, l(0.000370)
    mad r7.xyz, r11.xyzx, l(2.000000, 2.000000, 1.000000, 0.000000), l(-1.000000, -1.000000, -0.000000, 0.000000)
    add r7.xyz, |r7.xyzx|, l(-0.800000, -0.800000, -0.800000, 0.000000)
    mul_sat r7.xyz, r7.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000)
    add r7.xyz, -r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    min r3.w, r7.y, r7.x
    min r3.w, r7.z, r3.w
    ne r5.w, r3.w, l(1.000000)
    if_nz r5.w
      mad r7.xy, r9.xyxx, cb6[12].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
      round_ni r7.zw, r7.xxxy
      add r7.xy, -r7.zwzz, r7.xyxx
      add r7.zw, r7.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
      mul r9.xy, r7.zwzz, cb6[12].zwzz
      mad r10.xy, -r7.yxyy, l(3.000000, 3.000000, 0.000000, 0.000000), l(4.000000, 4.000000, 0.000000, 0.000000)
      mad r10.zw, r7.xxxy, l(0.000000, 0.000000, 3.000000, 3.000000), l(0.000000, 0.000000, 1.000000, 1.000000)
      mad r11.xy, -r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
      div r11.xy, r11.xyxx, r10.yxyy
      add r11.zw, r7.xxxy, l(0.000000, 0.000000, 3.000000, 3.000000)
      div r7.xy, r7.xyxx, r10.zwzz
      add r12.xw, r11.xxxy, l(-2.000000, 0.000000, 0.000000, -2.000000)
      mul r12.yz, r11.wwzw, l(0.000000, 0.142857, 0.142857, 0.000000)
      add r11.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
      mul r5.w, r10.x, r10.y
      mul r13.xyzw, r12.xwzw, cb6[12].zwzw
      mad r14.xy, r7.zwzz, cb6[12].zwzz, r13.xyxx
      mov r14.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r6.w, r14.xyzx, t7.xxxx, s7, r9.z
      mul r7.xy, r10.xyxx, l(7.000000, 7.000000, 0.000000, 0.000000)
      mad r13.xy, r7.zwzz, cb6[12].zwzz, r13.zwzz
      mov r13.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r8.w, r13.xyzx, t7.xxxx, s7, r9.z
      mul r7.x, r7.x, r8.w
      mad r5.w, r5.w, r6.w, r7.x
      mul r10.xy, r10.xyxx, r10.zwzz
      mov r11.zw, r12.wwwy
      mul r13.xyzw, r11.xzxw, cb6[12].zwzw
      mad r14.xy, r7.zwzz, cb6[12].zwzz, r13.xyxx
      mov r14.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r6.w, r14.xyzx, t7.xxxx, s7, r9.z
      mad r5.w, r10.x, r6.w, r5.w
      mul r14.xyzw, r12.xyzy, cb6[12].zwzw
      mad r15.xy, r7.zwzz, cb6[12].zwzz, r14.xyxx
      mov r15.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r6.w, r15.xyzx, t7.xxxx, s7, r9.z
      mad r5.w, r7.y, r6.w, r5.w
      mad r14.xy, r7.zwzz, cb6[12].zwzz, r14.zwzz
      mov r14.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r6.w, r14.xyzx, t7.xxxx, s7, r9.z
      mad r5.w, r6.w, l(49.000000), r5.w
      mul r7.xy, r10.zwzz, l(7.000000, 7.000000, 0.000000, 0.000000)
      mad r13.xy, r7.zwzz, cb6[12].zwzz, r13.zwzz
      mov r13.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r6.w, r13.xyzx, t7.xxxx, s7, r9.z
      mad r5.w, r7.x, r6.w, r5.w
      mov r12.y, r11.y
      mul r12.xyzw, r12.xyzy, cb6[12].zwzw
      mad r13.xy, r7.zwzz, cb6[12].zwzz, r12.xyxx
      mov r13.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r6.w, r13.xyzx, t7.xxxx, s7, r9.z
      mad r5.w, r10.y, r6.w, r5.w
      mad r12.xy, r7.zwzz, cb6[12].zwzz, r12.zwzz
      mov r12.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r6.w, r12.xyzx, t7.xxxx, s7, r9.z
      mad r5.w, r7.y, r6.w, r5.w
      mul r6.w, r10.w, r10.z
      mad r7.xy, r11.xyxx, cb6[12].zwzz, r9.xyxx
      mov r7.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r7.x, r7.xyzx, t7.xxxx, s7, r9.z
      mad r5.w, r6.w, r7.x, r5.w
      mul r5.w, r5.w, l(0.006944)
      mad r3.y, r3.y, l(0.000370), -r5.w
      mad r3.x, r3.w, r3.y, r5.w
    endif 
  endif 
endif 
mul r3.y, cb5[9].x, l(13.000000)
mad r3.w, cb5[9].x, l(-0.255445), l(1.401520)
mad r3.w, r3.w, cb5[9].x, l(-1.946950)
mad r3.w, r3.w, cb5[9].x, l(0.816500)
exp r3.y, r3.y
movc r3.y, cb1[11].w, r3.w, r3.y
dp3_sat r3.w, -v7.xzyx, r1.yzwy
mul r5.w, r3.w, r3.w
mul r6.w, r3.y, r3.y
mad r7.x, -r3.y, r3.y, l(1.000000)
mad r5.w, r5.w, r7.x, r6.w
sqrt r5.w, r5.w
add r5.w, r3.w, r5.w
div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
mul r7.y, r5.x, r5.x
mad r6.w, r7.y, r7.x, r6.w
sqrt r6.w, r6.w
add r5.x, r5.x, r6.w
div r5.x, l(1.000000, 1.000000, 1.000000, 1.000000), r5.x
movc r5.xw, cb1[11].wwww, r5.xxxw, l(1.000000,0,0,1.000000)
mul r5.x, r5.x, r5.w
dp3_sat r5.w, r8.xzyx, r1.yzwy
mad r6.w, r3.y, r3.y, l(-1.000000)
mul r7.x, r5.w, r5.w
mad r6.w, r7.x, r6.w, l(1.000000)
div r6.w, r3.y, r6.w
mul r6.w, r6.w, r6.w
mul r7.xyz, r6.wwww, r6.xyzx
log r5.w, r5.w
mul r5.w, r3.y, r5.w
exp r5.w, r5.w
mad r3.y, r3.y, l(0.125000), l(0.250000)
mul r3.y, r3.y, r5.w
mul r8.xyz, r3.yyyy, r6.xyzx
movc r7.xyz, cb1[11].wwww, r7.xyzx, r8.xyzx
mul r7.xyz, r3.wwww, r7.xyzx
mul r7.xyz, r5.xxxx, r7.xyzx
mul r7.xyz, r3.xxxx, r7.xyzx
mul r6.xyz, r6.xyzx, r3.wwww
mul r8.xy, v0.xyxx, cb0[52].zwzz
mad r3.yw, r8.xxxy, l(0.000000, 2.000000, 0.000000, 2.000000), l(0.000000, -1.000000, 0.000000, -1.000000)
mad r3.yw, -|r3.yyyw|, |r3.yyyw|, l(0.000000, 1.000000, 0.000000, 1.000000)
mul r5.xw, r1.yyyw, cb5[4].yyyy
mad r9.xy, r5.xwxx, r0.xxxx, v5.xyxx
mov r9.z, v5.z
mov r9.w, l(1.000000)
dp4 r10.x, r9.xyzw, cb2[3].xyzw
dp4 r10.y, r9.xyzw, cb2[4].xyzw
dp4 r5.x, r9.xyzw, cb2[6].xyzw
div r5.xw, r10.xxxy, r5.xxxx
mad r8.zw, -v0.xxxx, cb0[52].zzzz, l(0.000000, 0.000000, 1.000000, 1.000000)
add r5.xw, -r8.zzzy, r5.xxxw
mad_sat r3.yw, r5.xxxw, r3.yyyw, r8.wwwy
add r8.xyz, r9.xyzx, -cb0[8].xyzx
dp3 r5.x, r8.xyzx, r8.xyzx
sqrt r5.x, r5.x
div r5.x, r5.x, |r8.z|
max r5.x, r5.x, l(1.000000)
min r5.x, r5.x, l(8.000000)
mad r5.x, r0.x, r5.x, -cb5[5].y
mad r5.x, r5.x, cb5[5].x, l(1.000000)
log r5.x, r5.x
sample_l_indexable(texture2d)(float,float,float,float) r8.xyz, r3.ywyy, t8.xyzw, s8, r5.x
mul r8.xyz, r8.xyzx, r8.xyzx
min r8.xyz, r8.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000)
mul r8.xyz, r8.xyzx, cb2[0].wwww
mov r2.z, r3.z
add r3.yzw, -r2.xxyz, cb0[8].xxyz
dp3 r3.y, r3.yzwy, r3.yzwy
mad_sat r3.y, r3.y, cb3[1].x, cb3[1].y
add r2.w, r2.w, r2.w
mad r9.xyz, r1.yzwy, -r2.wwww, r0.ywzy
mov r9.xyz, -r9.xyzx
mad r1.z, -cb5[9].x, l(6.000000), l(6.000000)
sample_l_indexable(texturecube)(float,float,float,float) r9.xyz, r9.xyzx, t1.xyzw, s1, r1.z
mad r9.xyz, r9.xyzx, cb5[4].wwww, cb5[4].zzzz
mad r9.xyz, cb0[0].xyzx, r9.xyzx, -r8.xyzx
mad r3.yzw, r3.yyyy, r9.xxyz, r8.xxyz
div r8.xy, v6.xyxx, v6.zzzz
sample_l_indexable(texture2d)(float,float,float,float) r8.z, r8.xyxx, t0.yzxw, s0, l(0.000000)
mov r8.w, l(1.000000)
dp4 r1.z, r8.xyzw, cb0[24].xyzw
dp4 r2.w, r8.xyzw, cb0[25].xyzw
div r1.z, -r1.z, r2.w
mul r1.z, r0.x, -r1.z
div r1.x, r1.z, r1.x
add r0.x, -r0.x, r1.x
mad r8.xyz, -r0.yzwy, r1.xxxx, cb0[8].xyzx
mul r0.x, r0.x, -cb5[13].x
exp r0.x, r0.x
add r0.x, -r0.x, l(1.000000)
max r0.x, r0.x, l(0.000000)
mad r0.yzw, r6.xxyz, r3.xxxx, cb0[0].xxyz
add r1.x, -r5.y, l(1.000000)
mul r0.yzw, r0.yyzw, r1.xxxx
mul r5.xzw, r5.zzzz, r7.xxyz
mad r3.xyz, r3.yzwy, r5.yyyy, r5.xzwx
add r4.xyz, r4.xyzx, -cb5[7].xyzx
mad r4.xyz, r4.wwww, r4.xyzx, cb5[7].xyzx
add r1.x, r2.z, -r8.z
max r1.x, r1.x, l(0.000000)
mul r1.yz, r1.xxxx, r1.yywy
mad r1.yz, r1.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000), r8.xxyx
mul r1.yz, r1.yyzy, cb5[4].xxxx
sample_indexable(texture2d)(float,float,float,float) r1.yzw, r1.yzyy, t5.wxyz, s5
mul r1.yzw, r1.yyzw, cb6[22].xxyz
mov r8.w, l(1.000000)
dp4 r5.x, r8.xyzw, cb6[6].xyzw
dp4 r5.y, r8.xyzw, cb6[7].xyzw
dp4 r5.z, r8.xyzw, cb6[8].xyzw
dp4 r6.x, r8.xyzw, cb6[3].xyzw
dp4 r6.y, r8.xyzw, cb6[4].xyzw
dp4 r6.z, r8.xyzw, cb6[5].xyzw
ge r7.xyz, r6.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r7.xyz, r7.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
ge r9.xyz, l(1.000000, 1.000000, 1.000000, 0.000000), r6.xyzx
and r9.xyz, r9.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
mul r7.xyz, r7.xyzx, r9.xyzx
dp3 r2.w, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
ge r2.w, r2.w, l(3.000000)
mov r6.w, l(1.000000)
mov r5.w, l(2.000000)
movc r7.xyzw, r2.wwww, r6.xyzw, r5.xyzw
dp4 r9.x, r8.xyzw, cb6[0].xyzw
dp4 r9.y, r8.xyzw, cb6[1].xyzw
dp4 r9.z, r8.xyzw, cb6[2].xyzw
ge r8.xyz, r9.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r8.xyz, r8.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
ge r10.xyz, l(1.000000, 1.000000, 1.000000, 0.000000), r9.xyzx
and r10.xyz, r10.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
mul r8.xyz, r8.xyzx, r10.xyzx
dp3 r2.w, r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
ge r2.w, r2.w, l(3.000000)
mov r9.w, l(0)
movc r7.xyzw, r2.wwww, r9.xywz, r7.xywz
eq r2.w, r7.z, l(2.000000)
if_nz r2.w
  mad r5.xyz, r5.xyzx, l(2.000000, 2.000000, 1.000000, 0.000000), l(-1.000000, -1.000000, -0.000000, 0.000000)
  add r5.xyz, |r5.xyzx|, l(-0.800000, -0.800000, -0.800000, 0.000000)
  mul_sat r5.xyz, r5.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000)
  add r5.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  min r2.w, r5.y, r5.x
  min r2.w, r5.z, r2.w
  mad r5.xy, r7.xyxx, cb6[12].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  round_ni r5.zw, r5.xxxy
  add r5.xy, -r5.zwzz, r5.xyxx
  add r5.zw, r5.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
  mad r8.xy, -r5.yxyy, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
  mad r8.zw, r5.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 1.000000, 1.000000)
  add r10.xy, -r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
  div r10.xy, r10.xyxx, r8.yxyy
  div r5.xy, r5.xyxx, r8.zwzz
  add r10.zw, r10.xxxy, l(0.000000, 0.000000, -1.000000, -1.000000)
  add r10.xy, r5.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  mul r3.w, r8.x, r8.y
  mul r11.xyzw, r10.zwxw, cb6[12].zwzw
  mad r12.xy, r5.zwzz, cb6[12].zwzz, r11.xyxx
  mov r12.z, l(2.000000)
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r12.xyzx, t7.xxxx, s7, r7.w
  mul r5.xy, r8.xyxx, r8.zwzz
  mad r11.xy, r5.zwzz, cb6[12].zwzz, r11.zwzz
  mov r11.z, l(2.000000)
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r6.w, r11.xyzx, t7.xxxx, s7, r7.w
  mul r5.x, r5.x, r6.w
  mad r3.w, r3.w, r4.w, r5.x
  mul r10.xyzw, r10.zyxy, cb6[12].zwzw
  mad r11.xy, r5.zwzz, cb6[12].zwzz, r10.xyxx
  mov r11.z, l(2.000000)
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r11.xyzx, t7.xxxx, s7, r7.w
  mad r3.w, r5.y, r4.w, r3.w
  mul r4.w, r8.w, r8.z
  mad r5.xy, r5.zwzz, cb6[12].zwzz, r10.zwzz
  mov r5.z, l(2.000000)
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.x, r5.xyzx, t7.xxxx, s7, r7.w
  mad r3.w, r4.w, r5.x, r3.w
  mad r3.w, r3.w, l(0.062500), l(-1.000000)
  mad r2.w, r2.w, r3.w, l(1.000000)
else 
  eq r3.w, r7.z, l(1.000000)
  if_nz r3.w
    mad r5.xy, r7.xyxx, cb6[12].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    round_ni r5.zw, r5.xxxy
    add r5.xy, -r5.zwzz, r5.xyxx
    add r5.zw, r5.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
    mul r8.xy, r5.zwzz, cb6[12].zwzz
    mad r8.zw, -r5.yyyx, l(0.000000, 0.000000, 3.000000, 3.000000), l(0.000000, 0.000000, 4.000000, 4.000000)
    mad r10.xy, r5.xyxx, l(3.000000, 3.000000, 0.000000, 0.000000), l(1.000000, 1.000000, 0.000000, 0.000000)
    mad r10.zw, -r5.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
    div r10.zw, r10.zzzw, r8.wwwz
    add r11.xy, r5.xyxx, l(3.000000, 3.000000, 0.000000, 0.000000)
    div r5.xy, r5.xyxx, r10.xyxx
    add r12.xw, r10.zzzw, l(-2.000000, 0.000000, 0.000000, -2.000000)
    mul r12.yz, r11.yyxy, l(0.000000, 0.142857, 0.142857, 0.000000)
    add r11.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
    mul r3.w, r8.z, r8.w
    mul r13.xyzw, r12.xwzw, cb6[12].zwzw
    mad r14.xy, r5.zwzz, cb6[12].zwzz, r13.xyxx
    mov r14.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r14.xyzx, t7.xxxx, s7, r7.w
    mul r5.xy, r8.zwzz, l(7.000000, 7.000000, 0.000000, 0.000000)
    mad r13.xy, r5.zwzz, cb6[12].zwzz, r13.zwzz
    mov r13.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r6.w, r13.xyzx, t7.xxxx, s7, r7.w
    mul r5.x, r5.x, r6.w
    mad r3.w, r3.w, r4.w, r5.x
    mul r8.zw, r8.zzzw, r10.xxxy
    mov r11.zw, r12.wwwy
    mul r13.xyzw, r11.xzxw, cb6[12].zwzw
    mad r14.xy, r5.zwzz, cb6[12].zwzz, r13.xyxx
    mov r14.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r14.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r8.z, r4.w, r3.w
    mul r14.xyzw, r12.xyzy, cb6[12].zwzw
    mad r15.xy, r5.zwzz, cb6[12].zwzz, r14.xyxx
    mov r15.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r15.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r5.y, r4.w, r3.w
    mad r14.xy, r5.zwzz, cb6[12].zwzz, r14.zwzz
    mov r14.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r14.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r4.w, l(49.000000), r3.w
    mul r5.xy, r10.xyxx, l(7.000000, 7.000000, 0.000000, 0.000000)
    mad r13.xy, r5.zwzz, cb6[12].zwzz, r13.zwzz
    mov r13.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r13.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r5.x, r4.w, r3.w
    mov r12.y, r11.y
    mul r12.xyzw, r12.xyzy, cb6[12].zwzw
    mad r13.xy, r5.zwzz, cb6[12].zwzz, r12.xyxx
    mov r13.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r13.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r8.w, r4.w, r3.w
    mad r12.xy, r5.zwzz, cb6[12].zwzz, r12.zwzz
    mov r12.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r12.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r5.y, r4.w, r3.w
    mul r4.w, r10.y, r10.x
    mad r5.xy, r11.xyxx, cb6[12].zwzz, r8.xyxx
    mov r5.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.x, r5.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r4.w, r5.x, r3.w
    mul r2.w, r3.w, l(0.006944)
  else 
    mad r5.xy, r7.xyxx, cb6[12].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    round_ni r5.zw, r5.xxxy
    add r5.xy, -r5.zwzz, r5.xyxx
    add r5.zw, r5.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
    mul r8.xy, r5.zwzz, cb6[12].zwzz
    mad r10.xyzw, r5.xxxx, l(11.000000, 11.000000, 5.000000, 5.000000), l(-28.000000, 17.000000, -6.000000, 1.000000)
    mad r11.xyz, r5.xxxx, l(4.000000, 4.000000, 7.000000, 0.000000), l(-5.000000, -16.000000, 5.000000, 0.000000)
    div r11.xyz, r11.xyzx, r10.zxyz
    add r11.xyz, r11.yxzy, l(-1.000000, -3.000000, 1.000000, 0.000000)
    div r3.w, r5.x, r10.w
    add r12.x, r3.w, l(3.000000)
    mad r13.xyzw, r5.yyyy, l(11.000000, 11.000000, 5.000000, 5.000000), l(-28.000000, 17.000000, -6.000000, 1.000000)
    mad r14.xyz, r5.yyyy, l(4.000000, 4.000000, 7.000000, 0.000000), l(-5.000000, -16.000000, 5.000000, 0.000000)
    div r14.xyz, r14.xyzx, r13.zxyz
    add r14.xyz, r14.xyzx, l(-3.000000, -1.000000, 1.000000, 0.000000)
    div r3.w, r5.y, r13.w
    add r15.y, r3.w, l(3.000000)
    mul r16.xyzw, r10.zxzx, r13.zzxx
    mov r11.w, r14.x
    mul r17.xyzw, r11.ywxw, cb6[12].zwzw
    mad r7.xy, r5.zwzz, cb6[12].zwzz, r17.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r7.xy, r5.zwzz, cb6[12].zwzz, r17.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mul r4.w, r4.w, r16.y
    mad r3.w, r16.x, r3.w, r4.w
    mul r17.xyzw, -r10.ywyw, r13.zzxx
    mad r7.xy, r11.zwzz, cb6[12].zwzz, r8.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r17.x, r4.w, r3.w
    mov r12.y, r11.w
    mad r7.xy, r12.xyxx, cb6[12].zwzz, r8.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r17.y, r4.w, r3.w
    mov r14.w, r11.y
    mul r18.xyzw, r14.wywz, cb6[12].zwzw
    mad r7.xy, r5.zwzz, cb6[12].zwzz, r18.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r16.z, r4.w, r3.w
    mov r11.yw, r14.yyyz
    mul r19.xyzw, r11.xyzy, cb6[12].zwzw
    mad r7.xy, r5.zwzz, cb6[12].zwzz, r19.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r16.w, r4.w, r3.w
    mad r7.xy, r5.zwzz, cb6[12].zwzz, r19.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r17.z, r4.w, r3.w
    mov r12.zw, r11.yyyw
    mul r16.xyzw, r12.xzxw, cb6[12].zwzw
    mad r7.xy, r5.zwzz, cb6[12].zwzz, r16.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r17.w, r4.w, r3.w
    mul r17.xyzw, r10.zxzx, -r13.yyww
    mad r7.xy, r5.zwzz, cb6[12].zwzz, r18.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r17.x, r4.w, r3.w
    mul r18.xyzw, r11.xwzw, cb6[12].zwzw
    mad r7.xy, r5.zwzz, cb6[12].zwzz, r18.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r17.y, r4.w, r3.w
    mul r10.xyzw, r10.ywyw, r13.yyww
    mad r7.xy, r5.zwzz, cb6[12].zwzz, r18.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r10.x, r4.w, r3.w
    mad r7.xy, r5.zwzz, cb6[12].zwzz, r16.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r10.y, r4.w, r3.w
    mov r15.x, r14.w
    mad r7.xy, r15.xyxx, cb6[12].zwzz, r8.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r17.z, r4.w, r3.w
    mov r15.zw, r11.xxxz
    mul r11.xyzw, r15.zywy, cb6[12].zwzw
    mad r7.xy, r5.zwzz, cb6[12].zwzz, r11.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r17.w, r4.w, r3.w
    mad r7.xy, r5.zwzz, cb6[12].zwzz, r11.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r10.z, r4.w, r3.w
    mov r15.x, r12.x
    mad r7.xy, r15.xyxx, cb6[12].zwzz, r8.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r10.w, r4.w, r3.w
    mul r2.w, r3.w, l(0.000370)
    mad r5.xyz, r9.xyzx, l(2.000000, 2.000000, 1.000000, 0.000000), l(-1.000000, -1.000000, -0.000000, 0.000000)
    add r5.xyz, |r5.xyzx|, l(-0.800000, -0.800000, -0.800000, 0.000000)
    mul_sat r5.xyz, r5.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000)
    add r5.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    min r4.w, r5.y, r5.x
    min r4.w, r5.z, r4.w
    ne r5.x, r4.w, l(1.000000)
    if_nz r5.x
      mad r5.xy, r6.xyxx, cb6[12].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
      round_ni r5.zw, r5.xxxy
      add r5.xy, -r5.zwzz, r5.xyxx
      add r5.zw, r5.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
      mul r6.xy, r5.zwzz, cb6[12].zwzz
      mad r7.xy, -r5.yxyy, l(3.000000, 3.000000, 0.000000, 0.000000), l(4.000000, 4.000000, 0.000000, 0.000000)
      mad r7.zw, r5.xxxy, l(0.000000, 0.000000, 3.000000, 3.000000), l(0.000000, 0.000000, 1.000000, 1.000000)
      mad r8.xy, -r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
      div r8.xy, r8.xyxx, r7.yxyy
      add r8.zw, r5.xxxy, l(0.000000, 0.000000, 3.000000, 3.000000)
      div r5.xy, r5.xyxx, r7.zwzz
      add r9.xw, r8.xxxy, l(-2.000000, 0.000000, 0.000000, -2.000000)
      mul r9.yz, r8.wwzw, l(0.000000, 0.142857, 0.142857, 0.000000)
      add r8.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
      mul r5.x, r7.x, r7.y
      mul r10.xyzw, r9.xwzw, cb6[12].zwzw
      mad r11.xy, r5.zwzz, cb6[12].zwzz, r10.xyxx
      mov r11.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.y, r11.xyzx, t7.xxxx, s7, r6.z
      mul r10.xy, r7.xyxx, l(7.000000, 7.000000, 0.000000, 0.000000)
      mad r11.xy, r5.zwzz, cb6[12].zwzz, r10.zwzz
      mov r11.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r6.w, r11.xyzx, t7.xxxx, s7, r6.z
      mul r6.w, r6.w, r10.x
      mad r5.x, r5.x, r5.y, r6.w
      mul r7.xy, r7.xyxx, r7.zwzz
      mov r8.zw, r9.wwwy
      mul r11.xyzw, r8.xzxw, cb6[12].zwzw
      mad r12.xy, r5.zwzz, cb6[12].zwzz, r11.xyxx
      mov r12.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.y, r12.xyzx, t7.xxxx, s7, r6.z
      mad r5.x, r7.x, r5.y, r5.x
      mul r12.xyzw, r9.xyzy, cb6[12].zwzw
      mad r13.xy, r5.zwzz, cb6[12].zwzz, r12.xyxx
      mov r13.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.y, r13.xyzx, t7.xxxx, s7, r6.z
      mad r5.x, r10.y, r5.y, r5.x
      mad r10.xy, r5.zwzz, cb6[12].zwzz, r12.zwzz
      mov r10.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.y, r10.xyzx, t7.xxxx, s7, r6.z
      mad r5.x, r5.y, l(49.000000), r5.x
      mul r8.zw, r7.zzzw, l(0.000000, 0.000000, 7.000000, 7.000000)
      mad r10.xy, r5.zwzz, cb6[12].zwzz, r11.zwzz
      mov r10.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.y, r10.xyzx, t7.xxxx, s7, r6.z
      mad r5.x, r8.z, r5.y, r5.x
      mov r9.y, r8.y
      mul r9.xyzw, r9.xyzy, cb6[12].zwzw
      mad r10.xy, r5.zwzz, cb6[12].zwzz, r9.xyxx
      mov r10.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.y, r10.xyzx, t7.xxxx, s7, r6.z
      mad r5.x, r7.y, r5.y, r5.x
      mad r9.xy, r5.zwzz, cb6[12].zwzz, r9.zwzz
      mov r9.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.y, r9.xyzx, t7.xxxx, s7, r6.z
      mad r5.x, r8.w, r5.y, r5.x
      mul r5.y, r7.w, r7.z
      mad r7.xy, r8.xyxx, cb6[12].zwzz, r6.xyxx
      mov r7.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.z, r7.xyzx, t7.xxxx, s7, r6.z
      mad r5.x, r5.y, r5.z, r5.x
      mul r5.x, r5.x, l(0.006944)
      mad r3.w, r3.w, l(0.000370), -r5.x
      mad r2.w, r4.w, r3.w, r5.x
    endif 
  endif 
endif 
mul r1.yzw, r1.yyzw, r2.wwww
mul r1.x, r1.x, -cb5[13].y
exp r1.x, r1.x
mul r1.xyz, r1.xxxx, r1.yzwy
mul r1.xyz, r1.xyzx, cb5[3].wwww
mul r3.xyz, r0.xxxx, r3.xyzx
mad r0.yzw, r0.yyzw, r4.xxyz, r3.xxyz
mov r3.w, -r0.x
add r1.w, r3.w, l(1.000000)
mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
add r1.xyz, r2.xyzx, -cb0[8].xyzx
dp3 r1.x, r1.xyzx, r1.xyzx
sqrt r1.x, r1.x
mad_sat r1.x, r1.x, cb0[17].y, cb0[17].x
mul r1.y, r1.z, cb0[21].y
max r1.y, r1.y, l(-125.000000)
lt r1.z, l(0.000001), |r1.y|
exp r1.w, -r1.y
add r1.w, -r1.w, l(1.000000)
div r1.y, r1.w, r1.y
movc r1.y, r1.z, r1.y, l(1.000000)
mad r1.y, r1.y, cb0[21].x, cb0[17].w
mul r1.x, r1.y, r1.x
mul r1.x, r1.x, -cb0[17].z
exp r1.x, r1.x
mad r1.yzw, -v2.xxyz, r1.xxxx, v2.xxyz
mad r0.yzw, r0.yyzw, r1.xxxx, r1.yyzw
mul r3.xyz, r0.xxxx, r0.yzwy
mad r0.xyzw, v2.wwww, r3.xyzw, l(0.000000, 0.000000, 0.000000, 1.000000)
mul o0.xyz, r0.xyzx, cb0[2].zzzz
mov o0.w, r0.w
ret 
// Approximately 895 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4 _AmbientColorMultiplier;    // Offset:    0 Size:    16
//   float4 _AmbientOcclusionRanges_SunOcclusionFactor;// Offset:   16 Size:    16 [unused]
//   float4 _BloomAdaptationFactor;     // Offset:   32 Size:    16
//   float4 _CameraDirection_FOVDeg;    // Offset:   48 Size:    16 [unused]
//   float4 _CameraDistances;           // Offset:   64 Size:    16 [unused]
//   float4 _CameraNearPlaneSize;       // Offset:   80 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS;// Offset:   96 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS_Previous;// Offset:  112 Size:    16 [unused]
//   float4 _CameraPosition_DistanceScale;// Offset:  128 Size:    16
//   float4 _CameraPosition_DistanceScale_Previous;// Offset:  144 Size:    16 [unused]
//   float4x4 _CullingViewProjectionMatrix;// Offset:  160 Size:    64 [unused]
//   float4 _DepthScale;                // Offset:  224 Size:    16 [unused]
//   float4 _DepthTextureRcpSize;       // Offset:  240 Size:    16 [unused]
//   float4 _DepthTextureScaleOffset;   // Offset:  256 Size:    16 [unused]
//   float4 _FogParams;                 // Offset:  272 Size:    16
//   float4 _FogSHB;                    // Offset:  288 Size:    16 [unused]
//   float4 _FogSHG;                    // Offset:  304 Size:    16 [unused]
//   float4 _FogSHR;                    // Offset:  320 Size:    16 [unused]
//   float4 _HeightFogParams;           // Offset:  336 Size:    16
//   float4x4 _InvProjectionMatrix;     // Offset:  352 Size:    64
//   float4x4 _InvViewMatrix;           // Offset:  416 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  480 Size:    64 [unused]
//   float4 _TempSunDirection;          // Offset:  544 Size:    16 [unused]
//   float4x4 _ViewMatrix;              // Offset:  560 Size:    64 [unused]
//   float4 _ViewPoint_ShadowProjDepthMin;// Offset:  624 Size:    16 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:  640 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix; // Offset:  704 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix_Previous;// Offset:  768 Size:    64 [unused]
//   float4 _ViewportSize;              // Offset:  832 Size:    16
//   float2 _MotionVectorOffsets;       // Offset:  848 Size:     8 [unused]
//   float3 _CameraRight;               // Offset:  864 Size:    12 [unused]
//   float3 _CameraUp;                  // Offset:  880 Size:    12 [unused]
//   float3 _EnvironmentMapColorOffset; // Offset:  896 Size:    12 [unused]
//   float3 _EnvironmentMapColorScale;  // Offset:  912 Size:    12 [unused]
//
// }
//
// cbuffer CGlobalShaderParameterProvider
// {
//
//   float4 _BurnColor;                 // Offset:    0 Size:    16 [unused]
//   float4 _BurnParams;                // Offset:   16 Size:    16 [unused]
//   float4 _BurnParams2;               // Offset:   32 Size:    16 [unused]
//   float4 _BurnParams3;               // Offset:   48 Size:    16 [unused]
//   float4 _CascadedShadowScaleOffsetTile0;// Offset:   64 Size:    16 [unused]
//   float4 _CascadedShadowScaleOffsetTile1;// Offset:   80 Size:    16 [unused]
//   float4 _GlobalScalars;             // Offset:   96 Size:    16 [unused]
//   float4 _SSS_MiscParams;            // Offset:  112 Size:    16 [unused]
//   float4 _WindSimParamsX;            // Offset:  128 Size:    16 [unused]
//   float4 _WindSimParamsY;            // Offset:  144 Size:    16 [unused]
//   float2 _RangeDepthCompression;     // Offset:  160 Size:     8 [unused]
//   float3 _SSS_Color;                 // Offset:  176 Size:    12 [unused]
//   int _BRDFHighQuality;              // Offset:  188 Size:     4
//
// }
//
// cbuffer CWaterReflectionParameterProvider
// {
//
//   float4 _WaterReflectionColor;      // Offset:    0 Size:    16
//   float4 _WaterReflectionPlane;      // Offset:   16 Size:    16 [unused]
//   float4 _WaterReflectionTexCoordRange;// Offset:   32 Size:    16 [unused]
//   float4x4 _WaterReflectionTransform;// Offset:   48 Size:    64
//   float _WaterLevelAdjustment;       // Offset:  112 Size:     4 [unused]
//
// }
//
// cbuffer CWaterParameterProvider
// {
//
//   float4 _BorderAlphaMask;           // Offset:    0 Size:    16 [unused]
//   float _ReflectionInvSquareFadeDistance;// Offset:   16 Size:     4
//   float _ReflectionSquareFadeDistance;// Offset:   20 Size:     4
//   float _SunLightScale;              // Offset:   24 Size:     4
//   bool _DisableThirdNormalUVs;       // Offset:   28 Size:     4
//
// }
//
// cbuffer CWaterWaveParameterProvider
// {
//
//   float4 _WaterWave_CameraCenter_FrontVector;// Offset:    0 Size:    16
//   float4 _WaterWave_CameraRightVector_;// Offset:   16 Size:    16
//   float4 _WaterWave_CameraTanFOVx_2_Near_Far;// Offset:   32 Size:    16
//   bool _WaterWave_Enabled;           // Offset:   48 Size:     4
//
// }
//
// cbuffer Water
// {
//
//   float _NormalOffsetScale;          // Offset:    0 Size:     4
//   float2 _Tiling1;                   // Offset:    4 Size:     8 [unused]
//   float2 _Tiling2;                   // Offset:   16 Size:     8 [unused]
//   float2 _Dir1;                      // Offset:   24 Size:     8 [unused]
//   float2 _Dir2;                      // Offset:   32 Size:     8 [unused]
//   float2 _Tiling3;                   // Offset:   40 Size:     8 [unused]
//   float2 _Dir3;                      // Offset:   48 Size:     8 [unused]
//   float _NormalTexture3Blend;        // Offset:   56 Size:     4
//   float _CausticsIntensity;          // Offset:   60 Size:     4
//   float _CausticsScale;              // Offset:   64 Size:     4
//   float _ReflectionNormalOffsetScale;// Offset:   68 Size:     4
//   float _ReflectionColorOffset;      // Offset:   72 Size:     4
//   float _ReflectionColorScale;       // Offset:   76 Size:     4
//   float _ReflectionAnisotropicDistanceScale;// Offset:   80 Size:     4
//   float _ReflectionAnisotropicDistanceOffset;// Offset:   84 Size:     4
//   float2 _DiffuseTiling;             // Offset:   88 Size:     8 [unused]
//   float _DiffuseSpeedFactor;         // Offset:   96 Size:     4 [unused]
//   float4 _WaterColor;                // Offset:  112 Size:    16
//   float4 _UnderwaterColor;           // Offset:  128 Size:    16 [unused]
//   float4 _Specular;                  // Offset:  144 Size:    16
//   float2 _BaseTiling;                // Offset:  160 Size:     8 [unused]
//   float4 _RefractionWaveInfo;        // Offset:  176 Size:    16 [unused]
//   float _NormalModifier;             // Offset:  192 Size:     4
//   float4 _Extinctions;               // Offset:  208 Size:    16
//   float4 _MaterialPickingID;         // Offset:  224 Size:    16 [unused]
//
// }
//
// cbuffer CNewLightingDataProvider
// {
//
//   float4 _CSMSlice0_0;               // Offset:    0 Size:    16
//   float4 _CSMSlice0_1;               // Offset:   16 Size:    16
//   float4 _CSMSlice0_2;               // Offset:   32 Size:    16
//   float4 _CSMSlice1_0;               // Offset:   48 Size:    16
//   float4 _CSMSlice1_1;               // Offset:   64 Size:    16
//   float4 _CSMSlice1_2;               // Offset:   80 Size:    16
//   float4 _CSMSlice2_0;               // Offset:   96 Size:    16
//   float4 _CSMSlice2_1;               // Offset:  112 Size:    16
//   float4 _CSMSlice2_2;               // Offset:  128 Size:    16
//   float4 _CSMSliceFade;              // Offset:  144 Size:    16 [unused]
//   float4 _LightUpWS_RcpSquaredLightRadius;// Offset:  160 Size:    16 [unused]
//   float4 _PointAttenuation_SpotFactors;// Offset:  176 Size:    16 [unused]
//   float4 _ShadowMapSize;             // Offset:  192 Size:    16
//   float4x4 _ShadowProjectionMatrix;  // Offset:  208 Size:    64 [unused]
//   float4x4 _ShadowRotProjectionMatrix;// Offset:  272 Size:    64 [unused]
//   float3 _LightColor;                // Offset:  336 Size:    12
//   float3 _LightColorUpNormal;        // Offset:  352 Size:    12
//   float3 _LightDirectionWS;          // Offset:  368 Size:    12 [unused]
//   float3 _LightPositionWS;           // Offset:  384 Size:    12 [unused]
//   float3 _LightRightWS;              // Offset:  400 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// DepthVPSampler__SampObj___s       sampler      NA          NA    0        1
// EnvironmentMapTexture__SampObj___s    sampler      NA          NA    1        1
// WaterWaveTexture__SampObj___s     sampler      NA          NA    2        1
// NormalTexture__SampObj___s        sampler      NA          NA    3        1
// NormalTexture3__SampObj___s       sampler      NA          NA    4        1
// CausticsTexture__SampObj___s      sampler      NA          NA    5        1
// DiffuseTexture__SampObj___s       sampler      NA          NA    6        1
// ShadowCmpSampler_s              sampler_c      NA          NA    7        1
// ReflectionRealTexture__SampObj___s    sampler      NA          NA    8        1
// DepthVPSampler__TexObj__          texture  float4          2d    0        1
// EnvironmentMapTexture__TexObj__    texture  float4        cube    1        1
// WaterWaveTexture__TexObj__        texture  float4          2d    2        1
// NormalTexture__TexObj__           texture  float4          2d    3        1
// NormalTexture3__TexObj__          texture  float4          2d    4        1
// CausticsTexture__TexObj__         texture  float4          2d    5        1
// DiffuseTexture__TexObj__          texture  float4          2d    6        1
// ShadowCmpSampler_TextureObject    texture  float4     2darray    7        1
// ReflectionRealTexture__TexObj__    texture  float4          2d    8        1
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// CGlobalShaderParameterProvider    cbuffer      NA          NA    1        1
// CWaterReflectionParameterProvider    cbuffer      NA          NA    2        1
// CWaterParameterProvider           cbuffer      NA          NA    3        1
// CWaterWaveParameterProvider       cbuffer      NA          NA    4        1
// Water                             cbuffer      NA          NA    5        1
// CNewLightingDataProvider          cbuffer      NA          NA    6        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyz         3     NONE   float   xyz 
// TEXCOORD                 3   xyz         4     NONE   float   xyz 
// TEXCOORD                 4   xyz         5     NONE   float   xyz 
// TEXCOORD                 5   xyz         6     NONE   float   xyz 
// TEXCOORD                 6   xyz         7     NONE   float   xyz 
// TEXCOORD                 7   xyz         8     NONE   float   xyz 
// TEXCOORD                 8   xyzw        9     NONE   float   xyzw
// SV_IsFrontFace           0   x          10    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[53], immediateIndexed
dcl_constantbuffer cb1[12], immediateIndexed
dcl_constantbuffer cb2[7], immediateIndexed
dcl_constantbuffer cb3[2], immediateIndexed
dcl_constantbuffer cb4[4], immediateIndexed
dcl_constantbuffer cb5[14], immediateIndexed
dcl_constantbuffer cb6[23], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_sampler s4, mode_default
dcl_sampler s5, mode_default
dcl_sampler s6, mode_default
dcl_sampler s7, mode_comparison
dcl_sampler s8, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texturecube (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2darray (float,float,float,float) t7
dcl_resource_texture2d (float,float,float,float) t8
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xyz
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_input_ps linear v8.xyz
dcl_input_ps linear v9.xyzw
dcl_output o0.xyzw
dcl_temps 22
dp3 r0.x, v3.xyzx, v3.xyzx
sqrt r0.x, r0.x
add r0.yzw, -v4.xxyz, cb0[8].xxyz
dp3 r1.x, r0.yzwy, r0.yzwy
rsq r1.x, r1.x
mul r0.yzw, r0.yyzw, r1.xxxx
movc r1.x, cb4[3].x, l(1), l(0)
if_nz r1.x
  add r1.xy, v4.xyxx, -cb4[0].xyxx
  dp2 r1.z, cb4[0].zwzz, r1.xyxx
  dp2 r1.x, cb4[1].xyxx, r1.xyxx
  mul r1.y, cb4[2].z, cb4[2].y
  div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
  mad r1.w, r1.y, r1.w, -cb4[2].z
  add r2.x, -cb4[2].z, cb4[2].y
  div r3.y, r1.w, r2.x
  mul r1.z, r1.z, cb4[2].x
  div r1.x, r1.x, r1.z
  mad r3.x, r1.x, l(0.500000), l(0.500000)
  sample_indexable(texture2d)(float,float,float,float) r1.x, r3.xyxx, t2.xyzw, s2
  mul r1.x, r1.x, l(0.200000)
  add r1.z, v4.z, -cb0[8].z
  div r1.x, r1.x, r1.z
  mul r1.x, r0.x, r1.x
  max r1.x, r1.x, l(-2.000000)
  min r1.x, r1.x, l(2.000000)
  mad r3.xyz, r0.yzwy, -r1.xxxx, v4.xyzx
  add r1.x, r0.x, r1.x
  div r1.x, r1.x, r0.x
  mul r1.x, r1.x, v3.z
  mul r4.x, r0.x, l(0.010000)
  add r1.zw, r3.xxxy, -cb4[0].xxxy
  dp2 r1.z, cb4[0].zwzz, r1.zwzz
  div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
  mad r1.z, r1.y, r1.z, -cb4[2].z
  div r1.z, r1.z, r2.x
  mov r5.x, -r4.x
  mov r5.y, l(0)
  add r2.yz, r3.xxyx, r5.xxyx
  add r2.yz, r2.yyzy, -cb4[0].xxyx
  dp2 r1.w, cb4[0].zwzz, r2.yzyy
  dp2 r2.y, cb4[1].xyxx, r2.yzyy
  div r2.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  mad r2.z, r1.y, r2.z, -cb4[2].z
  div r5.y, r2.z, r2.x
  mul r1.w, r1.w, cb4[2].x
  div r1.w, r2.y, r1.w
  mad r5.x, r1.w, l(0.500000), l(0.500000)
  mov r4.y, l(0)
  add r6.xyzw, r3.xyxy, r4.xyyx
  add r6.xyzw, r6.xyzw, -cb4[0].xyxy
  dp2 r1.w, cb4[0].zwzz, r6.xyxx
  dp2 r2.y, cb4[1].xyxx, r6.xyxx
  div r2.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  mad r2.z, r1.y, r2.z, -cb4[2].z
  div r6.y, r2.z, r2.x
  mul r1.w, r1.w, cb4[2].x
  div r1.w, r2.y, r1.w
  mad r6.x, r1.w, l(0.500000), l(0.500000)
  mov r4.z, -r4.x
  add r2.yz, r3.xxyx, r4.yyzy
  add r2.yz, r2.yyzy, -cb4[0].xxyx
  dp2 r1.w, cb4[0].zwzz, r2.yzyy
  dp2 r2.y, cb4[1].xyxx, r2.yzyy
  div r2.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  mad r2.z, r1.y, r2.z, -cb4[2].z
  div r7.y, r2.z, r2.x
  mul r1.w, r1.w, cb4[2].x
  div r1.w, r2.y, r1.w
  mad r7.x, r1.w, l(0.500000), l(0.500000)
  dp2 r1.w, cb4[0].zwzz, r6.zwzz
  dp2 r2.y, cb4[1].xyxx, r6.zwzz
  div r2.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  mad r1.y, r1.y, r2.z, -cb4[2].z
  div r8.y, r1.y, r2.x
  mul r1.y, r1.w, cb4[2].x
  div r1.y, r2.y, r1.y
  mad r8.x, r1.y, l(0.500000), l(0.500000)
  sample_indexable(texture2d)(float,float,float,float) r1.y, r5.xyxx, t2.yxzw, s2
  sample_indexable(texture2d)(float,float,float,float) r1.w, r6.xyxx, t2.yzwx, s2
  sample_indexable(texture2d)(float,float,float,float) r2.x, r7.xyxx, t2.xyzw, s2
  sample_indexable(texture2d)(float,float,float,float) r2.y, r8.xyxx, t2.yxzw, s2
  add r5.x, -r1.y, r1.w
  add r5.y, -r2.x, r2.y
  div r1.yw, r5.xxxy, r4.xxxx
  mov r2.xy, r3.xyxx
else 
  mov r2.xy, v4.xyxx
  mov r1.x, v3.z
  mov r1.yzw, l(0,0,0,0)
  mov r3.z, v4.z
endif 
sample_indexable(texture2d)(float,float,float,float) r4.xy, v1.yxyy, t3.ywxz, s3
mad r4.xy, r4.xyxx, l(2.007874, 2.007874, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r4.xz, r4.xxyx, cb5[12].xxxx
dp2 r2.w, r4.xzxx, r4.xzxx
min r2.w, r2.w, l(1.000000)
mad r2.w, r2.w, l(-0.999000), l(1.000000)
sqrt r4.y, r2.w
sample_indexable(texture2d)(float,float,float,float) r5.xy, v1.wzww, t3.ywxz, s3
mad r5.xy, r5.xyxx, l(2.007874, 2.007874, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r5.xz, r5.xxyx, cb5[12].xxxx
dp2 r2.w, r5.xzxx, r5.xzxx
min r2.w, r2.w, l(1.000000)
mad r2.w, r2.w, l(-0.999000), l(1.000000)
sqrt r5.y, r2.w
add r4.xyz, r4.xyzx, r5.xyzx
dp3 r2.w, r4.xyzx, r4.xyzx
rsq r2.w, r2.w
mul r5.xyz, r2.wwww, r4.xyzx
sample_indexable(texture2d)(float,float,float,float) r6.xy, v9.yxyy, t4.ywxz, s4
mad r6.xy, r6.xyxx, l(2.007874, 2.007874, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r6.xz, r6.xxyx, cb5[12].xxxx
dp2 r2.w, r6.xzxx, r6.xzxx
min r2.w, r2.w, l(1.000000)
mad r2.w, r2.w, l(-0.999000), l(1.000000)
sqrt r6.y, r2.w
add r6.xyz, -r4.xyzx, r6.xyzx
mad r4.xyz, cb5[3].zzzz, r6.xyzx, r4.xyzx
dp3 r2.w, r4.xyzx, r4.xyzx
rsq r2.w, r2.w
mul r4.xyz, r2.wwww, r4.xyzx
movc r4.xyz, cb3[1].wwww, r5.xyzx, r4.xyzx
add r1.z, r1.z, l(-0.900000)
mul_sat r1.z, r1.z, l(10.000000)
mad r1.z, r1.z, l(-0.050000), l(0.050000)
mul r5.xz, r1.zzzz, r1.yywy
mov r5.y, l(0)
add r1.yzw, r4.xxyz, r5.xxyz
dp3 r2.w, r1.yzwy, r1.yzwy
rsq r2.w, r2.w
mul r1.yzw, r1.yyzw, r2.wwww
movc r1.yzw, cb4[3].xxxx, r1.yyzw, r4.xxyz
mad r4.xy, r1.ywyy, cb5[0].xxxx, v9.zwzz
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.xyxx, t6.xyzw, s6
mad r3.xy, r1.ywyy, cb5[0].xxxx, r2.xyxx
dp3 r2.w, r1.ywzy, r0.yzwy
mov_sat r5.x, r2.w
add r5.y, -r5.x, l(1.000000)
mul r5.z, r5.y, r5.y
mul r5.z, r5.z, r5.z
mul r5.y, r5.y, r5.z
mul r5.y, r5.y, l(0.980000)
mul r5.z, cb5[9].x, cb5[9].x
mad r5.z, r5.z, l(0.830000), l(0.170000)
mad r5.y, r5.y, r5.z, l(0.020000)
mul r5.w, r5.x, l(-8.656170)
exp r5.w, r5.w
mul r5.z, r5.w, r5.z
mad r5.z, r5.z, l(0.980000), l(0.020000)
movc r5.y, cb1[11].w, r5.y, r5.z
mul r6.xyz, cb3[1].zzzz, cb6[21].xyzx
dp3 r5.z, v8.xyzx, v8.xyzx
rsq r5.z, r5.z
mul r7.xyz, r5.zzzz, v8.xyzx
mad r8.xyz, v8.xzyx, r5.zzzz, -v7.xzyx
dp3 r5.z, r8.xyzx, r8.xyzx
rsq r5.z, r5.z
mul r8.xyz, r5.zzzz, r8.xyzx
dp3 r5.z, r8.xzyx, r7.xyzx
add r5.w, -r5.z, l(1.000000)
mul r6.w, r5.w, r5.w
mul r6.w, r6.w, r6.w
mul r5.w, r5.w, r6.w
mad r5.w, r5.w, l(0.980000), l(0.020000)
mul r5.z, r5.z, l(-8.656170)
exp r5.z, r5.z
mad r5.z, r5.z, l(0.980000), l(0.020000)
movc r5.z, cb1[11].w, r5.w, r5.z
mov r3.w, l(1.000000)
dp4 r7.x, r3.xyzw, cb6[6].xyzw
dp4 r7.y, r3.xyzw, cb6[7].xyzw
dp4 r7.w, r3.xyzw, cb6[8].xyzw
dp4 r9.x, r3.xyzw, cb6[3].xyzw
dp4 r9.y, r3.xyzw, cb6[4].xyzw
dp4 r9.w, r3.xyzw, cb6[5].xyzw
ge r10.xyz, r9.xywx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r10.xyz, r10.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
ge r11.xyz, l(1.000000, 1.000000, 1.000000, 0.000000), r9.xywx
and r11.xyz, r11.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
mul r10.xyz, r10.xyzx, r11.xyzx
dp3 r5.w, r10.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
ge r5.w, r5.w, l(3.000000)
mov r9.z, l(1.000000)
mov r7.z, l(2.000000)
movc r10.xyzw, r5.wwww, r9.xyzw, r7.xyzw
dp4 r11.x, r3.xyzw, cb6[0].xyzw
dp4 r11.y, r3.xyzw, cb6[1].xyzw
dp4 r11.w, r3.xyzw, cb6[2].xyzw
ge r3.xyw, r11.xyxw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r3.xyw, r3.xyxw, l(0x3f800000, 0x3f800000, 0, 0x3f800000)
ge r12.xyz, l(1.000000, 1.000000, 1.000000, 0.000000), r11.xywx
and r12.xyz, r12.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
mul r3.xyw, r3.xyxw, r12.xyxz
dp3 r3.x, r3.xywx, l(1.000000, 1.000000, 1.000000, 0.000000)
ge r3.x, r3.x, l(3.000000)
mov r11.z, l(0)
movc r10.xyzw, r3.xxxx, r11.xyzw, r10.xyzw
eq r3.x, r10.z, l(2.000000)
if_nz r3.x
  mad r3.xyw, r7.xyxw, l(2.000000, 2.000000, 0.000000, 1.000000), l(-1.000000, -1.000000, 0.000000, -0.000000)
  add r3.xyw, |r3.xyxw|, l(-0.800000, -0.800000, 0.000000, -0.800000)
  mul_sat r3.xyw, r3.xyxw, l(5.000000, 5.000000, 0.000000, 5.000000)
  add r3.xyw, -r3.xyxw, l(1.000000, 1.000000, 0.000000, 1.000000)
  min r3.x, r3.x, r3.y
  min r3.x, r3.x, r3.w
  mad r3.yw, r10.xxxy, cb6[12].xxxy, l(0.000000, 0.500000, 0.000000, 0.500000)
  round_ni r7.xyzw, r3.ywyw
  add r3.yw, r3.yyyw, -r7.zzzw
  add r7.xyzw, r7.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
  mad r12.xy, r3.wyww, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
  mad r12.zw, r3.yyyw, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, 1.000000, 1.000000)
  add r13.xy, -r3.ywyy, l(2.000000, 2.000000, 0.000000, 0.000000)
  div r13.xy, r13.xyxx, r12.yxyy
  div r3.yw, r3.yyyw, r12.zzzw
  add r13.xy, r13.xyxx, l(-1.000000, -1.000000, 0.000000, 0.000000)
  add r13.zw, r3.yyyw, l(0.000000, 0.000000, 1.000000, 1.000000)
  mul r3.y, r12.x, r12.y
  mul r7.xyzw, r7.xyzw, cb6[12].zwzw
  mad r14.xyzw, cb6[12].zwzw, r13.zyxy, r7.zwzw
  mov r15.xy, r14.zwzz
  mov r15.z, l(2.000000)
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r15.xyzx, t7.xxxx, s7, r10.w
  mul r12.xy, r12.xyxx, r12.zwzz
  mov r14.z, l(2.000000)
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.w, r14.xyzx, t7.xxxx, s7, r10.w
  mul r5.w, r5.w, r12.x
  mad r3.y, r3.y, r3.w, r5.w
  mad r7.xyzw, cb6[12].zwzw, r13.zwxw, r7.zwxy
  mov r13.xy, r7.zwzz
  mov r13.z, l(2.000000)
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r13.xyzx, t7.xxxx, s7, r10.w
  mad r3.y, r12.y, r3.w, r3.y
  mul r3.w, r12.w, r12.z
  mov r7.z, l(2.000000)
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.w, r7.xyzx, t7.xxxx, s7, r10.w
  mad r3.y, r3.w, r5.w, r3.y
  mad r3.y, r3.y, l(0.062500), l(-1.000000)
  mad r3.x, r3.x, r3.y, l(1.000000)
else 
  eq r3.y, r10.z, l(1.000000)
  if_nz r3.y
    mad r3.yw, r10.xxxy, cb6[12].xxxy, l(0.000000, 0.500000, 0.000000, 0.500000)
    round_ni r7.xy, r3.ywyy
    add r3.yw, r3.yyyw, -r7.xxxy
    add r7.xy, r7.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    mul r7.xy, r7.xyxx, cb6[12].zwzz
    mad r12.xyzw, r3.wyyw, l(-3.000000, -3.000000, 3.000000, 3.000000), l(4.000000, 4.000000, 1.000000, 1.000000)
    mad r7.zw, r3.yyyw, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
    div r7.zw, r7.zzzw, r12.yyyx
    add r13.xy, r3.wyww, l(3.000000, 3.000000, 0.000000, 0.000000)
    div r3.yw, r3.yyyw, r12.zzzw
    add r14.xy, r7.zwzz, l(-2.000000, -2.000000, 0.000000, 0.000000)
    mul r14.zw, r13.yyyx, l(0.000000, 0.000000, 0.142857, 0.142857)
    add r13.xy, r3.ywyy, l(2.000000, 2.000000, 0.000000, 0.000000)
    mul r15.xyzw, r12.xxyw, r12.yzwz
    mad r16.xyzw, cb6[12].zwzw, r14.zyxy, r7.xyxy
    mov r17.xy, r16.zwzz
    mov r17.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.y, r17.xyzx, t7.xxxx, s7, r10.w
    mul r12.xyzw, r12.xyzw, l(7.000000, 7.000000, 7.000000, 7.000000)
    mov r16.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r16.xyzx, t7.xxxx, s7, r10.w
    mul r3.w, r3.w, r12.x
    mad r3.y, r15.x, r3.y, r3.w
    mov r13.zw, r14.yyyw
    mad r16.xyzw, cb6[12].zwzw, r13.xwxz, r7.xyxy
    mov r17.xy, r16.zwzz
    mov r17.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r17.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r15.y, r3.w, r3.y
    mad r17.xyzw, cb6[12].zwzw, r14.zwxw, r7.xyxy
    mov r18.xy, r17.zwzz
    mov r18.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r18.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r12.y, r3.w, r3.y
    mov r17.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r17.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r3.w, l(49.000000), r3.y
    mov r16.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r16.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r12.z, r3.w, r3.y
    mov r14.yw, r13.yyyy
    mad r14.xyzw, cb6[12].zwzw, r14.zwxy, r7.xyxy
    mov r12.xy, r14.zwzz
    mov r12.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r12.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r15.z, r3.w, r3.y
    mov r14.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r14.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r12.w, r3.w, r3.y
    mad r7.xy, r13.xyxx, cb6[12].zwzz, r7.xyxx
    mov r7.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r7.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r15.w, r3.w, r3.y
    mul r3.x, r3.y, l(0.006944)
  else 
    mad r3.yw, r10.xxxy, cb6[12].xxxy, l(0.000000, 0.500000, 0.000000, 0.500000)
    round_ni r7.xy, r3.ywyy
    add r3.yw, r3.yyyw, -r7.xxxy
    add r7.xy, r7.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    mul r7.xy, r7.xyxx, cb6[12].zwzz
    mad r12.xyzw, r3.yyyy, l(11.000000, 11.000000, 5.000000, 5.000000), l(-28.000000, 17.000000, -6.000000, 1.000000)
    mad r13.xyz, r3.yyyy, l(4.000000, 4.000000, 7.000000, 0.000000), l(-16.000000, -5.000000, 5.000000, 0.000000)
    div r13.xyz, r13.xyzx, r12.xzyx
    add r13.xyz, r13.xyzx, l(-1.000000, -3.000000, 1.000000, 0.000000)
    div r3.y, r3.y, r12.w
    add r14.x, r3.y, l(3.000000)
    mad r15.xyzw, r3.wwww, l(11.000000, 11.000000, 5.000000, 5.000000), l(-28.000000, 17.000000, -6.000000, 1.000000)
    mad r16.xyz, r3.wwww, l(4.000000, 4.000000, 7.000000, 0.000000), l(-5.000000, -16.000000, 5.000000, 0.000000)
    div r16.xyz, r16.xyzx, r15.zxyz
    add r16.xyz, r16.xyzx, l(-3.000000, -1.000000, 1.000000, 0.000000)
    div r3.y, r3.w, r15.w
    add r17.y, r3.y, l(3.000000)
    mul r18.xyzw, r12.zxzx, r15.zzxx
    mov r13.w, r16.x
    mad r19.xyzw, cb6[12].zwzw, r13.ywxw, r7.xyxy
    mov r10.xy, r19.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.y, r10.xyzx, t7.xxxx, s7, r10.w
    mov r10.xy, r19.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mul r3.w, r3.w, r18.y
    mad r3.y, r18.x, r3.y, r3.w
    mul r19.xyzw, -r12.ywyw, r15.zzxx
    mad r10.xy, r13.zwzz, cb6[12].zwzz, r7.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r19.x, r3.w, r3.y
    mov r14.y, r13.w
    mad r10.xy, r14.xyxx, cb6[12].zwzz, r7.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r19.y, r3.w, r3.y
    mov r16.w, r13.y
    mad r20.xyzw, cb6[12].zwzw, r16.wywz, r7.xyxy
    mov r10.xy, r20.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r18.z, r3.w, r3.y
    mov r13.y, r16.y
    mad r21.xyzw, cb6[12].zwzw, r13.xyzy, r7.xyxy
    mov r10.xy, r21.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r18.w, r3.w, r3.y
    mov r10.xy, r21.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r19.z, r3.w, r3.y
    mov r14.zw, r16.yyyz
    mad r18.xyzw, cb6[12].zwzw, r14.xzxw, r7.xyxy
    mov r10.xy, r18.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r19.w, r3.w, r3.y
    mul r19.xyzw, r12.zxzx, -r15.yyww
    mov r10.xy, r20.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r19.x, r3.w, r3.y
    mov r13.w, r14.w
    mad r20.xyzw, cb6[12].zwzw, r13.xwzw, r7.xyxy
    mov r10.xy, r20.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r19.y, r3.w, r3.y
    mul r12.xyzw, r12.ywyw, r15.yyww
    mov r10.xy, r20.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r12.x, r3.w, r3.y
    mov r10.xy, r18.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r12.y, r3.w, r3.y
    mov r17.x, r16.w
    mad r10.xy, r17.xyxx, cb6[12].zwzz, r7.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r19.z, r3.w, r3.y
    mov r17.zw, r13.xxxz
    mad r13.xyzw, cb6[12].zwzw, r17.zywy, r7.xyxy
    mov r10.xy, r13.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r19.w, r3.w, r3.y
    mov r10.xy, r13.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r12.z, r3.w, r3.y
    mov r17.x, r14.x
    mad r10.xy, r17.xyxx, cb6[12].zwzz, r7.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r10.xyzx, t7.xxxx, s7, r10.w
    mad r3.y, r12.w, r3.w, r3.y
    mul r3.x, r3.y, l(0.000370)
    mad r7.xyz, r11.xywx, l(2.000000, 2.000000, 1.000000, 0.000000), l(-1.000000, -1.000000, -0.000000, 0.000000)
    add r7.xyz, |r7.xyzx|, l(-0.800000, -0.800000, -0.800000, 0.000000)
    mul_sat r7.xyz, r7.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000)
    add r7.xyz, -r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    min r3.w, r7.x, r7.y
    min r3.w, r3.w, r7.z
    ne r5.w, r3.w, l(1.000000)
    if_nz r5.w
      mad r7.xy, r9.xyxx, cb6[12].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
      round_ni r7.zw, r7.xxxy
      add r7.xy, -r7.zwzz, r7.xyxx
      add r7.zw, r7.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
      mul r7.zw, r7.zzzw, cb6[12].zzzw
      mad r10.xyzw, r7.yxxy, l(-3.000000, -3.000000, 3.000000, 3.000000), l(4.000000, 4.000000, 1.000000, 1.000000)
      mad r9.xy, r7.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
      div r9.xy, r9.xyxx, r10.yxyy
      add r11.xy, r7.yxyy, l(3.000000, 3.000000, 0.000000, 0.000000)
      div r7.xy, r7.xyxx, r10.zwzz
      add r12.xy, r9.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000)
      mul r12.zw, r11.yyyx, l(0.000000, 0.000000, 0.142857, 0.142857)
      add r11.xy, r7.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
      mul r13.xyzw, r10.xxyw, r10.yzwz
      mad r14.xyzw, cb6[12].zwzw, r12.zyxy, r7.zwzw
      mov r9.xy, r14.zwzz
      mov r9.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.w, r9.xyzx, t7.xxxx, s7, r9.w
      mul r10.xyzw, r10.xyzw, l(7.000000, 7.000000, 7.000000, 7.000000)
      mov r14.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r6.w, r14.xyzx, t7.xxxx, s7, r9.w
      mul r6.w, r10.x, r6.w
      mad r5.w, r13.x, r5.w, r6.w
      mov r11.zw, r12.yyyw
      mad r14.xyzw, cb6[12].zwzw, r11.xwxz, r7.zwzw
      mov r9.xy, r14.zwzz
      mov r9.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r6.w, r9.xyzx, t7.xxxx, s7, r9.w
      mad r5.w, r13.y, r6.w, r5.w
      mad r15.xyzw, cb6[12].zwzw, r12.zwxw, r7.zwzw
      mov r9.xy, r15.zwzz
      mov r9.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r6.w, r9.xyzx, t7.xxxx, s7, r9.w
      mad r5.w, r10.y, r6.w, r5.w
      mov r15.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r6.w, r15.xyzx, t7.xxxx, s7, r9.w
      mad r5.w, r6.w, l(49.000000), r5.w
      mov r14.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r6.w, r14.xyzx, t7.xxxx, s7, r9.w
      mad r5.w, r10.z, r6.w, r5.w
      mov r12.yw, r11.yyyy
      mad r12.xyzw, cb6[12].zwzw, r12.zwxy, r7.zwzw
      mov r9.xy, r12.zwzz
      mov r9.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r6.w, r9.xyzx, t7.xxxx, s7, r9.w
      mad r5.w, r13.z, r6.w, r5.w
      mov r12.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r6.w, r12.xyzx, t7.xxxx, s7, r9.w
      mad r5.w, r10.w, r6.w, r5.w
      mad r7.xy, r11.xyxx, cb6[12].zwzz, r7.zwzz
      mov r7.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r6.w, r7.xyzx, t7.xxxx, s7, r9.w
      mad r5.w, r13.w, r6.w, r5.w
      mul r5.w, r5.w, l(0.006944)
      mad r3.y, r3.y, l(0.000370), -r5.w
      mad r3.x, r3.w, r3.y, r5.w
    endif 
  endif 
endif 
mul r3.y, l(13.000000), cb5[9].x
mad r7.xy, cb5[9].xxxx, l(-0.255445, -6.000000, 0.000000, 0.000000), l(1.401520, 6.000000, 0.000000, 0.000000)
mad r3.w, r7.x, cb5[9].x, l(-1.946950)
mad r3.w, r3.w, cb5[9].x, l(0.816500)
exp r3.y, r3.y
movc r3.y, cb1[11].w, r3.w, r3.y
dp3_sat r3.w, -v7.xzyx, r1.yzwy
mul r5.w, r3.w, r3.w
mul r6.w, r3.y, r3.y
mad r7.x, -r3.y, r3.y, l(1.000000)
mad r5.w, r5.w, r7.x, r6.w
sqrt r5.w, r5.w
add r5.w, r3.w, r5.w
div r9.y, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
mul r5.w, r5.x, r5.x
mad r5.w, r5.w, r7.x, r6.w
sqrt r5.w, r5.w
add r5.x, r5.x, r5.w
div r9.x, l(1.000000, 1.000000, 1.000000, 1.000000), r5.x
movc r5.xw, cb1[11].wwww, r9.xxxy, l(1.000000,0,0,1.000000)
mul r5.x, r5.x, r5.w
dp3_sat r5.w, r8.xyzx, r1.yzwy
mad r6.w, r3.y, r3.y, l(-1.000000)
mul r7.x, r5.w, r5.w
mad r6.w, r7.x, r6.w, l(1.000000)
div r6.w, r3.y, r6.w
mul r6.w, r6.w, r6.w
mul r7.xzw, r6.wwww, r6.xxyz
log r5.w, r5.w
mul r5.w, r3.y, r5.w
exp r5.w, r5.w
mad r3.y, r3.y, l(0.125000), l(0.250000)
mul r3.y, r3.y, r5.w
mul r8.xyz, r3.yyyy, r6.xyzx
movc r7.xzw, cb1[11].wwww, r7.xxzw, r8.xxyz
mul r7.xzw, r3.wwww, r7.xxzw
mul r7.xzw, r5.xxxx, r7.xxzw
mul r7.xzw, r3.xxxx, r7.xxzw
mul r6.xyz, r6.xyzx, r3.wwww
mul r8.yz, v0.xxyx, cb0[52].zzwz
mad r3.yw, r8.yyyz, l(0.000000, 2.000000, 0.000000, 2.000000), l(0.000000, -1.000000, 0.000000, -1.000000)
mad r3.yw, -|r3.yyyw|, |r3.yyyw|, l(0.000000, 1.000000, 0.000000, 1.000000)
mul r5.xw, r1.yyyw, cb5[4].yyyy
mad r9.xy, r5.xwxx, r0.xxxx, v5.xyxx
mov r9.z, v5.z
mov r9.w, l(1.000000)
dp4 r10.x, r9.xyzw, cb2[3].xyzw
dp4 r10.y, r9.xyzw, cb2[4].xyzw
dp4 r5.x, r9.xyzw, cb2[6].xyzw
div r5.xw, r10.xxxy, r5.xxxx
mad r8.x, -v0.x, cb0[52].z, l(1.000000)
add r5.xw, -r8.xxxz, r5.xxxw
mad_sat r3.yw, r5.xxxw, r3.yyyw, r8.xxxz
add r8.xyz, r9.xyzx, -cb0[8].xyzx
dp3 r5.x, r8.xyzx, r8.xyzx
sqrt r5.x, r5.x
div r5.x, r5.x, |r8.z|
max r5.x, r5.x, l(1.000000)
min r5.x, r5.x, l(8.000000)
mad r5.x, r0.x, r5.x, -cb5[5].y
mad r5.x, r5.x, cb5[5].x, l(1.000000)
log r5.x, r5.x
sample_l_indexable(texture2d)(float,float,float,float) r8.xyz, r3.ywyy, t8.xyzw, s8, r5.x
mul r8.xyz, r8.xyzx, r8.xyzx
min r8.xyz, r8.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000)
mul r8.xyz, r8.xyzx, cb2[0].wwww
mov r2.z, r3.z
add r3.yzw, -r2.xxyz, cb0[8].xxyz
dp3 r3.y, r3.yzwy, r3.yzwy
mad_sat r3.y, r3.y, cb3[1].x, cb3[1].y
add r2.w, r2.w, r2.w
mad r9.xyz, r1.yzwy, -r2.wwww, r0.ywzy
mov r9.xyz, -r9.xyzx
sample_l_indexable(texturecube)(float,float,float,float) r9.xyz, r9.xyzx, t1.xyzw, s1, r7.y
mad r9.xyz, r9.xyzx, cb5[4].wwww, cb5[4].zzzz
mad r9.xyz, cb0[0].xyzx, r9.xyzx, -r8.xyzx
mad r3.yzw, r3.yyyy, r9.xxyz, r8.xxyz
div r8.xy, v6.xyxx, v6.zzzz
sample_l_indexable(texture2d)(float,float,float,float) r8.z, r8.xyxx, t0.yzxw, s0, l(0.000000)
mov r8.w, l(1.000000)
dp4 r1.z, r8.xyzw, cb0[24].xyzw
dp4 r2.w, r8.xyzw, cb0[25].xyzw
div r1.z, -r1.z, r2.w
mul r1.z, r0.x, -r1.z
div r1.x, r1.z, r1.x
add r0.x, -r0.x, r1.x
mad r8.xyz, -r0.yzwy, r1.xxxx, cb0[8].xyzx
mul r0.x, r0.x, -cb5[13].x
exp r0.x, r0.x
add r0.x, -r0.x, l(1.000000)
max r0.x, r0.x, l(0.000000)
mad r0.yzw, r6.xxyz, r3.xxxx, cb0[0].xxyz
add r1.x, -r5.y, l(1.000000)
mul r0.yzw, r0.yyzw, r1.xxxx
mul r5.xzw, r5.zzzz, r7.xxzw
mad r3.xyz, r3.yzwy, r5.yyyy, r5.xzwx
add r4.xyz, r4.xyzx, -cb5[7].xyzx
mad r4.xyz, r4.wwww, r4.xyzx, cb5[7].xyzx
add r1.x, r2.z, -r8.z
max r1.x, r1.x, l(0.000000)
mul r1.yz, r1.xxxx, r1.yywy
mad r1.yz, r1.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000), r8.xxyx
mul r1.yz, r1.yyzy, cb5[4].xxxx
sample_indexable(texture2d)(float,float,float,float) r1.yzw, r1.yzyy, t5.wxyz, s5
mul r1.yzw, r1.yyzw, cb6[22].xxyz
mov r8.w, l(1.000000)
dp4 r5.x, r8.xyzw, cb6[6].xyzw
dp4 r5.y, r8.xyzw, cb6[7].xyzw
dp4 r5.w, r8.xyzw, cb6[8].xyzw
dp4 r6.x, r8.xyzw, cb6[3].xyzw
dp4 r6.y, r8.xyzw, cb6[4].xyzw
dp4 r6.w, r8.xyzw, cb6[5].xyzw
ge r7.xyz, r6.xywx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r7.xyz, r7.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
ge r9.xyz, l(1.000000, 1.000000, 1.000000, 0.000000), r6.xywx
and r9.xyz, r9.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
mul r7.xyz, r7.xyzx, r9.xyzx
dp3 r2.w, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
ge r2.w, r2.w, l(3.000000)
mov r6.z, l(1.000000)
mov r5.z, l(2.000000)
movc r7.xyzw, r2.wwww, r6.xyzw, r5.xyzw
dp4 r9.x, r8.xyzw, cb6[0].xyzw
dp4 r9.y, r8.xyzw, cb6[1].xyzw
dp4 r9.w, r8.xyzw, cb6[2].xyzw
ge r8.xyz, r9.xywx, l(0.000000, 0.000000, 0.000000, 0.000000)
and r8.xyz, r8.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
ge r10.xyz, l(1.000000, 1.000000, 1.000000, 0.000000), r9.xywx
and r10.xyz, r10.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
mul r8.xyz, r8.xyzx, r10.xyzx
dp3 r2.w, r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
ge r2.w, r2.w, l(3.000000)
mov r9.z, l(0)
movc r7.xyzw, r2.wwww, r9.xyzw, r7.xyzw
eq r2.w, r7.z, l(2.000000)
if_nz r2.w
  mad r5.xyz, r5.xywx, l(2.000000, 2.000000, 1.000000, 0.000000), l(-1.000000, -1.000000, -0.000000, 0.000000)
  add r5.xyz, |r5.xyzx|, l(-0.800000, -0.800000, -0.800000, 0.000000)
  mul_sat r5.xyz, r5.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000)
  add r5.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  min r2.w, r5.x, r5.y
  min r2.w, r2.w, r5.z
  mad r5.xy, r7.xyxx, cb6[12].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  round_ni r8.xyzw, r5.xyxy
  add r5.xy, r5.xyxx, -r8.zwzz
  add r8.xyzw, r8.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
  mad r5.zw, r5.yyyx, l(0.000000, 0.000000, -2.000000, -2.000000), l(0.000000, 0.000000, 3.000000, 3.000000)
  mad r10.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(1.000000, 1.000000, 0.000000, 0.000000)
  add r10.zw, -r5.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000)
  div r10.zw, r10.zzzw, r5.wwwz
  div r5.xy, r5.xyxx, r10.xyxx
  add r11.xy, r10.zwzz, l(-1.000000, -1.000000, 0.000000, 0.000000)
  add r11.zw, r5.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
  mul r3.w, r5.z, r5.w
  mul r8.xyzw, r8.xyzw, cb6[12].zwzw
  mad r12.xyzw, cb6[12].zwzw, r11.zyxy, r8.zwzw
  mov r13.xy, r12.zwzz
  mov r13.z, l(2.000000)
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r13.xyzx, t7.xxxx, s7, r7.w
  mul r5.xy, r5.zwzz, r10.xyxx
  mov r12.z, l(2.000000)
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.z, r12.xyzx, t7.xxxx, s7, r7.w
  mul r5.x, r5.x, r5.z
  mad r3.w, r3.w, r4.w, r5.x
  mad r8.xyzw, cb6[12].zwzw, r11.zwxw, r8.zwxy
  mov r11.xy, r8.zwzz
  mov r11.z, l(2.000000)
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r11.xyzx, t7.xxxx, s7, r7.w
  mad r3.w, r5.y, r4.w, r3.w
  mul r4.w, r10.y, r10.x
  mov r8.z, l(2.000000)
  sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.x, r8.xyzx, t7.xxxx, s7, r7.w
  mad r3.w, r4.w, r5.x, r3.w
  mad r3.w, r3.w, l(0.062500), l(-1.000000)
  mad r2.w, r2.w, r3.w, l(1.000000)
else 
  eq r3.w, r7.z, l(1.000000)
  if_nz r3.w
    mad r5.xy, r7.xyxx, cb6[12].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    round_ni r5.zw, r5.xxxy
    add r5.xy, -r5.zwzz, r5.xyxx
    add r5.zw, r5.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
    mul r5.zw, r5.zzzw, cb6[12].zzzw
    mad r8.xyzw, r5.yxxy, l(-3.000000, -3.000000, 3.000000, 3.000000), l(4.000000, 4.000000, 1.000000, 1.000000)
    mad r10.xy, r5.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
    div r10.xy, r10.xyxx, r8.yxyy
    add r10.zw, r5.yyyx, l(0.000000, 0.000000, 3.000000, 3.000000)
    div r5.xy, r5.xyxx, r8.zwzz
    add r11.xy, r10.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000)
    mul r11.zw, r10.wwwz, l(0.000000, 0.000000, 0.142857, 0.142857)
    add r10.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
    mul r12.xyzw, r8.xxyw, r8.yzwz
    mad r13.xyzw, cb6[12].zwzw, r11.zyxy, r5.zwzw
    mov r14.xy, r13.zwzz
    mov r14.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r14.xyzx, t7.xxxx, s7, r7.w
    mul r8.xyzw, r8.xyzw, l(7.000000, 7.000000, 7.000000, 7.000000)
    mov r13.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r13.xyzx, t7.xxxx, s7, r7.w
    mul r4.w, r8.x, r4.w
    mad r3.w, r12.x, r3.w, r4.w
    mov r10.zw, r11.yyyw
    mad r13.xyzw, cb6[12].zwzw, r10.xwxz, r5.zwzw
    mov r14.xy, r13.zwzz
    mov r14.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r14.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r12.y, r4.w, r3.w
    mad r14.xyzw, cb6[12].zwzw, r11.zwxw, r5.zwzw
    mov r15.xy, r14.zwzz
    mov r15.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r15.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r8.y, r4.w, r3.w
    mov r14.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r14.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r4.w, l(49.000000), r3.w
    mov r13.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r13.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r8.z, r4.w, r3.w
    mov r11.yw, r10.yyyy
    mad r11.xyzw, cb6[12].zwzw, r11.zwxy, r5.zwzw
    mov r8.xy, r11.zwzz
    mov r8.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r8.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r12.z, r4.w, r3.w
    mov r11.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r11.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r8.w, r4.w, r3.w
    mad r5.xy, r10.xyxx, cb6[12].zwzz, r5.zwzz
    mov r5.z, l(1.000000)
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r5.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r12.w, r4.w, r3.w
    mul r2.w, r3.w, l(0.006944)
  else 
    mad r5.xy, r7.xyxx, cb6[12].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    round_ni r5.zw, r5.xxxy
    add r5.xy, -r5.zwzz, r5.xyxx
    add r5.zw, r5.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
    mul r5.zw, r5.zzzw, cb6[12].zzzw
    mad r8.xyzw, r5.xxxx, l(11.000000, 11.000000, 5.000000, 5.000000), l(-28.000000, 17.000000, -6.000000, 1.000000)
    mad r10.xyz, r5.xxxx, l(4.000000, 4.000000, 7.000000, 0.000000), l(-16.000000, -5.000000, 5.000000, 0.000000)
    div r10.xyz, r10.xyzx, r8.xzyx
    add r10.xyz, r10.xyzx, l(-1.000000, -3.000000, 1.000000, 0.000000)
    div r3.w, r5.x, r8.w
    add r11.x, r3.w, l(3.000000)
    mad r12.xyzw, r5.yyyy, l(11.000000, 11.000000, 5.000000, 5.000000), l(-28.000000, 17.000000, -6.000000, 1.000000)
    mad r13.xyz, r5.yyyy, l(4.000000, 4.000000, 7.000000, 0.000000), l(-5.000000, -16.000000, 5.000000, 0.000000)
    div r13.xyz, r13.xyzx, r12.zxyz
    add r13.xyz, r13.xyzx, l(-3.000000, -1.000000, 1.000000, 0.000000)
    div r3.w, r5.y, r12.w
    add r14.y, r3.w, l(3.000000)
    mul r15.xyzw, r8.zxzx, r12.zzxx
    mov r10.w, r13.x
    mad r16.xyzw, cb6[12].zwzw, r10.ywxw, r5.zwzw
    mov r7.xy, r16.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r3.w, r7.xyzx, t7.xxxx, s7, r7.w
    mov r7.xy, r16.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mul r4.w, r4.w, r15.y
    mad r3.w, r15.x, r3.w, r4.w
    mul r16.xyzw, -r8.ywyw, r12.zzxx
    mad r7.xy, r10.zwzz, cb6[12].zwzz, r5.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r16.x, r4.w, r3.w
    mov r11.y, r10.w
    mad r7.xy, r11.xyxx, cb6[12].zwzz, r5.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r16.y, r4.w, r3.w
    mov r13.w, r10.y
    mad r17.xyzw, cb6[12].zwzw, r13.wywz, r5.zwzw
    mov r7.xy, r17.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r15.z, r4.w, r3.w
    mov r10.y, r13.y
    mad r18.xyzw, cb6[12].zwzw, r10.xyzy, r5.zwzw
    mov r7.xy, r18.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r15.w, r4.w, r3.w
    mov r7.xy, r18.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r16.z, r4.w, r3.w
    mov r11.zw, r13.yyyz
    mad r15.xyzw, cb6[12].zwzw, r11.xzxw, r5.zwzw
    mov r7.xy, r15.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r16.w, r4.w, r3.w
    mul r16.xyzw, r8.zxzx, -r12.yyww
    mov r7.xy, r17.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r16.x, r4.w, r3.w
    mov r10.w, r11.w
    mad r17.xyzw, cb6[12].zwzw, r10.xwzw, r5.zwzw
    mov r7.xy, r17.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r16.y, r4.w, r3.w
    mul r8.xyzw, r8.ywyw, r12.yyww
    mov r7.xy, r17.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r8.x, r4.w, r3.w
    mov r7.xy, r15.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r8.y, r4.w, r3.w
    mov r14.x, r13.w
    mad r7.xy, r14.xyxx, cb6[12].zwzz, r5.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r16.z, r4.w, r3.w
    mov r14.zw, r10.xxxz
    mad r10.xyzw, cb6[12].zwzw, r14.zywy, r5.zwzw
    mov r7.xy, r10.xyxx
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r16.w, r4.w, r3.w
    mov r7.xy, r10.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r8.z, r4.w, r3.w
    mov r14.x, r11.x
    mad r7.xy, r14.xyxx, cb6[12].zwzz, r5.zwzz
    sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r4.w, r7.xyzx, t7.xxxx, s7, r7.w
    mad r3.w, r8.w, r4.w, r3.w
    mul r2.w, r3.w, l(0.000370)
    mad r5.xyz, r9.xywx, l(2.000000, 2.000000, 1.000000, 0.000000), l(-1.000000, -1.000000, -0.000000, 0.000000)
    add r5.xyz, |r5.xyzx|, l(-0.800000, -0.800000, -0.800000, 0.000000)
    mul_sat r5.xyz, r5.xyzx, l(5.000000, 5.000000, 5.000000, 0.000000)
    add r5.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    min r4.w, r5.x, r5.y
    min r4.w, r4.w, r5.z
    ne r5.x, r4.w, l(1.000000)
    if_nz r5.x
      mad r5.xy, r6.xyxx, cb6[12].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
      round_ni r5.zw, r5.xxxy
      add r5.xy, -r5.zwzz, r5.xyxx
      add r5.zw, r5.zzzw, l(0.000000, 0.000000, -0.500000, -0.500000)
      mul r5.zw, r5.zzzw, cb6[12].zzzw
      mad r7.xyzw, r5.yxxy, l(-3.000000, -3.000000, 3.000000, 3.000000), l(4.000000, 4.000000, 1.000000, 1.000000)
      mad r6.xy, r5.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
      div r6.xy, r6.xyxx, r7.yxyy
      add r8.xy, r5.yxyy, l(3.000000, 3.000000, 0.000000, 0.000000)
      div r5.xy, r5.xyxx, r7.zwzz
      add r9.xy, r6.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000)
      mul r9.zw, r8.yyyx, l(0.000000, 0.000000, 0.142857, 0.142857)
      add r8.xy, r5.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000)
      mul r10.xyzw, r7.xxyw, r7.yzwz
      mad r11.xyzw, cb6[12].zwzw, r9.zyxy, r5.zwzw
      mov r6.xy, r11.zwzz
      mov r6.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.x, r6.xyzx, t7.xxxx, s7, r6.w
      mul r7.xyzw, r7.xyzw, l(7.000000, 7.000000, 7.000000, 7.000000)
      mov r11.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.y, r11.xyzx, t7.xxxx, s7, r6.w
      mul r5.y, r5.y, r7.x
      mad r5.x, r10.x, r5.x, r5.y
      mov r8.zw, r9.yyyw
      mad r11.xyzw, cb6[12].zwzw, r8.xwxz, r5.zwzw
      mov r6.xy, r11.zwzz
      mov r6.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.y, r6.xyzx, t7.xxxx, s7, r6.w
      mad r5.x, r10.y, r5.y, r5.x
      mad r12.xyzw, cb6[12].zwzw, r9.zwxw, r5.zwzw
      mov r6.xy, r12.zwzz
      mov r6.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.y, r6.xyzx, t7.xxxx, s7, r6.w
      mad r5.x, r7.y, r5.y, r5.x
      mov r12.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.y, r12.xyzx, t7.xxxx, s7, r6.w
      mad r5.x, r5.y, l(49.000000), r5.x
      mov r11.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.y, r11.xyzx, t7.xxxx, s7, r6.w
      mad r5.x, r7.z, r5.y, r5.x
      mov r9.yw, r8.yyyy
      mad r9.xyzw, cb6[12].zwzw, r9.zwxy, r5.zwzw
      mov r6.xy, r9.zwzz
      mov r6.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.y, r6.xyzx, t7.xxxx, s7, r6.w
      mad r5.x, r10.z, r5.y, r5.x
      mov r9.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.y, r9.xyzx, t7.xxxx, s7, r6.w
      mad r5.x, r7.w, r5.y, r5.x
      mad r6.xy, r8.xyxx, cb6[12].zwzz, r5.zwzz
      mov r6.z, l(1.000000)
      sample_c_lz_aoffimmi_indexable(0,0,0)(texture2darray)(float,float,float,float) r5.y, r6.xyzx, t7.xxxx, s7, r6.w
      mad r5.x, r10.w, r5.y, r5.x
      mul r5.x, r5.x, l(0.006944)
      mad r3.w, r3.w, l(0.000370), -r5.x
      mad r2.w, r4.w, r3.w, r5.x
    endif 
  endif 
endif 
mul r1.yzw, r1.yyzw, r2.wwww
mul r1.x, r1.x, -cb5[13].y
exp r1.x, r1.x
mul r1.xyz, r1.xxxx, r1.yzwy
mul r1.xyz, r1.xyzx, cb5[3].wwww
mul r3.xyz, r0.xxxx, r3.xyzx
mad r0.yzw, r0.yyzw, r4.xxyz, r3.xxyz
mov r3.w, -r0.x
add r1.w, r3.w, l(1.000000)
mad r0.yzw, r1.xxyz, r1.wwww, r0.yyzw
add r1.xyz, r2.xyzx, -cb0[8].xyzx
dp3 r1.x, r1.xyzx, r1.xyzx
sqrt r1.x, r1.x
mad_sat r1.x, r1.x, cb0[17].y, cb0[17].x
mul r1.y, r1.z, cb0[21].y
max r1.y, r1.y, l(-125.000000)
lt r1.z, l(0.000001), |r1.y|
exp r1.w, -r1.y
add r1.w, -r1.w, l(1.000000)
div r1.y, r1.w, r1.y
movc r1.y, r1.z, r1.y, l(1.000000)
mad r1.y, r1.y, cb0[21].x, cb0[17].w
mul r1.x, r1.y, r1.x
mul r1.x, r1.x, -cb0[17].z
exp r1.x, r1.x
mad r1.yzw, -v2.xxyz, r1.xxxx, v2.xxyz
mad r0.yzw, r0.yyzw, r1.xxxx, r1.yyzw
mul r3.xyz, r0.xxxx, r0.yzwy
mad r0.xyzw, v2.wwww, r3.xyzw, l(0.000000, 0.000000, 0.000000, 1.000000)
mul o0.xyz, r0.xyzx, cb0[2].zzzz
mov o0.w, r0.w
ret 
// Approximately 866 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
