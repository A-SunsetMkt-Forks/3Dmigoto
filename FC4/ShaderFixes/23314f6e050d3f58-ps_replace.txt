
cbuffer CPostFxHDRBloomEffectsParameterProvider : register(b0)
{
  float4 _BloomSmoothingParams : packoffset(c0);
  float4 _BokehParams : packoffset(c1);
  float4 _ColorAdjustment : packoffset(c2);
  float4 _ColorBurnColorNormalized : packoffset(c3);
  float4 _ColorBurnParameters : packoffset(c4);
  float4 _ColorMaskAlphaOffset : packoffset(c5);
  float4 _ColorMaskColor : packoffset(c6);
  float4 _ColorMaskUVScaleBias : packoffset(c7);
  float4 _ColorSeparationOpacity : packoffset(c8);
  float4 _ColorSeparationUVScaleBias0 : packoffset(c9);
  float4 _ColorSeparationUVScaleBias1 : packoffset(c10);
  float4 _ColorSeparationUVScaleBias2 : packoffset(c11);
  float4 _CombineSettings : packoffset(c12);
  float4 _DistortionSharpnessAndFactor : packoffset(c13);
  float4 _FocusDistances : packoffset(c14);
  float4 _LoResTextureSize : packoffset(c15);
  float4 _LuminanceParams : packoffset(c16);
  float4 _OverlayColor : packoffset(c17);
  float4 _SourceDistortionTextureScaleBias : packoffset(c18);
  float4 _VignetteNoiseParams : packoffset(c19);
  float2 _ExposureZoom : packoffset(c20);
  float3 _ColorBurnColor : packoffset(c21);
  float _FocusPlane : packoffset(c21.w);
}
SamplerState LinearTextureSampler_s : register(s0);
Texture2D<float4> BloomSampler0 : register(t0);
Texture2D<float4> BloomSampler1 : register(t1);
Texture2D<float4> BloomSampler2 : register(t2);
Texture2D<float4> BloomSampler3 : register(t3);
Texture2D<float4> DirtyLensSampler : register(t4);
Texture2D<float4> GodRaysSampler : register(t5);

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  float4 v0 : SV_Position0,
  float2 v1 : TEXCOORD0,
  uint v2 : SV_IsFrontFace0,
  out float4 o0 : SV_Target0)
{
  float4 r0,r1,r2,r3;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = BloomSampler0.SampleLevel(LinearTextureSampler_s, v1.xy, 0.000000000e+000).xyz;
  r1.xyz = BloomSampler1.SampleLevel(LinearTextureSampler_s, v1.xy, 0.000000000e+000).xyz;
  r0.xyz = r1.xyz + r0.xyz;
  BloomSampler2.GetDimensions(0, fDest.x, fDest.y, fDest.z);
  r0.w = fDest.y;
  r1.y = 2.500000000e-001 / r0.w;
  r1.xz = float2(0.000000e+000,0.000000e+000);
  r2.xy = v1.xy + r1.xy;
  r1.xy = v1.xy + -r1.xy;
  r3.xyz = BloomSampler2.SampleLevel(LinearTextureSampler_s, r1.xy, 0.000000000e+000).xyz;
  r2.xyz = BloomSampler2.SampleLevel(LinearTextureSampler_s, r2.xy, 0.000000000e+000).xyz;
  r2.xyz = r2.xyz + r3.xyz;
  r0.xyz = r2.xyz * float3(4.000000e-001,4.000000e-001,4.000000e-001) + r0.xyz;
  BloomSampler3.GetDimensions(0, fDest.x, fDest.y, fDest.z);
  r0.w = fDest.y;
  r1.w = 2.500000000e-001 / r0.w;
  r1.xy = v1.xy + r1.zw;
  r1.zw = v1.xy + -r1.zw;
  r2.xyz = BloomSampler3.SampleLevel(LinearTextureSampler_s, r1.zw, 0.000000000e+000).xyz;
  r1.xyz = BloomSampler3.SampleLevel(LinearTextureSampler_s, r1.xy, 0.000000000e+000).xyz;
  r1.xyz = r1.xyz + r2.xyz;
  r0.xyz = r1.xyz * float3(4.000000e-001,4.000000e-001,4.000000e-001) + r0.xyz;
  r1.xyz = _CombineSettings.yyy + r0.xyz;
  r1.xyz = max(r1.xyz, float3(0.000000e+000,0.000000e+000,0.000000e+000));
  r1.xyz = _CombineSettings.zzz * r1.xyz;

float4 stereo = StereoParams.Load(0);

// Adjust depth of dirty lens effect, stretching to avoid the effect clipping
// at edge of screen:
float2 coords = v1.xy;
float multiplier = stereo.x * 0.85;
if (stereo.z == 1) /* left eye */
	coords.x = (1 + multiplier) * (coords.x - 1) + 1;
else /* right eye */
	coords.x *= 1 - multiplier;

  r2.xyz = DirtyLensSampler.SampleLevel(LinearTextureSampler_s, coords, 0.000000000e+000).xyz;

// Alternatively do this to disable the dirty lens while leaving bloom (I'd
// make this user configurable, but I've run out of ini params):
// r2.xyz = 0;

  r0.xyz = r1.xyz * r2.xyz + r0.xyz;
coords.x = v1.x - stereo.x / 2;
r1.xyz = GodRaysSampler.SampleLevel(LinearTextureSampler_s, coords, 0.000000000e+000).xyz;
  r0.xyz = _CombineSettings.xxx * r1.xyz + r0.xyz;
  o0.xyz = _CombineSettings.www * r0.xyz;
  o0.w = 0.000000000e+000;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer CPostFxHDRBloomEffectsParameterProvider
// {
//
//   float4 _BloomSmoothingParams;      // Offset:    0 Size:    16 [unused]
//   float4 _BokehParams;               // Offset:   16 Size:    16 [unused]
//   float4 _ColorAdjustment;           // Offset:   32 Size:    16 [unused]
//   float4 _ColorBurnColorNormalized;  // Offset:   48 Size:    16 [unused]
//   float4 _ColorBurnParameters;       // Offset:   64 Size:    16 [unused]
//   float4 _ColorMaskAlphaOffset;      // Offset:   80 Size:    16 [unused]
//   float4 _ColorMaskColor;            // Offset:   96 Size:    16 [unused]
//   float4 _ColorMaskUVScaleBias;      // Offset:  112 Size:    16 [unused]
//   float4 _ColorSeparationOpacity;    // Offset:  128 Size:    16 [unused]
//   float4 _ColorSeparationUVScaleBias0;// Offset:  144 Size:    16 [unused]
//   float4 _ColorSeparationUVScaleBias1;// Offset:  160 Size:    16 [unused]
//   float4 _ColorSeparationUVScaleBias2;// Offset:  176 Size:    16 [unused]
//   float4 _CombineSettings;           // Offset:  192 Size:    16
//   float4 _DistortionSharpnessAndFactor;// Offset:  208 Size:    16 [unused]
//   float4 _FocusDistances;            // Offset:  224 Size:    16 [unused]
//   float4 _LoResTextureSize;          // Offset:  240 Size:    16 [unused]
//   float4 _LuminanceParams;           // Offset:  256 Size:    16 [unused]
//   float4 _OverlayColor;              // Offset:  272 Size:    16 [unused]
//   float4 _SourceDistortionTextureScaleBias;// Offset:  288 Size:    16 [unused]
//   float4 _VignetteNoiseParams;       // Offset:  304 Size:    16 [unused]
//   float2 _ExposureZoom;              // Offset:  320 Size:     8 [unused]
//   float3 _ColorBurnColor;            // Offset:  336 Size:    12 [unused]
//   float _FocusPlane;                 // Offset:  348 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// LinearTextureSampler              sampler      NA          NA    0        1
// BloomSampler0                     texture  float4          2d    0        1
// BloomSampler1                     texture  float4          2d    1        1
// BloomSampler2                     texture  float4          2d    2        1
// BloomSampler3                     texture  float4          2d    3        1
// DirtyLensSampler                  texture  float4          2d    4        1
// GodRaysSampler                    texture  float4          2d    5        1
// CPostFxHDRBloomEffectsParameterProvider    cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// SV_IsFrontFace           0   x           2    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[13], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
sample_l_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t1.xyzw, s0, l(0.000000)
add r0.xyz, r0.xyzx, r1.xyzx
resinfo_indexable(texture2d)(float,float,float,float) r0.w, l(0), t2.xzwy
div r1.y, l(0.250000), r0.w
mov r1.xz, l(0,0,0,0)
add r2.xy, r1.xyxx, v1.xyxx
add r1.xy, -r1.xyxx, v1.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r3.xyz, r1.xyxx, t2.xyzw, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t2.xyzw, s0, l(0.000000)
add r2.xyz, r3.xyzx, r2.xyzx
mad r0.xyz, r2.xyzx, l(0.400000, 0.400000, 0.400000, 0.000000), r0.xyzx
resinfo_indexable(texture2d)(float,float,float,float) r0.w, l(0), t3.xzwy
div r1.w, l(0.250000), r0.w
add r1.xy, r1.zwzz, v1.xyxx
add r1.zw, -r1.zzzw, v1.xxxy
sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, r1.zwzz, t3.xyzw, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t3.xyzw, s0, l(0.000000)
add r1.xyz, r2.xyzx, r1.xyzx
mad r0.xyz, r1.xyzx, l(0.400000, 0.400000, 0.400000, 0.000000), r0.xyzx
add r1.xyz, r0.xyzx, cb0[12].yyyy
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r1.xyz, r1.xyzx, cb0[12].zzzz
sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t4.xyzw, s0, l(0.000000)
mad r0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t5.xyzw, s0, l(0.000000)
mad r0.xyz, cb0[12].xxxx, r1.xyzx, r0.xyzx
mul o0.xyz, r0.xyzx, cb0[12].wwww
mov o0.w, l(0)
ret 
// Approximately 30 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Recompiled ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20789
//
//
// Buffer Definitions: 
//
// cbuffer CPostFxHDRBloomEffectsParameterProvider
// {
//
//   float4 _BloomSmoothingParams;      // Offset:    0 Size:    16 [unused]
//   float4 _BokehParams;               // Offset:   16 Size:    16 [unused]
//   float4 _ColorAdjustment;           // Offset:   32 Size:    16 [unused]
//   float4 _ColorBurnColorNormalized;  // Offset:   48 Size:    16 [unused]
//   float4 _ColorBurnParameters;       // Offset:   64 Size:    16 [unused]
//   float4 _ColorMaskAlphaOffset;      // Offset:   80 Size:    16 [unused]
//   float4 _ColorMaskColor;            // Offset:   96 Size:    16 [unused]
//   float4 _ColorMaskUVScaleBias;      // Offset:  112 Size:    16 [unused]
//   float4 _ColorSeparationOpacity;    // Offset:  128 Size:    16 [unused]
//   float4 _ColorSeparationUVScaleBias0;// Offset:  144 Size:    16 [unused]
//   float4 _ColorSeparationUVScaleBias1;// Offset:  160 Size:    16 [unused]
//   float4 _ColorSeparationUVScaleBias2;// Offset:  176 Size:    16 [unused]
//   float4 _CombineSettings;           // Offset:  192 Size:    16
//   float4 _DistortionSharpnessAndFactor;// Offset:  208 Size:    16 [unused]
//   float4 _FocusDistances;            // Offset:  224 Size:    16 [unused]
//   float4 _LoResTextureSize;          // Offset:  240 Size:    16 [unused]
//   float4 _LuminanceParams;           // Offset:  256 Size:    16 [unused]
//   float4 _OverlayColor;              // Offset:  272 Size:    16 [unused]
//   float4 _SourceDistortionTextureScaleBias;// Offset:  288 Size:    16 [unused]
//   float4 _VignetteNoiseParams;       // Offset:  304 Size:    16 [unused]
//   float2 _ExposureZoom;              // Offset:  320 Size:     8 [unused]
//   float3 _ColorBurnColor;            // Offset:  336 Size:    12 [unused]
//   float _FocusPlane;                 // Offset:  348 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// LinearTextureSampler_s            sampler      NA          NA    0        1
// BloomSampler0                     texture  float4          2d    0        1
// BloomSampler1                     texture  float4          2d    1        1
// BloomSampler2                     texture  float4          2d    2        1
// BloomSampler3                     texture  float4          2d    3        1
// DirtyLensSampler                  texture  float4          2d    4        1
// GodRaysSampler                    texture  float4          2d    5        1
// CPostFxHDRBloomEffectsParameterProvider    cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// SV_IsFrontFace           0   x           2    FFACE    uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Target                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[13], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t3
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t5
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
sample_l_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t1.xyzw, s0, l(0.000000)
add r0.xyz, r0.xyzx, r1.xyzx
resinfo_indexable(texture2d)(float,float,float,float) r0.w, l(0), t2.xzwy
div r1.y, l(0.250000), r0.w
mov r1.xz, l(0,0,0,0)
add r2.xy, -r1.xyxx, v1.xyxx
add r1.xy, r1.xyxx, v1.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r3.xyz, r1.xyxx, t2.xyzw, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t2.xyzw, s0, l(0.000000)
add r2.xyz, r2.xyzx, r3.xyzx
mad r0.xyz, r2.xyzx, l(0.400000, 0.400000, 0.400000, 0.000000), r0.xyzx
resinfo_indexable(texture2d)(float,float,float,float) r0.w, l(0), t3.xzwy
div r1.w, l(0.250000), r0.w
add r1.xy, -r1.zwzz, v1.xyxx
add r1.zw, r1.zzzw, v1.xxxy
sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, r1.zwzz, t3.xyzw, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t3.xyzw, s0, l(0.000000)
add r1.xyz, r1.xyzx, r2.xyzx
mad r0.xyz, r1.xyzx, l(0.400000, 0.400000, 0.400000, 0.000000), r0.xyzx
add r1.xyz, r0.xyzx, cb0[12].yyyy
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r1.xyz, r1.xyzx, cb0[12].zzzz
sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t4.xyzw, s0, l(0.000000)
mad r0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t5.xyzw, s0, l(0.000000)
mad r0.xyz, cb0[12].xxxx, r1.xyzx, r0.xyzx
mul o0.xyz, r0.xyzx, cb0[12].wwww
mov o0.w, l(0)
ret 
// Approximately 30 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
