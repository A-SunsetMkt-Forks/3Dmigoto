//Lights
cbuffer CViewportShaderParameterProvider : register(b0)
{
  float4 _AmbientColorMultiplier : packoffset(c0);
  float4 _AmbientOcclusionRanges_SunOcclusionFactor : packoffset(c1);
  float4 _BloomAdaptationFactor : packoffset(c2);
  float4 _CameraDirection_FOVDeg : packoffset(c3);
  float4 _CameraDistances : packoffset(c4);
  float4 _CameraNearPlaneSize : packoffset(c5);
  float4 _CameraPositionFractions_ZOffsetWS : packoffset(c6);
  float4 _CameraPositionFractions_ZOffsetWS_Previous : packoffset(c7);
  float4 _CameraPosition_DistanceScale : packoffset(c8);
  float4 _CameraPosition_DistanceScale_Previous : packoffset(c9);
  float4x4 _CullingViewProjectionMatrix : packoffset(c10);
  float4 _DepthScale : packoffset(c14);
  float4 _DepthTextureRcpSize : packoffset(c15);
  float4 _DepthTextureScaleOffset : packoffset(c16);
  float4 _FogParams : packoffset(c17);
  float4 _FogSHB : packoffset(c18);
  float4 _FogSHG : packoffset(c19);
  float4 _FogSHR : packoffset(c20);
  float4 _HeightFogParams : packoffset(c21);
  float4x4 _InvProjectionMatrix : packoffset(c22);
  float4x4 _InvViewMatrix : packoffset(c26);
  float4x4 _ProjectionMatrix : packoffset(c30);
  float4 _TempSunDirection : packoffset(c34);
  float4x4 _ViewMatrix : packoffset(c35);
  float4 _ViewPoint_ShadowProjDepthMin : packoffset(c39);
  float4x4 _ViewProjectionMatrix : packoffset(c40);
  float4x4 _ViewRotProjectionMatrix : packoffset(c44);
  float4x4 _ViewRotProjectionMatrix_Previous : packoffset(c48);
  float4 _ViewportSize : packoffset(c52);
  float2 _MotionVectorOffsets : packoffset(c53);
  float3 _CameraRight : packoffset(c54);
  float3 _CameraUp : packoffset(c55);
  float3 _EnvironmentMapColorOffset : packoffset(c56);
  float3 _EnvironmentMapColorScale : packoffset(c57);
}

cbuffer CSceneGeometry : register(b1)
{
  float4 _GeometryPickingID : packoffset(c0);
  float4 _MeshDecompression : packoffset(c1);
  float4 _NormalizedXYBBox : packoffset(c2);
}

cbuffer CDeferredInteriorAmbientProvider : register(b2)
{
  float4 _AmbientTextureSize : packoffset(c0);
  float4 _BlurOffsets[9] : packoffset(c1);
  float4 _InteriorAmbientParams : packoffset(c10);
  float4 _InteriorProbePartA : packoffset(c11);
  float4 _InteriorProbePartB : packoffset(c12);
  float4 _InteriorProbePartC : packoffset(c13);
  float4x4 _InteriorWorldMatrix : packoffset(c14);
  float4 _QuadParams : packoffset(c18);
  float4 _SrcTexHalfPixelOffset : packoffset(c19);
  float4 _g_blurTextureDim : packoffset(c20);
  float4 _g_vBlurWeights0_A : packoffset(c21);
  float4 _g_vBlurWeights0_B : packoffset(c22);
  float4 _g_vBlurWeights0_G : packoffset(c23);
  float4 _g_vBlurWeights0_R : packoffset(c24);
  float4 _g_vBlurWeights1_A : packoffset(c25);
  float4 _g_vBlurWeights1_B : packoffset(c26);
  float4 _g_vBlurWeights1_G : packoffset(c27);
  float4 _g_vBlurWeights1_R : packoffset(c28);
  float4 _g_vBlurWeights2_A : packoffset(c29);
  float4 _g_vBlurWeights2_B : packoffset(c30);
  float4 _g_vBlurWeights2_G : packoffset(c31);
  float4 _g_vBlurWeights2_R : packoffset(c32);
  float4 _verticalBlurWeights : packoffset(c33);
  float2 _HalfOffset : packoffset(c34);
  float3 _CamVectorOffset : packoffset(c35);
  float3 _CamVectorScaleX : packoffset(c36);
  float3 _CamVectorScaleY : packoffset(c37);
  float _MaskOffset : packoffset(c37.w);
  float _NormalizationFactor : packoffset(c38);
}

Texture2D<float4> StereoParams : register(t125);
Texture1D<float4> IniParams : register(t120);

void main(
  int4 v0 : POSITION0,
  out float4 o0 : SV_Position0,
  out float4 o1 : TEXCOORD0,
  out float2 o2 : TEXCOORD1,
  out float2 p2 : TEXCOORD2)
{
  float4 r0,r1;
  uint4 bitmask;
  r0.xyz = v0.xyz;
  r0.xyz = r0.xyz * _MeshDecompression.yyy + _MeshDecompression.xxx;
  r0.w = 1.000000000e+000;
  r1.x = dot(r0.xyzw, _InteriorWorldMatrix._m00_m10_m20_m30);
  r1.y = dot(r0.xyzw, _InteriorWorldMatrix._m01_m11_m21_m31);
  r1.z = dot(r0.xyzw, _InteriorWorldMatrix._m02_m12_m22_m32);
  r0.xyz = -_CameraPosition_DistanceScale.xyz + r1.xyz;
  r0.w = dot(r0.xyz, r0.xyz);
  r0.w = rsqrt(r0.w);
  r0.xyz = r0.xyz * r0.www;
  r0.xyz = r0.xyz * float3(1.500000e-001,1.500000e-001,1.500000e-001) + r1.xyz;
  r0.w = 1.000000000e+000;
  
//Stereo correction
float4 r35, r32, r33, r34;
r35.xyz = r0.xyz; 
r35.w = 1.0;
r32.x = dot(r35.xyzw, _ViewProjectionMatrix._m00_m10_m20_m30);
r32.y = dot(r35.xyzw, _ViewProjectionMatrix._m01_m11_m21_m31);
r32.z = dot(r35.xyzw, _ViewProjectionMatrix._m02_m12_m22_m32);
r32.w = dot(r35.xyzw, _ViewProjectionMatrix._m03_m13_m23_m33);  

float4 stereo = StereoParams.Load(0);
r32.x += stereo.x * (r32.w - stereo.y);
  
r33.x = dot(r32.xyzw, _InvProjectionMatrix._m00_m10_m20_m30);
r33.y = dot(r32.xyzw, _InvProjectionMatrix._m01_m11_m21_m31);
r33.z = dot(r32.xyzw, _InvProjectionMatrix._m02_m12_m22_m32);
r33.w = dot(r32.xyzw, _InvProjectionMatrix._m03_m13_m23_m33); 
  
r34.x = dot(r33.xyzw, _InvViewMatrix._m00_m10_m20_m30);
r34.y = dot(r33.xyzw, _InvViewMatrix._m01_m11_m21_m31);
r34.z = dot(r33.xyzw, _InvViewMatrix._m02_m12_m22_m32);
r34.w = dot(r33.xyzw, _InvViewMatrix._m03_m13_m23_m33);   

r0.xyzw = r34.xyzw;  
  
  r1.x = dot(r0.xyzw, _ViewProjectionMatrix._m00_m10_m20_m30);
  r1.y = dot(r0.xyzw, _ViewProjectionMatrix._m01_m11_m21_m31);
  r1.w = dot(r0.xyzw, _ViewProjectionMatrix._m03_m13_m23_m33);
  o0.z = dot(r0.xyzw, _ViewProjectionMatrix._m02_m12_m22_m32);
  r0.xyz = -_CameraPosition_DistanceScale.xyz + r0.xyz;
  r0.x = dot(_CameraDirection_FOVDeg.xyz, r0.xyz);
  o1.w = _CameraDistances.w * r0.x;

  o0.xyw = r1.xyw;

  r0.xyzw = _DepthTextureScaleOffset.xyzw * r1.xyww;
  o1.z = r1.w;
  o1.xy = r0.xy + r0.zw;
  // o2.xyzw = float4(0.000000e+000,0.000000e+000,0.000000e+000,0.000000e+000);
o2.xy = float2(0.000000e+000,0.000000e+000);  
p2.xy = float2(0.000000e+000,0.000000e+000);
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Original ASM ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer CViewportShaderParameterProvider
// {
//
//   float4 _AmbientColorMultiplier;    // Offset:    0 Size:    16 [unused]
//   float4 _AmbientOcclusionRanges_SunOcclusionFactor;// Offset:   16 Size:    16 [unused]
//   float4 _BloomAdaptationFactor;     // Offset:   32 Size:    16 [unused]
//   float4 _CameraDirection_FOVDeg;    // Offset:   48 Size:    16
//   float4 _CameraDistances;           // Offset:   64 Size:    16
//   float4 _CameraNearPlaneSize;       // Offset:   80 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS;// Offset:   96 Size:    16 [unused]
//   float4 _CameraPositionFractions_ZOffsetWS_Previous;// Offset:  112 Size:    16 [unused]
//   float4 _CameraPosition_DistanceScale;// Offset:  128 Size:    16
//   float4 _CameraPosition_DistanceScale_Previous;// Offset:  144 Size:    16 [unused]
//   float4x4 _CullingViewProjectionMatrix;// Offset:  160 Size:    64 [unused]
//   float4 _DepthScale;                // Offset:  224 Size:    16 [unused]
//   float4 _DepthTextureRcpSize;       // Offset:  240 Size:    16 [unused]
//   float4 _DepthTextureScaleOffset;   // Offset:  256 Size:    16
//   float4 _FogParams;                 // Offset:  272 Size:    16 [unused]
//   float4 _FogSHB;                    // Offset:  288 Size:    16 [unused]
//   float4 _FogSHG;                    // Offset:  304 Size:    16 [unused]
//   float4 _FogSHR;                    // Offset:  320 Size:    16 [unused]
//   float4 _HeightFogParams;           // Offset:  336 Size:    16 [unused]
//   float4x4 _InvProjectionMatrix;     // Offset:  352 Size:    64 [unused]
//   float4x4 _InvViewMatrix;           // Offset:  416 Size:    64 [unused]
//   float4x4 _ProjectionMatrix;        // Offset:  480 Size:    64 [unused]
//   float4 _TempSunDirection;          // Offset:  544 Size:    16 [unused]
//   float4x4 _ViewMatrix;              // Offset:  560 Size:    64 [unused]
//   float4 _ViewPoint_ShadowProjDepthMin;// Offset:  624 Size:    16 [unused]
//   float4x4 _ViewProjectionMatrix;    // Offset:  640 Size:    64
//   float4x4 _ViewRotProjectionMatrix; // Offset:  704 Size:    64 [unused]
//   float4x4 _ViewRotProjectionMatrix_Previous;// Offset:  768 Size:    64 [unused]
//   float4 _ViewportSize;              // Offset:  832 Size:    16 [unused]
//   float2 _MotionVectorOffsets;       // Offset:  848 Size:     8 [unused]
//   float3 _CameraRight;               // Offset:  864 Size:    12 [unused]
//   float3 _CameraUp;                  // Offset:  880 Size:    12 [unused]
//   float3 _EnvironmentMapColorOffset; // Offset:  896 Size:    12 [unused]
//   float3 _EnvironmentMapColorScale;  // Offset:  912 Size:    12 [unused]
//
// }
//
// cbuffer CSceneGeometry
// {
//
//   float4 _GeometryPickingID;         // Offset:    0 Size:    16 [unused]
//   float4 _MeshDecompression;         // Offset:   16 Size:    16
//   float4 _NormalizedXYBBox;          // Offset:   32 Size:    16 [unused]
//
// }
//
// cbuffer CDeferredInteriorAmbientProvider
// {
//
//   float4 _AmbientTextureSize;        // Offset:    0 Size:    16 [unused]
//   float4 _BlurOffsets[9];            // Offset:   16 Size:   144 [unused]
//   float4 _InteriorAmbientParams;     // Offset:  160 Size:    16 [unused]
//   float4 _InteriorProbePartA;        // Offset:  176 Size:    16 [unused]
//   float4 _InteriorProbePartB;        // Offset:  192 Size:    16 [unused]
//   float4 _InteriorProbePartC;        // Offset:  208 Size:    16 [unused]
//   float4x4 _InteriorWorldMatrix;     // Offset:  224 Size:    64
//   float4 _QuadParams;                // Offset:  288 Size:    16 [unused]
//   float4 _SrcTexHalfPixelOffset;     // Offset:  304 Size:    16 [unused]
//   float4 _g_blurTextureDim;          // Offset:  320 Size:    16 [unused]
//   float4 _g_vBlurWeights0_A;         // Offset:  336 Size:    16 [unused]
//   float4 _g_vBlurWeights0_B;         // Offset:  352 Size:    16 [unused]
//   float4 _g_vBlurWeights0_G;         // Offset:  368 Size:    16 [unused]
//   float4 _g_vBlurWeights0_R;         // Offset:  384 Size:    16 [unused]
//   float4 _g_vBlurWeights1_A;         // Offset:  400 Size:    16 [unused]
//   float4 _g_vBlurWeights1_B;         // Offset:  416 Size:    16 [unused]
//   float4 _g_vBlurWeights1_G;         // Offset:  432 Size:    16 [unused]
//   float4 _g_vBlurWeights1_R;         // Offset:  448 Size:    16 [unused]
//   float4 _g_vBlurWeights2_A;         // Offset:  464 Size:    16 [unused]
//   float4 _g_vBlurWeights2_B;         // Offset:  480 Size:    16 [unused]
//   float4 _g_vBlurWeights2_G;         // Offset:  496 Size:    16 [unused]
//   float4 _g_vBlurWeights2_R;         // Offset:  512 Size:    16 [unused]
//   float4 _verticalBlurWeights;       // Offset:  528 Size:    16 [unused]
//   float2 _HalfOffset;                // Offset:  544 Size:     8 [unused]
//   float3 _CamVectorOffset;           // Offset:  560 Size:    12 [unused]
//   float3 _CamVectorScaleX;           // Offset:  576 Size:    12 [unused]
//   float3 _CamVectorScaleY;           // Offset:  592 Size:    12 [unused]
//   float _MaskOffset;                 // Offset:  604 Size:     4 [unused]
//   float _NormalizationFactor;        // Offset:  608 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// CViewportShaderParameterProvider    cbuffer      NA          NA    0        1
// CSceneGeometry                    cbuffer      NA          NA    1        1
// CDeferredInteriorAmbientProvider    cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE     int   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 1   xy          2     NONE   float   xy  
// TEXCOORD                 2     zw        2     NONE   float     zw
//
vs_4_0
dcl_constantbuffer cb0[44], immediateIndexed
dcl_constantbuffer cb1[2], immediateIndexed
dcl_constantbuffer cb2[17], immediateIndexed
dcl_input v0.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o2.zw
dcl_temps 2
itof r0.xyz, v0.xyzx
mad r0.xyz, r0.xyzx, cb1[1].yyyy, cb1[1].xxxx
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, cb2[14].xyzw
dp4 r1.y, r0.xyzw, cb2[15].xyzw
dp4 r1.z, r0.xyzw, cb2[16].xyzw
add r0.xyz, r1.xyzx, -cb0[8].xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mad r0.xyz, r0.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000), r1.xyzx
mov r0.w, l(1.000000)
dp4 r1.x, r0.xyzw, cb0[40].xyzw
dp4 r1.y, r0.xyzw, cb0[41].xyzw
dp4 r1.w, r0.xyzw, cb0[43].xyzw
dp4 o0.z, r0.xyzw, cb0[42].xyzw
add r0.xyz, r0.xyzx, -cb0[8].xyzx
dp3 r0.x, cb0[3].xyzx, r0.xyzx
mul o1.w, r0.x, cb0[4].w
mov o0.xyw, r1.xyxw
mul r0.xyzw, r1.xyww, cb0[16].xyzw
mov o1.z, r1.w
add o1.xy, r0.zwzz, r0.xyxx
mov o2.xyzw, l(0,0,0,0)
ret 
// Approximately 25 instruction slots used

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/


/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~ HLSL errors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
J:\SteamLibrary\steamapps\common\Far Cry 4\wrapper1349(115,3-9): error X3018: invalid subscript 'xyzw'
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
    