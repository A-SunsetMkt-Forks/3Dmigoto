// ---- Created with 3Dmigoto v1.3.2 on Fri Nov 16 07:09:48 2018
Texture2D<float4> t4 : register(t4);

SamplerState s4_s : register(s4);

cbuffer cb10 : register(b10)
{
  float4 cb10[9];
}

cbuffer cb0 : register(b0)
{
  float4 cb0[23];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);
Texture2D<float4> StereoParams : register(t125);


void main(
  uint v0 : SV_VertexID0,
  uint v1 : SV_InstanceID0,
  out float4 o0 : SV_Position0,
  out float2 o1 : TEXCOORD0,
  out float p1 : TEXCOORD2,
  out float4 o2 : TEXCOORD1)
{
// Needs manual fix for instruction:
// unknown dcl_: dcl_resource_structured t0, 48 
// Needs manual fix for instruction:
// unknown dcl_: dcl_input_sgv v0.x, vertex_id
// Needs manual fix for instruction:
// unknown dcl_: dcl_input_sgv v1.x, instance_id
  float4 r0,r1,r2,r3,r4,r5,r6;
  uint4 bitmask, uiDest;
  float4 fDest;

  float4 x0[4];
  x0[0].xy = float2(-1,-1);
  x0[1].xy = float2(-1,1);
  x0[2].xy = float2(1,-1);
  x0[3].xy = float2(1,1);
  r0.x = v0.x;
  r0.xy = x0[r0.x+0].xy;
// Missing reflection info for shader. No names possible.
// Known bad code for instruction (needs manual fix):
ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r1.xy, v1.x, l(32), t0.xyxx
r1.x = no_StructuredBufferName[no_srcAddressRegister].no_srcByteOffsetName.swiz;
r1.y = no_StructuredBufferName[no_srcAddressRegister].no_srcByteOffsetName.swiz;
  r1.z = -r1.x;
  r0.z = dot(r0.yx, r1.yz);
  r0.w = dot(r0.yx, r1.xy);
  o1.xy = r0.xy * float2(0.5,0.5) + float2(0.5,0.5);
// Missing reflection info for shader. No names possible.
// Known bad code for instruction (needs manual fix):
ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r1.xyz, v1.x, l(16), t0.xyzx
r1.x = no_StructuredBufferName[no_srcAddressRegister].no_srcByteOffsetName.swiz;
r1.y = no_StructuredBufferName[no_srcAddressRegister].no_srcByteOffsetName.swiz;
r1.z = no_StructuredBufferName[no_srcAddressRegister].no_srcByteOffsetName.swiz;
  r0.x = dot(r1.xyz, r1.xyz);
  r0.y = cmp(0.00100000005 < r0.x);
  r1.w = sqrt(r0.x);
  r0.x = rsqrt(r0.x);
  r1.xyz = r1.zxy * r0.xxx;
  r0.x = r0.y ? r1.w : 0;
  r0.x = min(5, r0.x);
  r2.w = 1;
// Missing reflection info for shader. No names possible.
// Known bad code for instruction (needs manual fix):
ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r3.xyzw, v1.x, l(0), t0.xyzw
r3.x = no_StructuredBufferName[no_srcAddressRegister].no_srcByteOffsetName.swiz;
r3.y = no_StructuredBufferName[no_srcAddressRegister].no_srcByteOffsetName.swiz;
r3.z = no_StructuredBufferName[no_srcAddressRegister].no_srcByteOffsetName.swiz;
r3.w = no_StructuredBufferName[no_srcAddressRegister].no_srcByteOffsetName.swiz;
  r2.xyz = r3.xyz;
  r0.y = dot(cb0[3].xyzw, r2.xyzw);
  r0.y = cb10[6].z * r0.y;
// Missing reflection info for shader. No names possible.
// Known bad code for instruction (needs manual fix):
ld_structured_indexable(structured_buffer, stride=48)(mixed,mixed,mixed,mixed) r1.w, v1.x, l(44), t0.xxxx
r1.w = no_StructuredBufferName[no_srcAddressRegister].no_srcByteOffsetName.swiz;
  r1.w = (int)r1.w;
  r1.w = r1.w * 4 + 0.5;
  r4.y = cb10[8].w * r1.w;
  r4.x = saturate(r3.w);
  r1.w = t4.SampleLevel(s4_s, r4.xy, 0, int2(0, 2)).w;
  r0.y = max(abs(r1.w), r0.y);
  r2.w = cmp(0 < r1.w);
  r3.w = cmp(r1.w < 0);
  r2.w = (int)r3.w + (int)-r2.w;
  r2.w = (int)r2.w;
  r0.y = r2.w * r0.y;
  r4.zw = t4.SampleLevel(s4_s, r4.xy, 0, int2(0, 3)).xz;
  r5.xyzw = t4.SampleLevel(s4_s, r4.xy, 0, int2(0, 1)).xyzw;
  r0.x = r0.x * r4.z + r0.y;
  p1.x = r4.w;
  r4.xyz = r1.yzx * r0.xxx;
  r4.xyz = r4.xyz * r0.zzz;
  r3.xyz = cb0[22].yzx + -r3.yzx;
  r0.x = dot(r3.xyz, r3.xyz);
  r0.x = rsqrt(r0.x);
  r3.xyz = r3.xyz * r0.xxx;
  r6.xyz = r3.xyz * r1.xyz;
  r1.xyz = r1.zxy * r3.yzx + -r6.xyz;
  r0.x = dot(r1.xyz, r1.xyz);
  r0.x = rsqrt(r0.x);
  r1.xyz = r1.xyz * r0.xxx;
  r1.xyz = r1.xyz * r0.yyy;
  r0.x = saturate(r1.w / r0.y);
  r3.xyzw = r5.xyzw * r0.xxxx;
  r0.xyz = -r0.www * r1.xyz + -r4.xyz;
  r0.xyz = r2.xyz + r0.xyz;
  r0.w = 1;
  o0.x = dot(r0.xyzw, cb0[0].xyzw);
  o0.y = dot(r0.xyzw, cb0[1].xyzw);
  o0.z = dot(r0.xyzw, cb0[2].xyzw);
  o0.w = dot(r0.xyzw, cb0[3].xyzw);
  o2.w = saturate(r3.w);
  o2.xyz = r3.xyz;
  return;
}